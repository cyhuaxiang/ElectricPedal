

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Aug 18 09:05:00 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataCOMRAM
    48  001378                     __pidataCOMRAM:
    49                           	opt stack 0
    50                           
    51                           ;initializer for AdcPro@index
    52  001378  01                 	db	1
    53                           
    54                           ;initializer for SysNormalWaitSleep@tempPedalRunFlag
    55  001379  AA                 	db	170
    56  0000                     _BRGCON1	set	3651
    57  0000                     _BRGCON2	set	3652
    58  0000                     _BRGCON3	set	3653
    59  0000                     _RXF0EIDH	set	3810
    60  0000                     _RXF0EIDL	set	3811
    61  0000                     _RXF0SIDH	set	3808
    62  0000                     _RXF0SIDL	set	3809
    63  0000                     _RXFCON0	set	3654
    64  0000                     _RXFCON1	set	3655
    65  0000                     _RXM0EIDH	set	3834
    66  0000                     _RXM0EIDL	set	3835
    67  0000                     _RXM0SIDH	set	3832
    68  0000                     _RXM0SIDL	set	3833
    69  0000                     _ANCON0	set	3933
    70  0000                     _TXB0CON	set	3872
    71  0000                     _TXB0CONbits	set	3872
    72  0000                     _TXB0D0	set	3878
    73  0000                     _TXB0D1	set	3879
    74  0000                     _TXB0D2	set	3880
    75  0000                     _TXB0D3	set	3881
    76  0000                     _TXB0D4	set	3882
    77  0000                     _TXB0D5	set	3883
    78  0000                     _TXB0D6	set	3884
    79  0000                     _TXB0D7	set	3885
    80  0000                     _TXB0DLC	set	3877
    81  0000                     _TXB0DLCbits	set	3877
    82  0000                     _TXB0SIDH	set	3873
    83  0000                     _TXB0SIDL	set	3874
    84  0000                     _TXB0SIDLbits	set	3874
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _CANCON	set	3951
    92  0000                     _CANSTAT	set	3950
    93  0000                     _CANSTATbits	set	3950
    94  0000                     _ECANCON	set	3954
    95  0000                     _INTCON2bits	set	4081
    96  0000                     _INTCONbits	set	4082
    97  0000                     _IPR5bits	set	3960
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _OSCTUNEbits	set	3995
   100  0000                     _PIE5bits	set	3958
   101  0000                     _PIR5	set	3959
   102  0000                     _PIR5bits	set	3959
   103  0000                     _RCONbits	set	4048
   104  0000                     _RXB0CON	set	3936
   105  0000                     _RXB0CONbits	set	3936
   106  0000                     _RXB0D0	set	3942
   107  0000                     _RXB0D1	set	3943
   108  0000                     _RXB0D2	set	3944
   109  0000                     _RXB0D3	set	3945
   110  0000                     _RXB0D4	set	3946
   111  0000                     _RXB0D5	set	3947
   112  0000                     _RXB0D6	set	3948
   113  0000                     _RXB0D7	set	3949
   114  0000                     _RXB0DLC	set	3941
   115  0000                     _RXB0DLCbits	set	3941
   116  0000                     _RXB0SIDH	set	3937
   117  0000                     _RXB0SIDL	set	3938
   118  0000                     _RXB0SIDLbits	set	3938
   119  0000                     _T0CON	set	4053
   120  0000                     _T0CONbits	set	4053
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TRISA	set	3986
   124  0000                     _LATB5	set	31829
   125  0000                     _LATB6	set	31830
   126  0000                     _LATB7	set	31831
   127  0000                     _LATC0	set	31832
   128  0000                     _LATC1	set	31833
   129  0000                     _LATC4	set	31836
   130  0000                     _LATC7	set	31839
   131  0000                     _TRISB2	set	31898
   132  0000                     _TRISB3	set	31899
   133  0000                     _TRISB5	set	31901
   134  0000                     _TRISB6	set	31902
   135  0000                     _TRISB7	set	31903
   136  0000                     _TRISC0	set	31904
   137  0000                     _TRISC1	set	31905
   138  0000                     _TRISC4	set	31908
   139  0000                     _TRISC7	set	31911
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  001168                     __pcinit:
   145                           	opt stack 0
   146  001168                     start_initialization:
   147                           	opt stack 0
   148  001168                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Clear objects allocated to BANK0 (71 bytes)
   152  001168  EE00  F060         	lfsr	0,__pbssBANK0
   153  00116C  0E47               	movlw	71
   154  00116E                     clear_0:
   155  00116E  6AEE               	clrf	postinc0,c
   156  001170  06E8               	decf	wreg,f,c
   157  001172  E1FD               	bnz	clear_0
   158                           
   159                           ; Clear objects allocated to COMRAM (40 bytes)
   160  001174  EE00  F001         	lfsr	0,__pbssCOMRAM
   161  001178  0E28               	movlw	40
   162  00117A                     clear_1:
   163  00117A  6AEE               	clrf	postinc0,c
   164  00117C  06E8               	decf	wreg,f,c
   165  00117E  E1FD               	bnz	clear_1
   166                           
   167                           ; Initialize objects allocated to COMRAM (2 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  001180  0E78               	movlw	low __pidataCOMRAM
   170  001182  6EF6               	movwf	tblptrl,c
   171  001184  0E13               	movlw	high __pidataCOMRAM
   172  001186  6EF7               	movwf	tblptrh,c
   173  001188  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  00118A  6EF8               	movwf	tblptru,c
   175  00118C  0009               	tblrd		*+	;fetch initializer
   176  00118E  CFF5 F045          	movff	tablat,__pdataCOMRAM
   177  001192  0009               	tblrd		*+	;fetch initializer
   178  001194  CFF5 F046          	movff	tablat,__pdataCOMRAM+1
   179  001198                     end_of_initialization:
   180                           	opt stack 0
   181  001198                     __end_of__initialization:
   182                           	opt stack 0
   183  001198  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  00119A  6EF8               	movwf	tblptru,c
   185  00119C  0100               	movlb	0
   186  00119E  EFA2  F009         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssCOMRAM
   195  000001                     __pbssCOMRAM:
   196                           	opt stack 0
   197  000001                     AdcPro@write:
   198                           	opt stack 0
   199  000001                     	ds	1
   200  000002                     _T0RH:
   201                           	opt stack 0
   202  000002                     	ds	1
   203  000003                     _T0RL:
   204                           	opt stack 0
   205  000003                     	ds	1
   206  000004                     _SysRunData:
   207                           	opt stack 0
   208  000004                     	ds	25
   209  00001D                     _s_tTmr:
   210                           	opt stack 0
   211  00001D                     	ds	12
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	dataCOMRAM
   220  000045                     __pdataCOMRAM:
   221                           	opt stack 0
   222  000045                     AdcPro@index:
   223                           	opt stack 0
   224  000045                     	ds	1
   225  000046                     SysNormalWaitSleep@tempPedalRunFlag:
   226                           	opt stack 0
   227  000046                     	ds	1
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssBANK0
   236  000060                     __pbssBANK0:
   237                           	opt stack 0
   238  000060                     AdcPro@buf:
   239                           	opt stack 0
   240  000060                     	ds	40
   241  000088                     _g_tCanRxMsg:
   242                           	opt stack 0
   243  000088                     	ds	16
   244  000098                     _g_tCanTxMsg:
   245                           	opt stack 0
   246  000098                     	ds	15
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254                           	psect	cstackBANK0
   255  0000A7                     __pcstackBANK0:
   256                           	opt stack 0
   257  0000A7                     ??_High_ISR:
   258                           
   259                           ; 0 bytes @ 0x0
   260  0000A7                     	ds	14
   261  0000B5                     ??_ADC_StartConversion:
   262  0000B5                     ?_ADC_GetConversionValue:
   263                           	opt stack 0
   264  0000B5                     ?___lwdiv:
   265                           	opt stack 0
   266  0000B5                     ?___lmul:
   267                           	opt stack 0
   268  0000B5                     ADC_Cmd@sta:
   269                           	opt stack 0
   270  0000B5                     PedalCurrentAcq@sta:
   271                           	opt stack 0
   272  0000B5                     CAN_SetMode@mode:
   273                           	opt stack 0
   274  0000B5                     Pedal_Out@dir:
   275                           	opt stack 0
   276  0000B5                     Pedal_Back@dir:
   277                           	opt stack 0
   278  0000B5                     Pedal_Stop@dir:
   279                           	opt stack 0
   280  0000B5                     bsp_StartAutoTimer@_period:
   281                           	opt stack 0
   282  0000B5                     ___lwdiv@dividend:
   283                           	opt stack 0
   284  0000B5                     ___lmul@multiplier:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0xE
   288  0000B5                     	ds	1
   289  0000B6                     ADC_StartConversion@channel:
   290                           	opt stack 0
   291  0000B6                     ADC_Cmd@channel:
   292                           	opt stack 0
   293  0000B6                     PedalCurrentAcq@dir:
   294                           	opt stack 0
   295  0000B6                     bsp_CheckTimer@_id:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0xF
   299  0000B6                     	ds	1
   300  0000B7                     ??_ADC_GetConversionValue:
   301  0000B7                     PedalCurrentAcqDelay@dir:
   302                           	opt stack 0
   303  0000B7                     bsp_StartAutoTimer@_id:
   304                           	opt stack 0
   305  0000B7                     ___lwdiv@divisor:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x10
   309  0000B7                     	ds	2
   310  0000B9                     ___lwdiv@counter:
   311                           	opt stack 0
   312  0000B9                     ___lmul@multiplicand:
   313                           	opt stack 0
   314                           
   315                           ; 4 bytes @ 0x12
   316  0000B9                     	ds	1
   317  0000BA                     ADC_GetConversionValue@ADC_Result:
   318                           	opt stack 0
   319  0000BA                     ___lwdiv@quotient:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x13
   323  0000BA                     	ds	2
   324  0000BC                     AdcPro@sum:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x15
   328  0000BC                     	ds	1
   329  0000BD                     ___lmul@product:
   330                           	opt stack 0
   331                           
   332                           ; 4 bytes @ 0x16
   333  0000BD                     	ds	1
   334  0000BE                     AdcPro@i:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x17
   338  0000BE                     	ds	3
   339  0000C1                     ?___lldiv:
   340                           	opt stack 0
   341  0000C1                     ___lldiv@dividend:
   342                           	opt stack 0
   343                           
   344                           ; 4 bytes @ 0x1A
   345  0000C1                     	ds	4
   346  0000C5                     ___lldiv@divisor:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x1E
   350  0000C5                     	ds	4
   351  0000C9                     ___lldiv@quotient:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0x22
   355  0000C9                     	ds	4
   356  0000CD                     ___lldiv@counter:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x26
   360  0000CD                     	ds	1
   361  0000CE                     ConfigTimer0@ms:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x27
   365  0000CE                     	ds	2
   366  0000D0                     ??_ConfigTimer0:
   367                           
   368                           ; 0 bytes @ 0x29
   369  0000D0                     	ds	4
   370  0000D4                     ConfigTimer0@tmp:
   371                           	opt stack 0
   372                           
   373                           ; 4 bytes @ 0x2D
   374  0000D4                     	ds	4
   375  0000D8                     tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           
   382                           ; 0 bytes @ 0x31
   383                           
   384                           	psect	cstackCOMRAM
   385  000029                     __pcstackCOMRAM:
   386                           	opt stack 0
   387  000029                     bsp_SoftTimerDec@_tmr:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x0
   391  000029                     	ds	2
   392  00002B                     
   393                           ; 0 bytes @ 0x2
   394  00002B                     	ds	2
   395  00002D                     ??_Lows_ISR:
   396                           
   397                           ; 0 bytes @ 0x4
   398  00002D                     	ds	17
   399  00003E                     Lows_ISR@i:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x15
   403  00003E                     	ds	1
   404  00003F                     ECAN_Receive@RxMessage:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x16
   408  00003F                     	ds	2
   409  000041                     ??_ECAN_Receive:
   410                           
   411                           ; 0 bytes @ 0x18
   412  000041                     	ds	4
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   422 ;;
   423 ;; *************** function _main *****************
   424 ;; Defined at:
   425 ;;		line 71 in file "source/main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  2  307[None  ] int 
   432 ;; Registers used:
   433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels required when called:   10
   445 ;; This function calls:
   446 ;;		_AppTask_PollHandler
   447 ;;		_App_System_Init
   448 ;;		_SysEnterSleep
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text0
   455  001344                     __ptext0:
   456                           	opt stack 0
   457  001344                     _main:
   458                           	opt stack 21
   459                           
   460                           ;main.c: 73: App_System_Init();
   461                           
   462                           ;incstack = 0
   463  001344  EC0F  F008         	call	_App_System_Init	;wreg free
   464                           
   465                           ;main.c: 75: SysEnterSleep();
   466  001348  EC9D  F007         	call	_SysEnterSleep	;wreg free
   467                           
   468                           ;main.c: 76: App_System_Init();
   469  00134C  EC0F  F008         	call	_App_System_Init	;wreg free
   470  001350  D000               	goto	l3603
   471  001352                     l3603:
   472                           
   473                           ;main.c: 78: {
   474                           ;main.c: 80: AppTask_PollHandler();
   475  001352  EC1E  F009         	call	_AppTask_PollHandler	;wreg free
   476  001356  D7FD               	goto	l3603
   477  001358  EF6B  F000         	goto	start
   478  00135C                     __end_of_main:
   479                           	opt stack 0
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487 ;; *************** function _AppTask_PollHandler *****************
   488 ;; Defined at:
   489 ;;		line 58 in file "source/app.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;		None               void
   496 ;; Registers used:
   497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    9
   510 ;; This function calls:
   511 ;;		_AdcPro
   512 ;;		_Pedal_Process
   513 ;;		_bsp_CheckTimer
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text1
   520  00123C                     __ptext1:
   521                           	opt stack 0
   522  00123C                     _AppTask_PollHandler:
   523                           	opt stack 21
   524                           
   525                           ;app.c: 60: if (bsp_CheckTimer(0))
   526                           
   527                           ;incstack = 0
   528  00123C  0E00               	movlw	0
   529  00123E  EC43  F008         	call	_bsp_CheckTimer
   530  001242  0900               	iorlw	0
   531  001244  A4D8               	btfss	status,2,c
   532                           
   533                           ;app.c: 61: {
   534                           ;app.c: 62: AdcPro();
   535  001246  ECA5  F003         	call	_AdcPro	;wreg free
   536                           
   537                           ;app.c: 65: }
   538                           ;app.c: 66: if (bsp_CheckTimer(1))
   539  00124A  0E01               	movlw	1
   540  00124C  EC43  F008         	call	_bsp_CheckTimer
   541  001250  0900               	iorlw	0
   542  001252  B4D8               	btfsc	status,2,c
   543  001254  0012               	return	
   544                           
   545                           ;app.c: 67: {
   546                           ;app.c: 68: if(SysRunData.SysSta == SYS_NORMAL)
   547  001256  5006               	movf	_SysRunData+2,w,c
   548  001258  A4D8               	btfss	status,2,c
   549  00125A  0012               	return	
   550                           
   551                           ;app.c: 69: {
   552                           ;app.c: 70: Pedal_Process();
   553  00125C  EC6D  F000         	call	_Pedal_Process	;wreg free
   554                           
   555                           ;app.c: 72: else
   556                           ;app.c: 73: {
   557                           
   558                           ;app.c: 71: }
   559  001260  0012               	return	
   560  001262  0012               	return		;funcret
   561  001264                     __end_of_AppTask_PollHandler:
   562                           	opt stack 0
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           status	equ	0xFD8
   570                           
   571 ;; *************** function _bsp_CheckTimer *****************
   572 ;; Defined at:
   573 ;;		line 152 in file "source/timer.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  _id             1    wreg     unsigned char 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  _id             1   15[BANK0 ] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      unsigned char 
   580 ;; Registers used:
   581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   591 ;;Total ram usage:        2 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    4
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_AppTask_PollHandler
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text2
   602  001086                     __ptext2:
   603                           	opt stack 0
   604  001086                     _bsp_CheckTimer:
   605                           	opt stack 25
   606                           
   607                           ;incstack = 0
   608                           ;bsp_CheckTimer@_id stored from wreg
   609  001086  0100               	movlb	0	; () banked
   610  001088  6FB6               	movwf	bsp_CheckTimer@_id& (0+255),b
   611                           
   612                           ; BSR set to: 0
   613                           ;timer.c: 154: if (_id >= 2)
   614  00108A  0E01               	movlw	1
   615  00108C  0100               	movlb	0	; () banked
   616  00108E  65B6               	cpfsgt	bsp_CheckTimer@_id& (0+255),b
   617  001090  D002               	goto	l3123
   618                           
   619                           ; BSR set to: 0
   620                           ;timer.c: 155: {
   621                           ;timer.c: 156: return 0;
   622  001092  0E00               	movlw	0
   623                           
   624                           ; BSR set to: 0
   625  001094  0012               	return	
   626  001096                     l3123:
   627                           
   628                           ; BSR set to: 0
   629                           ;timer.c: 157: }
   630                           ;timer.c: 159: if (s_tTmr[_id].Flag == 1)
   631  001096  0100               	movlb	0	; () banked
   632  001098  51B6               	movf	bsp_CheckTimer@_id& (0+255),w,b
   633  00109A  0D06               	mullw	6
   634  00109C  0E01               	movlw	1
   635  00109E  26F3               	addwf	prodl,f,c
   636  0010A0  0E00               	movlw	0
   637  0010A2  22F4               	addwfc	prodh,f,c
   638  0010A4  0E1D               	movlw	low _s_tTmr
   639  0010A6  24F3               	addwf	prodl,w,c
   640  0010A8  6ED9               	movwf	fsr2l,c
   641  0010AA  0E00               	movlw	high _s_tTmr
   642  0010AC  20F4               	addwfc	prodh,w,c
   643  0010AE  6EDA               	movwf	fsr2h,c
   644  0010B0  04DE               	decf	postinc2,w,c
   645  0010B2  A4D8               	btfss	status,2,c
   646  0010B4  D011               	goto	l3133
   647                           
   648                           ; BSR set to: 0
   649                           ;timer.c: 160: {
   650                           ;timer.c: 161: s_tTmr[_id].Flag = 0;
   651  0010B6  0100               	movlb	0	; () banked
   652  0010B8  51B6               	movf	bsp_CheckTimer@_id& (0+255),w,b
   653  0010BA  0D06               	mullw	6
   654  0010BC  0E01               	movlw	1
   655  0010BE  26F3               	addwf	prodl,f,c
   656  0010C0  0E00               	movlw	0
   657  0010C2  22F4               	addwfc	prodh,f,c
   658  0010C4  0E1D               	movlw	low _s_tTmr
   659  0010C6  24F3               	addwf	prodl,w,c
   660  0010C8  6ED9               	movwf	fsr2l,c
   661  0010CA  0E00               	movlw	high _s_tTmr
   662  0010CC  20F4               	addwfc	prodh,w,c
   663  0010CE  6EDA               	movwf	fsr2h,c
   664  0010D0  0E00               	movlw	0
   665  0010D2  6EDF               	movwf	indf2,c
   666                           
   667                           ; BSR set to: 0
   668                           ;timer.c: 162: return 1;
   669  0010D4  0E01               	movlw	1
   670                           
   671                           ; BSR set to: 0
   672                           ;timer.c: 163: }
   673                           
   674                           ; BSR set to: 0
   675  0010D6  0012               	return	
   676  0010D8                     l3133:
   677                           
   678                           ; BSR set to: 0
   679                           ;timer.c: 164: else
   680                           ;timer.c: 165: {
   681                           ;timer.c: 166: return 0;
   682  0010D8  0E00               	movlw	0
   683                           
   684                           ; BSR set to: 0
   685  0010DA  0012               	return	
   686                           
   687                           ; BSR set to: 0
   688                           
   689                           ; BSR set to: 0
   690  0010DC  0012               	return		;funcret
   691  0010DE                     __end_of_bsp_CheckTimer:
   692                           	opt stack 0
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           prodh	equ	0xFF4
   698                           prodl	equ	0xFF3
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           indf2	equ	0xFDF
   702                           postinc2	equ	0xFDE
   703                           fsr2h	equ	0xFDA
   704                           fsr2l	equ	0xFD9
   705                           status	equ	0xFD8
   706                           
   707 ;; *************** function _Pedal_Process *****************
   708 ;; Defined at:
   709 ;;		line 86 in file "source/app.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;		None               void
   716 ;; Registers used:
   717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    8
   730 ;; This function calls:
   731 ;;		_PedalCurrentAcq
   732 ;;		_PedalCurrentAcqDelay
   733 ;;		_Pedal_Back
   734 ;;		_Pedal_Out
   735 ;;		_Pedal_Stop
   736 ;;		_SysNormalWaitSleep
   737 ;; This function is called by:
   738 ;;		_AppTask_PollHandler
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  0000DA                     __ptext3:
   744                           	opt stack 0
   745  0000DA                     _Pedal_Process:
   746                           	opt stack 21
   747                           
   748                           ;app.c: 91: if(((SysRunData.PedalRunFlag & (0x01u)) == (0x01u)))
   749                           
   750                           ; BSR set to: 0
   751                           ;incstack = 0
   752  0000DA  B01B               	btfsc	_SysRunData+23,0,c
   753  0000DC  D0A1               	goto	l3313
   754  0000DE  D17D               	goto	l3401
   755                           
   756                           ;app.c: 92: {
   757                           ;app.c: 93: switch(SysRunData.PedalSta[0])
   758  0000E0  D09F               	goto	l3313
   759  0000E2                     l3237:
   760                           
   761                           ;app.c: 96: if(SysRunData.PedalRunCnt[0] < 350)
   762  0000E2  0E5E               	movlw	94
   763  0000E4  5C07               	subwf	_SysRunData+3,w,c
   764  0000E6  0E01               	movlw	1
   765  0000E8  5808               	subwfb	_SysRunData+4,w,c
   766  0000EA  B0D8               	btfsc	status,0,c
   767  0000EC  D03B               	goto	l3267
   768                           
   769                           ;app.c: 97: {
   770                           ;app.c: 98: Pedal_Out(0);
   771  0000EE  0E00               	movlw	0
   772  0000F0  EC46  F009         	call	_Pedal_Out
   773                           
   774                           ;app.c: 99: SysRunData.PedalRunCnt[0]++;
   775  0000F4  4A07               	infsnz	_SysRunData+3,f,c
   776  0000F6  2A08               	incf	_SysRunData+4,f,c
   777                           
   778                           ;app.c: 100: SysRunData.PedalWaitSleepCnt = 0;
   779  0000F8  0E00               	movlw	0
   780  0000FA  6E0E               	movwf	_SysRunData+10,c
   781  0000FC  0E00               	movlw	0
   782  0000FE  6E0D               	movwf	_SysRunData+9,c
   783                           
   784                           ;app.c: 101: PedalCurrentAcqDelay(0);
   785  000100  0E00               	movlw	0
   786  000102  EC6F  F008         	call	_PedalCurrentAcqDelay
   787                           
   788                           ;app.c: 103: if(SysRunData.ADC_Buf[0x03] > 492)
   789  000106  0EED               	movlw	237
   790  000108  5C19               	subwf	_SysRunData+21,w,c
   791  00010A  0E01               	movlw	1
   792  00010C  581A               	subwfb	_SysRunData+22,w,c
   793  00010E  A0D8               	btfss	status,0,c
   794  000110  D178               	goto	l158
   795                           
   796                           ;app.c: 104: {
   797                           ;app.c: 105: if(SysRunData.PedalRunCnt[0] > 130)
   798  000112  5008               	movf	_SysRunData+4,w,c
   799  000114  E104               	bnz	u2640
   800  000116  0E83               	movlw	131
   801  000118  5C07               	subwf	_SysRunData+3,w,c
   802  00011A  A0D8               	btfss	status,0,c
   803  00011C  D00F               	goto	l3257
   804  00011E                     u2640:
   805                           
   806                           ;app.c: 106: {
   807                           ;app.c: 107: Pedal_Stop(0);
   808  00011E  0E00               	movlw	0
   809  000120  EC32  F009         	call	_Pedal_Stop
   810                           
   811                           ;app.c: 108: PedalCurrentAcq(0,0);
   812  000124  0E00               	movlw	0
   813  000126  0100               	movlb	0	; () banked
   814  000128  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
   815  00012A  0E00               	movlw	0
   816  00012C  ECD1  F008         	call	_PedalCurrentAcq
   817                           
   818                           ;app.c: 109: SysRunData.PedalRunCnt[0] = 0;
   819  000130  0E00               	movlw	0
   820  000132  6E08               	movwf	_SysRunData+4,c
   821  000134  0E00               	movlw	0
   822  000136  6E07               	movwf	_SysRunData+3,c
   823                           
   824                           ;app.c: 110: SysRunData.PedalSta[0] = PEDAL_NORMAL_WAIT_BACK;
   825  000138  0E02               	movlw	2
   826  00013A  D050               	goto	L3
   827  00013C                     l3257:
   828                           
   829                           ;app.c: 112: else
   830                           ;app.c: 113: {
   831                           ;app.c: 114: Pedal_Stop(0);
   832  00013C  0E00               	movlw	0
   833  00013E  EC32  F009         	call	_Pedal_Stop
   834                           
   835                           ;app.c: 115: SysRunData.PedalRunCnt[0] = 0;
   836  000142  0E00               	movlw	0
   837  000144  6E08               	movwf	_SysRunData+4,c
   838  000146  0E00               	movlw	0
   839  000148  6E07               	movwf	_SysRunData+3,c
   840                           
   841                           ;app.c: 116: PedalCurrentAcq(0,0);
   842  00014A  0E00               	movlw	0
   843  00014C  0100               	movlb	0	; () banked
   844  00014E  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
   845  000150  0E00               	movlw	0
   846  000152  ECD1  F008         	call	_PedalCurrentAcq
   847                           
   848                           ;app.c: 117: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
   849  000156  0E04               	movlw	4
   850  000158  6E04               	movwf	_SysRunData,c
   851                           
   852                           ;app.c: 118: Pedal_Back(0);
   853  00015A  0E00               	movlw	0
   854  00015C  EC5A  F009         	call	_Pedal_Back
   855  000160  D127               	goto	l3391
   856                           
   857                           ;app.c: 120: }
   858                           ;app.c: 121: }
   859                           ;app.c: 122: }
   860                           
   861                           ;app.c: 119: SysRunData.PedalWaitSleepCnt = 0;
   862  000162  D14F               	goto	l158
   863  000164                     l3267:
   864                           
   865                           ;app.c: 123: else
   866                           ;app.c: 124: {
   867                           ;app.c: 125: Pedal_Stop(0);
   868  000164  0E00               	movlw	0
   869  000166  EC32  F009         	call	_Pedal_Stop
   870                           
   871                           ;app.c: 126: PedalCurrentAcq(0,0);
   872  00016A  0E00               	movlw	0
   873  00016C  0100               	movlb	0	; () banked
   874  00016E  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
   875  000170  0E00               	movlw	0
   876  000172  ECD1  F008         	call	_PedalCurrentAcq
   877                           
   878                           ;app.c: 127: SysRunData.PedalRunCnt[0] = 0;
   879  000176  0E00               	movlw	0
   880  000178  6E08               	movwf	_SysRunData+4,c
   881  00017A  0E00               	movlw	0
   882  00017C  6E07               	movwf	_SysRunData+3,c
   883                           
   884                           ;app.c: 128: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
   885  00017E  0E07               	movlw	7
   886  000180  D02D               	goto	L3
   887                           
   888                           ;app.c: 129: }
   889                           ;app.c: 130: break;
   890  000182  D13F               	goto	l158
   891  000184                     l3273:
   892                           
   893                           ;app.c: 133: SysRunData.PedalRunCnt[0]++;
   894  000184  4A07               	infsnz	_SysRunData+3,f,c
   895  000186  2A08               	incf	_SysRunData+4,f,c
   896                           
   897                           ;app.c: 134: PedalCurrentAcqDelay(0);
   898  000188  0E00               	movlw	0
   899  00018A  EC6F  F008         	call	_PedalCurrentAcqDelay
   900                           
   901                           ;app.c: 135: if(SysRunData.ADC_Buf[0x03] > 492)
   902  00018E  0EED               	movlw	237
   903  000190  5C19               	subwf	_SysRunData+21,w,c
   904  000192  0E01               	movlw	1
   905  000194  581A               	subwfb	_SysRunData+22,w,c
   906  000196  A0D8               	btfss	status,0,c
   907  000198  D134               	goto	l158
   908                           
   909                           ;app.c: 136: {
   910                           ;app.c: 137: if(SysRunData.PedalRunCnt[0] > 130)
   911  00019A  5008               	movf	_SysRunData+4,w,c
   912  00019C  E104               	bnz	u2660
   913  00019E  0E83               	movlw	131
   914  0001A0  5C07               	subwf	_SysRunData+3,w,c
   915  0001A2  A0D8               	btfss	status,0,c
   916  0001A4  D12E               	goto	l158
   917  0001A6                     u2660:
   918                           
   919                           ;app.c: 138: {
   920                           ;app.c: 139: Pedal_Stop(0);
   921  0001A6  0E00               	movlw	0
   922  0001A8  EC32  F009         	call	_Pedal_Stop
   923                           
   924                           ;app.c: 140: PedalCurrentAcq(0,0);
   925  0001AC  0E00               	movlw	0
   926  0001AE  0100               	movlb	0	; () banked
   927  0001B0  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
   928  0001B2  0E00               	movlw	0
   929  0001B4  ECD1  F008         	call	_PedalCurrentAcq
   930                           
   931                           ;app.c: 141: SysRunData.PedalRunCnt[0] = 0;
   932  0001B8  0E00               	movlw	0
   933  0001BA  6E08               	movwf	_SysRunData+4,c
   934  0001BC  0E00               	movlw	0
   935  0001BE  6E07               	movwf	_SysRunData+3,c
   936                           
   937                           ;app.c: 142: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
   938  0001C0  0E04               	movlw	4
   939  0001C2  D00C               	goto	L3
   940                           
   941                           ;app.c: 147: }
   942                           ;app.c: 148: }
   943                           ;app.c: 149: break;
   944                           
   945                           ;app.c: 144: else
   946                           ;app.c: 145: {
   947                           
   948                           ;app.c: 143: }
   949  0001C4  D11E               	goto	l158
   950  0001C6                     l3287:
   951                           
   952                           ;app.c: 152: SysRunData.PedalWaitBackCnt[0] = 0;
   953  0001C6  0E00               	movlw	0
   954  0001C8  6E10               	movwf	_SysRunData+12,c
   955  0001CA  0E00               	movlw	0
   956  0001CC  6E0F               	movwf	_SysRunData+11,c
   957                           
   958                           ;app.c: 153: PedalCurrentAcq(0,0);
   959  0001CE  0E00               	movlw	0
   960  0001D0  0100               	movlb	0	; () banked
   961  0001D2  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
   962  0001D4  0E00               	movlw	0
   963  0001D6  ECD1  F008         	call	_PedalCurrentAcq
   964  0001DA  D0C9               	goto	l3373
   965  0001DC                     L3:
   966  0001DC  6E04               	movwf	_SysRunData,c
   967                           
   968                           ;app.c: 155: break;
   969  0001DE  D111               	goto	l158
   970  0001E0                     l3293:
   971                           
   972                           ;app.c: 157: if(SysRunData.PedalRunCnt[0] < 350)
   973  0001E0  0E5E               	movlw	94
   974  0001E2  5C07               	subwf	_SysRunData+3,w,c
   975  0001E4  0E01               	movlw	1
   976  0001E6  5808               	subwfb	_SysRunData+4,w,c
   977  0001E8  B0D8               	btfsc	status,0,c
   978  0001EA  D00D               	goto	l3305
   979                           
   980                           ;app.c: 158: {
   981                           ;app.c: 159: Pedal_Out(0);
   982  0001EC  0E00               	movlw	0
   983  0001EE  EC46  F009         	call	_Pedal_Out
   984                           
   985                           ;app.c: 160: SysRunData.PedalRunCnt[0]++;
   986  0001F2  4A07               	infsnz	_SysRunData+3,f,c
   987  0001F4  2A08               	incf	_SysRunData+4,f,c
   988                           
   989                           ;app.c: 161: SysRunData.PedalWaitSleepCnt = 0;
   990  0001F6  0E00               	movlw	0
   991  0001F8  6E0E               	movwf	_SysRunData+10,c
   992  0001FA  0E00               	movlw	0
   993  0001FC  6E0D               	movwf	_SysRunData+9,c
   994                           
   995                           ;app.c: 162: PedalCurrentAcqDelay(0);
   996  0001FE  0E00               	movlw	0
   997  000200  EC6F  F008         	call	_PedalCurrentAcqDelay
   998  000204  D0D5               	goto	l3391
   999  000206                     l3305:
  1000                           
  1001                           ;app.c: 165: else
  1002                           ;app.c: 166: {
  1003                           ;app.c: 167: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
  1004  000206  0E07               	movlw	7
  1005  000208  6E04               	movwf	_SysRunData,c
  1006                           
  1007                           ;app.c: 168: Pedal_Stop(0);
  1008  00020A  0E00               	movlw	0
  1009  00020C  EC32  F009         	call	_Pedal_Stop
  1010                           
  1011                           ;app.c: 169: PedalCurrentAcq(0,0);
  1012  000210  0E00               	movlw	0
  1013  000212  0100               	movlb	0	; () banked
  1014  000214  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1015  000216  0E00               	movlw	0
  1016  000218  ECD1  F008         	call	_PedalCurrentAcq
  1017  00021C  D0D9               	goto	L5
  1018                           
  1019                           ;app.c: 175: }
  1020                           
  1021                           ;app.c: 174: break;
  1022                           
  1023                           ;app.c: 173: default:
  1024                           
  1025                           ;app.c: 171: }
  1026                           ;app.c: 172: break;
  1027                           
  1028                           ;app.c: 170: SysRunData.PedalRunCnt[0] = 0;
  1029  00021E  D0F1               	goto	l158
  1030  000220                     l3313:
  1031  000220  5004               	movf	_SysRunData,w,c
  1032                           
  1033                           ; Switch size 1, requested type "space"
  1034                           ; Number of cases is 4, Range of values is 0 to 8
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte           13     7 (average)
  1038                           ;	Chosen strategy is simple_byte
  1039  000222  0A00               	xorlw	0	; case 0
  1040  000224  B4D8               	btfsc	status,2,c
  1041  000226  D75D               	goto	l3237
  1042  000228  0A03               	xorlw	3	; case 3
  1043  00022A  B4D8               	btfsc	status,2,c
  1044  00022C  D7CC               	goto	l3287
  1045  00022E  0A07               	xorlw	7	; case 4
  1046  000230  B4D8               	btfsc	status,2,c
  1047  000232  D7A8               	goto	l3273
  1048  000234  0A0C               	xorlw	12	; case 8
  1049  000236  B4D8               	btfsc	status,2,c
  1050  000238  D7D3               	goto	l3293
  1051                           
  1052                           ;app.c: 176: }
  1053  00023A  D0E3               	goto	l158
  1054                           
  1055                           ;app.c: 177: else
  1056                           ;app.c: 178: {
  1057                           ;app.c: 179: switch(SysRunData.PedalSta[0])
  1058  00023C  D0CE               	goto	l3401
  1059  00023E                     l3315:
  1060                           
  1061                           ;app.c: 182: if(++SysRunData.PedalWaitBackCnt[0] >= 250)
  1062  00023E  4A0F               	infsnz	_SysRunData+11,f,c
  1063  000240  2A10               	incf	_SysRunData+12,f,c
  1064  000242  5010               	movf	_SysRunData+12,w,c
  1065  000244  E104               	bnz	u2680
  1066  000246  0EFA               	movlw	250
  1067  000248  5C0F               	subwf	_SysRunData+11,w,c
  1068  00024A  A0D8               	btfss	status,0,c
  1069  00024C  D0DA               	goto	l158
  1070  00024E                     u2680:
  1071                           
  1072                           ;app.c: 183: {
  1073                           ;app.c: 184: SysRunData.PedalWaitBackCnt[0] = 0;
  1074  00024E  0E00               	movlw	0
  1075  000250  6E10               	movwf	_SysRunData+12,c
  1076  000252  0E00               	movlw	0
  1077  000254  6E0F               	movwf	_SysRunData+11,c
  1078                           
  1079                           ;app.c: 185: SysRunData.PedalWaitSleepCnt = 0;
  1080  000256  0E00               	movlw	0
  1081  000258  6E0E               	movwf	_SysRunData+10,c
  1082  00025A  0E00               	movlw	0
  1083  00025C  6E0D               	movwf	_SysRunData+9,c
  1084  00025E  D087               	goto	l3373
  1085                           
  1086                           ;app.c: 187: }
  1087                           ;app.c: 188: break;
  1088                           
  1089                           ;app.c: 186: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1090  000260  D0D0               	goto	l158
  1091  000262                     l3319:
  1092                           
  1093                           ;app.c: 190: if(SysRunData.PedalRunCnt[0] < 350)
  1094  000262  0E5E               	movlw	94
  1095  000264  5C07               	subwf	_SysRunData+3,w,c
  1096  000266  0E01               	movlw	1
  1097  000268  5808               	subwfb	_SysRunData+4,w,c
  1098  00026A  B0D8               	btfsc	status,0,c
  1099  00026C  D041               	goto	l3349
  1100                           
  1101                           ;app.c: 191: {
  1102                           ;app.c: 192: Pedal_Back(0);
  1103  00026E  0E00               	movlw	0
  1104  000270  EC5A  F009         	call	_Pedal_Back
  1105                           
  1106                           ;app.c: 193: SysRunData.PedalRunCnt[0]++;
  1107  000274  4A07               	infsnz	_SysRunData+3,f,c
  1108  000276  2A08               	incf	_SysRunData+4,f,c
  1109                           
  1110                           ;app.c: 194: SysRunData.PedalWaitSleepCnt = 0;
  1111  000278  0E00               	movlw	0
  1112  00027A  6E0E               	movwf	_SysRunData+10,c
  1113  00027C  0E00               	movlw	0
  1114  00027E  6E0D               	movwf	_SysRunData+9,c
  1115                           
  1116                           ;app.c: 195: PedalCurrentAcqDelay(0);
  1117  000280  0E00               	movlw	0
  1118  000282  EC6F  F008         	call	_PedalCurrentAcqDelay
  1119                           
  1120                           ;app.c: 197: if(SysRunData.ADC_Buf[0x03] > 492)
  1121  000286  0EED               	movlw	237
  1122  000288  5C19               	subwf	_SysRunData+21,w,c
  1123  00028A  0E01               	movlw	1
  1124  00028C  581A               	subwfb	_SysRunData+22,w,c
  1125  00028E  A0D8               	btfss	status,0,c
  1126  000290  D0B8               	goto	l158
  1127                           
  1128                           ;app.c: 198: {
  1129                           ;app.c: 199: if(SysRunData.PedalRunCnt[0] > 130)
  1130  000292  5008               	movf	_SysRunData+4,w,c
  1131  000294  E104               	bnz	u2710
  1132  000296  0E83               	movlw	131
  1133  000298  5C07               	subwf	_SysRunData+3,w,c
  1134  00029A  A0D8               	btfss	status,0,c
  1135  00029C  D012               	goto	l3341
  1136  00029E                     u2710:
  1137                           
  1138                           ;app.c: 200: {
  1139                           ;app.c: 201: Pedal_Stop(0);
  1140  00029E  0E00               	movlw	0
  1141  0002A0  EC32  F009         	call	_Pedal_Stop
  1142                           
  1143                           ;app.c: 202: SysRunData.PedalRunCnt[0] = 0;
  1144  0002A4  0E00               	movlw	0
  1145  0002A6  6E08               	movwf	_SysRunData+4,c
  1146  0002A8  0E00               	movlw	0
  1147  0002AA  6E07               	movwf	_SysRunData+3,c
  1148                           
  1149                           ;app.c: 203: SysRunData.PedalWaitSleepCnt = 0;
  1150  0002AC  0E00               	movlw	0
  1151  0002AE  6E0E               	movwf	_SysRunData+10,c
  1152  0002B0  0E00               	movlw	0
  1153  0002B2  6E0D               	movwf	_SysRunData+9,c
  1154                           
  1155                           ;app.c: 204: PedalCurrentAcq(0,0);
  1156  0002B4  0E00               	movlw	0
  1157  0002B6  0100               	movlb	0	; () banked
  1158  0002B8  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1159  0002BA  0E00               	movlw	0
  1160  0002BC  ECD1  F008         	call	_PedalCurrentAcq
  1161  0002C0  D063               	goto	l3379
  1162  0002C2                     l3341:
  1163                           
  1164                           ;app.c: 207: else
  1165                           ;app.c: 208: {
  1166                           ;app.c: 209: Pedal_Stop(0);
  1167  0002C2  0E00               	movlw	0
  1168  0002C4  EC32  F009         	call	_Pedal_Stop
  1169                           
  1170                           ;app.c: 210: SysRunData.PedalRunCnt[0] = 0;
  1171  0002C8  0E00               	movlw	0
  1172  0002CA  6E08               	movwf	_SysRunData+4,c
  1173  0002CC  0E00               	movlw	0
  1174  0002CE  6E07               	movwf	_SysRunData+3,c
  1175                           
  1176                           ;app.c: 211: PedalCurrentAcq(0,0);
  1177  0002D0  0E00               	movlw	0
  1178  0002D2  0100               	movlb	0	; () banked
  1179  0002D4  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1180  0002D6  0E00               	movlw	0
  1181  0002D8  ECD1  F008         	call	_PedalCurrentAcq
  1182                           
  1183                           ;app.c: 212: SysRunData.PedalRunCnt[0] = 0;
  1184  0002DC  0E00               	movlw	0
  1185  0002DE  6E08               	movwf	_SysRunData+4,c
  1186  0002E0  0E00               	movlw	0
  1187  0002E2  6E07               	movwf	_SysRunData+3,c
  1188                           
  1189                           ;app.c: 213: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_OUT;
  1190  0002E4  0E06               	movlw	6
  1191  0002E6  6E04               	movwf	_SysRunData,c
  1192                           
  1193                           ;app.c: 214: Pedal_Out(0);
  1194  0002E8  0E00               	movlw	0
  1195  0002EA  EC46  F009         	call	_Pedal_Out
  1196                           
  1197                           ;app.c: 215: }
  1198                           ;app.c: 216: }
  1199                           ;app.c: 217: }
  1200  0002EE  D089               	goto	l158
  1201  0002F0                     l3349:
  1202                           
  1203                           ;app.c: 218: else
  1204                           ;app.c: 219: {
  1205                           ;app.c: 220: Pedal_Stop(0);
  1206  0002F0  0E00               	movlw	0
  1207  0002F2  EC32  F009         	call	_Pedal_Stop
  1208                           
  1209                           ;app.c: 221: PedalCurrentAcq(0,0);
  1210  0002F6  0E00               	movlw	0
  1211  0002F8  0100               	movlb	0	; () banked
  1212  0002FA  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1213  0002FC  0E00               	movlw	0
  1214  0002FE  ECD1  F008         	call	_PedalCurrentAcq
  1215                           
  1216                           ;app.c: 222: SysRunData.PedalRunCnt[0] = 0;
  1217  000302  0E00               	movlw	0
  1218  000304  6E08               	movwf	_SysRunData+4,c
  1219  000306  0E00               	movlw	0
  1220  000308  6E07               	movwf	_SysRunData+3,c
  1221                           
  1222                           ;app.c: 223: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  1223  00030A  0E08               	movlw	8
  1224  00030C  D767               	goto	L3
  1225                           
  1226                           ;app.c: 224: }
  1227                           ;app.c: 225: break;
  1228  00030E  D079               	goto	l158
  1229  000310                     l3355:
  1230                           
  1231                           ;app.c: 228: SysRunData.PedalWaitSleepCnt = 0;
  1232  000310  0E00               	movlw	0
  1233  000312  6E0E               	movwf	_SysRunData+10,c
  1234  000314  0E00               	movlw	0
  1235  000316  6E0D               	movwf	_SysRunData+9,c
  1236                           
  1237                           ;app.c: 229: PedalCurrentAcqDelay(0);
  1238  000318  0E00               	movlw	0
  1239  00031A  EC6F  F008         	call	_PedalCurrentAcqDelay
  1240                           
  1241                           ;app.c: 230: if(SysRunData.ADC_Buf[0x03] > 492)
  1242  00031E  0EED               	movlw	237
  1243  000320  5C19               	subwf	_SysRunData+21,w,c
  1244  000322  0E01               	movlw	1
  1245  000324  581A               	subwfb	_SysRunData+22,w,c
  1246  000326  A0D8               	btfss	status,0,c
  1247  000328  D06C               	goto	l158
  1248                           
  1249                           ;app.c: 231: {
  1250                           ;app.c: 233: Pedal_Stop(0);
  1251  00032A  0E00               	movlw	0
  1252  00032C  EC32  F009         	call	_Pedal_Stop
  1253                           
  1254                           ;app.c: 234: PedalCurrentAcq(0,0);
  1255  000330  0E00               	movlw	0
  1256  000332  0100               	movlb	0	; () banked
  1257  000334  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1258  000336  0E00               	movlw	0
  1259  000338  ECD1  F008         	call	_PedalCurrentAcq
  1260                           
  1261                           ;app.c: 235: SysRunData.PedalSta[0] = PEDAL_STALL_WAIT_BACK;
  1262  00033C  0E03               	movlw	3
  1263  00033E  D74E               	goto	L3
  1264                           
  1265                           ;app.c: 236: }
  1266                           ;app.c: 237: break;
  1267  000340  D060               	goto	l158
  1268  000342                     l3365:
  1269                           
  1270                           ;app.c: 239: SysRunData.PedalWaitSleepCnt = 0;
  1271  000342  0E00               	movlw	0
  1272  000344  6E0E               	movwf	_SysRunData+10,c
  1273  000346  0E00               	movlw	0
  1274  000348  6E0D               	movwf	_SysRunData+9,c
  1275                           
  1276                           ;app.c: 240: if(++SysRunData.PedalWaitBackCnt[0] >= 1500)
  1277  00034A  4A0F               	infsnz	_SysRunData+11,f,c
  1278  00034C  2A10               	incf	_SysRunData+12,f,c
  1279  00034E  0EDC               	movlw	220
  1280  000350  5C0F               	subwf	_SysRunData+11,w,c
  1281  000352  0E05               	movlw	5
  1282  000354  5810               	subwfb	_SysRunData+12,w,c
  1283  000356  A0D8               	btfss	status,0,c
  1284  000358  D054               	goto	l158
  1285                           
  1286                           ;app.c: 241: {
  1287                           ;app.c: 242: SysRunData.PedalWaitBackCnt[0] = 0;
  1288  00035A  0E00               	movlw	0
  1289  00035C  6E10               	movwf	_SysRunData+12,c
  1290  00035E  0E00               	movlw	0
  1291  000360  6E0F               	movwf	_SysRunData+11,c
  1292                           
  1293                           ;app.c: 243: PedalCurrentAcq(0,0);
  1294  000362  0E00               	movlw	0
  1295  000364  0100               	movlb	0	; () banked
  1296  000366  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1297  000368  0E00               	movlw	0
  1298  00036A  ECD1  F008         	call	_PedalCurrentAcq
  1299  00036E                     l3373:
  1300                           
  1301                           ;app.c: 244: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1302  00036E  0E01               	movlw	1
  1303  000370  D735               	goto	L3
  1304                           
  1305                           ;app.c: 245: }
  1306                           ;app.c: 246: break;
  1307  000372  D047               	goto	l158
  1308  000374                     l3375:
  1309                           
  1310                           ;app.c: 249: SysRunData.PedalRunCnt[0] = 0;
  1311  000374  0E00               	movlw	0
  1312  000376  6E08               	movwf	_SysRunData+4,c
  1313  000378  0E00               	movlw	0
  1314  00037A  6E07               	movwf	_SysRunData+3,c
  1315                           
  1316                           ;app.c: 250: PedalCurrentAcq(0,0);
  1317  00037C  0E00               	movlw	0
  1318  00037E  0100               	movlb	0	; () banked
  1319  000380  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1320  000382  0E00               	movlw	0
  1321  000384  ECD1  F008         	call	_PedalCurrentAcq
  1322  000388                     l3379:
  1323                           
  1324                           ;app.c: 251: SysRunData.PedalSta[0] = PEDAL_UP_LIMIT;
  1325  000388  0E00               	movlw	0
  1326  00038A  D728               	goto	L3
  1327  00038C                     l3381:
  1328                           
  1329                           ;app.c: 254: if(SysRunData.PedalRunCnt[0] < 350)
  1330  00038C  0E5E               	movlw	94
  1331  00038E  5C07               	subwf	_SysRunData+3,w,c
  1332  000390  0E01               	movlw	1
  1333  000392  5808               	subwfb	_SysRunData+4,w,c
  1334  000394  B0D8               	btfsc	status,0,c
  1335  000396  D011               	goto	l3393
  1336                           
  1337                           ;app.c: 255: {
  1338                           ;app.c: 256: Pedal_Back(0);
  1339  000398  0E00               	movlw	0
  1340  00039A  EC5A  F009         	call	_Pedal_Back
  1341                           
  1342                           ;app.c: 257: SysRunData.PedalRunCnt[0]++;
  1343  00039E  4A07               	infsnz	_SysRunData+3,f,c
  1344  0003A0  2A08               	incf	_SysRunData+4,f,c
  1345                           
  1346                           ;app.c: 258: SysRunData.PedalWaitSleepCnt = 0;
  1347  0003A2  0E00               	movlw	0
  1348  0003A4  6E0E               	movwf	_SysRunData+10,c
  1349  0003A6  0E00               	movlw	0
  1350  0003A8  6E0D               	movwf	_SysRunData+9,c
  1351                           
  1352                           ;app.c: 259: PedalCurrentAcqDelay(0);
  1353  0003AA  0E00               	movlw	0
  1354  0003AC  EC6F  F008         	call	_PedalCurrentAcqDelay
  1355  0003B0                     l3391:
  1356                           
  1357                           ;app.c: 260: SysRunData.PedalWaitSleepCnt = 0;
  1358  0003B0  0E00               	movlw	0
  1359  0003B2  6E0E               	movwf	_SysRunData+10,c
  1360  0003B4  0E00               	movlw	0
  1361  0003B6  6E0D               	movwf	_SysRunData+9,c
  1362                           
  1363                           ;app.c: 261: }
  1364  0003B8  D024               	goto	l158
  1365  0003BA                     l3393:
  1366                           
  1367                           ;app.c: 262: else
  1368                           ;app.c: 263: {
  1369                           ;app.c: 264: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  1370  0003BA  0E08               	movlw	8
  1371  0003BC  6E04               	movwf	_SysRunData,c
  1372                           
  1373                           ;app.c: 265: Pedal_Stop(0);
  1374  0003BE  0E00               	movlw	0
  1375  0003C0  EC32  F009         	call	_Pedal_Stop
  1376                           
  1377                           ;app.c: 266: PedalCurrentAcq(0,0);
  1378  0003C4  0E00               	movlw	0
  1379  0003C6  0100               	movlb	0	; () banked
  1380  0003C8  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1381  0003CA  0E00               	movlw	0
  1382  0003CC  ECD1  F008         	call	_PedalCurrentAcq
  1383  0003D0                     L5:
  1384                           
  1385                           ;app.c: 267: SysRunData.PedalRunCnt[0] = 0;
  1386  0003D0  0E00               	movlw	0
  1387  0003D2  6E08               	movwf	_SysRunData+4,c
  1388  0003D4  0E00               	movlw	0
  1389  0003D6  6E07               	movwf	_SysRunData+3,c
  1390                           
  1391                           ;app.c: 272: }
  1392                           
  1393                           ;app.c: 271: break;
  1394                           
  1395                           ;app.c: 270: default:
  1396                           
  1397                           ;app.c: 268: }
  1398                           ;app.c: 269: break;
  1399  0003D8  D014               	goto	l158
  1400  0003DA                     l3401:
  1401  0003DA  5004               	movf	_SysRunData,w,c
  1402                           
  1403                           ; Switch size 1, requested type "space"
  1404                           ; Number of cases is 6, Range of values is 1 to 7
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           19    10 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409  0003DC  0A01               	xorlw	1	; case 1
  1410  0003DE  B4D8               	btfsc	status,2,c
  1411  0003E0  D740               	goto	l3319
  1412  0003E2  0A03               	xorlw	3	; case 2
  1413  0003E4  B4D8               	btfsc	status,2,c
  1414  0003E6  D72B               	goto	l3315
  1415  0003E8  0A01               	xorlw	1	; case 3
  1416  0003EA  B4D8               	btfsc	status,2,c
  1417  0003EC  D7AA               	goto	l3365
  1418  0003EE  0A07               	xorlw	7	; case 4
  1419  0003F0  B4D8               	btfsc	status,2,c
  1420  0003F2  D7C0               	goto	l3375
  1421  0003F4  0A02               	xorlw	2	; case 6
  1422  0003F6  B4D8               	btfsc	status,2,c
  1423  0003F8  D78B               	goto	l3355
  1424  0003FA  0A01               	xorlw	1	; case 7
  1425  0003FC  B4D8               	btfsc	status,2,c
  1426  0003FE  D7C6               	goto	l3381
  1427  000400  D000               	goto	l158
  1428  000402                     l158:
  1429                           
  1430                           ;app.c: 273: }
  1431                           ;app.c: 278: if(((SysRunData.PedalRunFlag & (0x02u)) == (0x02u)))
  1432  000402  B21B               	btfsc	_SysRunData+23,1,c
  1433  000404  D0A1               	goto	l3481
  1434  000406  D17D               	goto	l3569
  1435                           
  1436                           ;app.c: 279: {
  1437                           ;app.c: 280: switch(SysRunData.PedalSta[1])
  1438  000408  D09F               	goto	l3481
  1439  00040A                     l3405:
  1440                           
  1441                           ;app.c: 283: if(SysRunData.PedalRunCnt[1] < 350)
  1442  00040A  0E5E               	movlw	94
  1443  00040C  5C09               	subwf	_SysRunData+5,w,c
  1444  00040E  0E01               	movlw	1
  1445  000410  580A               	subwfb	_SysRunData+6,w,c
  1446  000412  B0D8               	btfsc	status,0,c
  1447  000414  D03B               	goto	l3435
  1448                           
  1449                           ;app.c: 284: {
  1450                           ;app.c: 285: Pedal_Out(1);
  1451  000416  0E01               	movlw	1
  1452  000418  EC46  F009         	call	_Pedal_Out
  1453                           
  1454                           ;app.c: 286: SysRunData.PedalRunCnt[1]++;
  1455  00041C  4A09               	infsnz	_SysRunData+5,f,c
  1456  00041E  2A0A               	incf	_SysRunData+6,f,c
  1457                           
  1458                           ;app.c: 287: SysRunData.PedalWaitSleepCnt = 0;
  1459  000420  0E00               	movlw	0
  1460  000422  6E0E               	movwf	_SysRunData+10,c
  1461  000424  0E00               	movlw	0
  1462  000426  6E0D               	movwf	_SysRunData+9,c
  1463                           
  1464                           ;app.c: 288: PedalCurrentAcqDelay(1);
  1465  000428  0E01               	movlw	1
  1466  00042A  EC6F  F008         	call	_PedalCurrentAcqDelay
  1467                           
  1468                           ;app.c: 289: if(SysRunData.ADC_Buf[0x02] > 492)
  1469  00042E  0EED               	movlw	237
  1470  000430  5C17               	subwf	_SysRunData+19,w,c
  1471  000432  0E01               	movlw	1
  1472  000434  5818               	subwfb	_SysRunData+20,w,c
  1473  000436  A0D8               	btfss	status,0,c
  1474  000438  D178               	goto	l3571
  1475                           
  1476                           ;app.c: 290: {
  1477                           ;app.c: 291: if(SysRunData.PedalRunCnt[1] > 130)
  1478  00043A  500A               	movf	_SysRunData+6,w,c
  1479  00043C  E104               	bnz	u2780
  1480  00043E  0E83               	movlw	131
  1481  000440  5C09               	subwf	_SysRunData+5,w,c
  1482  000442  A0D8               	btfss	status,0,c
  1483  000444  D00F               	goto	l3425
  1484  000446                     u2780:
  1485                           
  1486                           ;app.c: 292: {
  1487                           ;app.c: 293: Pedal_Stop(1);
  1488  000446  0E01               	movlw	1
  1489  000448  EC32  F009         	call	_Pedal_Stop
  1490                           
  1491                           ;app.c: 294: PedalCurrentAcq(1,0);
  1492  00044C  0E00               	movlw	0
  1493  00044E  0100               	movlb	0	; () banked
  1494  000450  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1495  000452  0E01               	movlw	1
  1496  000454  ECD1  F008         	call	_PedalCurrentAcq
  1497                           
  1498                           ;app.c: 295: SysRunData.PedalRunCnt[1] = 0;
  1499  000458  0E00               	movlw	0
  1500  00045A  6E0A               	movwf	_SysRunData+6,c
  1501  00045C  0E00               	movlw	0
  1502  00045E  6E09               	movwf	_SysRunData+5,c
  1503                           
  1504                           ;app.c: 296: SysRunData.PedalSta[1] = PEDAL_NORMAL_WAIT_BACK;
  1505  000460  0E02               	movlw	2
  1506  000462  D050               	goto	L8
  1507  000464                     l3425:
  1508                           
  1509                           ;app.c: 298: else
  1510                           ;app.c: 299: {
  1511                           ;app.c: 300: Pedal_Stop(1);
  1512  000464  0E01               	movlw	1
  1513  000466  EC32  F009         	call	_Pedal_Stop
  1514                           
  1515                           ;app.c: 301: SysRunData.PedalRunCnt[1] = 0;
  1516  00046A  0E00               	movlw	0
  1517  00046C  6E0A               	movwf	_SysRunData+6,c
  1518  00046E  0E00               	movlw	0
  1519  000470  6E09               	movwf	_SysRunData+5,c
  1520                           
  1521                           ;app.c: 302: PedalCurrentAcq(1,0);
  1522  000472  0E00               	movlw	0
  1523  000474  0100               	movlb	0	; () banked
  1524  000476  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1525  000478  0E01               	movlw	1
  1526  00047A  ECD1  F008         	call	_PedalCurrentAcq
  1527                           
  1528                           ;app.c: 303: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  1529  00047E  0E04               	movlw	4
  1530  000480  6E05               	movwf	_SysRunData+1,c
  1531                           
  1532                           ;app.c: 304: Pedal_Back(1);
  1533  000482  0E01               	movlw	1
  1534  000484  EC5A  F009         	call	_Pedal_Back
  1535  000488  D127               	goto	l3559
  1536                           
  1537                           ;app.c: 306: }
  1538                           ;app.c: 307: }
  1539                           ;app.c: 308: }
  1540                           
  1541                           ;app.c: 305: SysRunData.PedalWaitSleepCnt = 0;
  1542  00048A  D14F               	goto	l3571
  1543  00048C                     l3435:
  1544                           
  1545                           ;app.c: 309: else
  1546                           ;app.c: 310: {
  1547                           ;app.c: 311: Pedal_Stop(1);
  1548  00048C  0E01               	movlw	1
  1549  00048E  EC32  F009         	call	_Pedal_Stop
  1550                           
  1551                           ;app.c: 312: PedalCurrentAcq(1,0);
  1552  000492  0E00               	movlw	0
  1553  000494  0100               	movlb	0	; () banked
  1554  000496  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1555  000498  0E01               	movlw	1
  1556  00049A  ECD1  F008         	call	_PedalCurrentAcq
  1557                           
  1558                           ;app.c: 313: SysRunData.PedalRunCnt[1] = 0;
  1559  00049E  0E00               	movlw	0
  1560  0004A0  6E0A               	movwf	_SysRunData+6,c
  1561  0004A2  0E00               	movlw	0
  1562  0004A4  6E09               	movwf	_SysRunData+5,c
  1563                           
  1564                           ;app.c: 314: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  1565  0004A6  0E07               	movlw	7
  1566  0004A8  D02D               	goto	L8
  1567                           
  1568                           ;app.c: 315: }
  1569                           ;app.c: 316: break;
  1570  0004AA  D13F               	goto	l3571
  1571  0004AC                     l3441:
  1572                           
  1573                           ;app.c: 319: SysRunData.PedalRunCnt[1]++;
  1574  0004AC  4A09               	infsnz	_SysRunData+5,f,c
  1575  0004AE  2A0A               	incf	_SysRunData+6,f,c
  1576                           
  1577                           ;app.c: 320: PedalCurrentAcqDelay(1);
  1578  0004B0  0E01               	movlw	1
  1579  0004B2  EC6F  F008         	call	_PedalCurrentAcqDelay
  1580                           
  1581                           ;app.c: 321: if(SysRunData.ADC_Buf[0x02] > 492)
  1582  0004B6  0EED               	movlw	237
  1583  0004B8  5C17               	subwf	_SysRunData+19,w,c
  1584  0004BA  0E01               	movlw	1
  1585  0004BC  5818               	subwfb	_SysRunData+20,w,c
  1586  0004BE  A0D8               	btfss	status,0,c
  1587  0004C0  D134               	goto	l3571
  1588                           
  1589                           ;app.c: 322: {
  1590                           ;app.c: 323: if(SysRunData.PedalRunCnt[1] > 130)
  1591  0004C2  500A               	movf	_SysRunData+6,w,c
  1592  0004C4  E104               	bnz	u2800
  1593  0004C6  0E83               	movlw	131
  1594  0004C8  5C09               	subwf	_SysRunData+5,w,c
  1595  0004CA  A0D8               	btfss	status,0,c
  1596  0004CC  D12E               	goto	l3571
  1597  0004CE                     u2800:
  1598                           
  1599                           ;app.c: 324: {
  1600                           ;app.c: 325: Pedal_Stop(1);
  1601  0004CE  0E01               	movlw	1
  1602  0004D0  EC32  F009         	call	_Pedal_Stop
  1603                           
  1604                           ;app.c: 326: PedalCurrentAcq(1,0);
  1605  0004D4  0E00               	movlw	0
  1606  0004D6  0100               	movlb	0	; () banked
  1607  0004D8  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1608  0004DA  0E01               	movlw	1
  1609  0004DC  ECD1  F008         	call	_PedalCurrentAcq
  1610                           
  1611                           ;app.c: 327: SysRunData.PedalRunCnt[1] = 0;
  1612  0004E0  0E00               	movlw	0
  1613  0004E2  6E0A               	movwf	_SysRunData+6,c
  1614  0004E4  0E00               	movlw	0
  1615  0004E6  6E09               	movwf	_SysRunData+5,c
  1616                           
  1617                           ;app.c: 328: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  1618  0004E8  0E04               	movlw	4
  1619  0004EA  D00C               	goto	L8
  1620                           
  1621                           ;app.c: 333: }
  1622                           ;app.c: 334: }
  1623                           ;app.c: 335: break;
  1624                           
  1625                           ;app.c: 330: else
  1626                           ;app.c: 331: {
  1627                           
  1628                           ;app.c: 329: }
  1629  0004EC  D11E               	goto	l3571
  1630  0004EE                     l3455:
  1631                           
  1632                           ;app.c: 338: SysRunData.PedalWaitBackCnt[1] = 0;
  1633  0004EE  0E00               	movlw	0
  1634  0004F0  6E12               	movwf	_SysRunData+14,c
  1635  0004F2  0E00               	movlw	0
  1636  0004F4  6E11               	movwf	_SysRunData+13,c
  1637                           
  1638                           ;app.c: 339: PedalCurrentAcq(1,0);
  1639  0004F6  0E00               	movlw	0
  1640  0004F8  0100               	movlb	0	; () banked
  1641  0004FA  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1642  0004FC  0E01               	movlw	1
  1643  0004FE  ECD1  F008         	call	_PedalCurrentAcq
  1644  000502  D0C9               	goto	l3541
  1645  000504                     L8:
  1646  000504  6E05               	movwf	_SysRunData+1,c
  1647                           
  1648                           ;app.c: 341: break;
  1649  000506  D111               	goto	l3571
  1650  000508                     l3461:
  1651                           
  1652                           ;app.c: 343: if(SysRunData.PedalRunCnt[1] < 350)
  1653  000508  0E5E               	movlw	94
  1654  00050A  5C09               	subwf	_SysRunData+5,w,c
  1655  00050C  0E01               	movlw	1
  1656  00050E  580A               	subwfb	_SysRunData+6,w,c
  1657  000510  B0D8               	btfsc	status,0,c
  1658  000512  D00D               	goto	l3473
  1659                           
  1660                           ;app.c: 344: {
  1661                           ;app.c: 345: Pedal_Out(1);
  1662  000514  0E01               	movlw	1
  1663  000516  EC46  F009         	call	_Pedal_Out
  1664                           
  1665                           ;app.c: 346: SysRunData.PedalRunCnt[1]++;
  1666  00051A  4A09               	infsnz	_SysRunData+5,f,c
  1667  00051C  2A0A               	incf	_SysRunData+6,f,c
  1668                           
  1669                           ;app.c: 347: SysRunData.PedalWaitSleepCnt = 0;
  1670  00051E  0E00               	movlw	0
  1671  000520  6E0E               	movwf	_SysRunData+10,c
  1672  000522  0E00               	movlw	0
  1673  000524  6E0D               	movwf	_SysRunData+9,c
  1674                           
  1675                           ;app.c: 348: PedalCurrentAcqDelay(1);
  1676  000526  0E01               	movlw	1
  1677  000528  EC6F  F008         	call	_PedalCurrentAcqDelay
  1678  00052C  D0D5               	goto	l3559
  1679  00052E                     l3473:
  1680                           
  1681                           ;app.c: 351: else
  1682                           ;app.c: 352: {
  1683                           ;app.c: 353: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  1684  00052E  0E07               	movlw	7
  1685  000530  6E05               	movwf	_SysRunData+1,c
  1686                           
  1687                           ;app.c: 354: Pedal_Stop(1);
  1688  000532  0E01               	movlw	1
  1689  000534  EC32  F009         	call	_Pedal_Stop
  1690                           
  1691                           ;app.c: 355: PedalCurrentAcq(1,0);
  1692  000538  0E00               	movlw	0
  1693  00053A  0100               	movlb	0	; () banked
  1694  00053C  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1695  00053E  0E01               	movlw	1
  1696  000540  ECD1  F008         	call	_PedalCurrentAcq
  1697  000544  D0D9               	goto	L10
  1698                           
  1699                           ;app.c: 361: }
  1700                           
  1701                           ;app.c: 360: break;
  1702                           
  1703                           ;app.c: 359: default:
  1704                           
  1705                           ;app.c: 357: }
  1706                           ;app.c: 358: break;
  1707                           
  1708                           ;app.c: 356: SysRunData.PedalRunCnt[1] = 0;
  1709  000546  D0F1               	goto	l3571
  1710  000548                     l3481:
  1711  000548  5005               	movf	_SysRunData+1,w,c
  1712                           
  1713                           ; Switch size 1, requested type "space"
  1714                           ; Number of cases is 4, Range of values is 0 to 8
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte           13     7 (average)
  1718                           ;	Chosen strategy is simple_byte
  1719  00054A  0A00               	xorlw	0	; case 0
  1720  00054C  B4D8               	btfsc	status,2,c
  1721  00054E  D75D               	goto	l3405
  1722  000550  0A03               	xorlw	3	; case 3
  1723  000552  B4D8               	btfsc	status,2,c
  1724  000554  D7CC               	goto	l3455
  1725  000556  0A07               	xorlw	7	; case 4
  1726  000558  B4D8               	btfsc	status,2,c
  1727  00055A  D7A8               	goto	l3441
  1728  00055C  0A0C               	xorlw	12	; case 8
  1729  00055E  B4D8               	btfsc	status,2,c
  1730  000560  D7D3               	goto	l3461
  1731                           
  1732                           ;app.c: 362: }
  1733  000562  D0E3               	goto	l3571
  1734                           
  1735                           ;app.c: 363: else
  1736                           ;app.c: 364: {
  1737                           ;app.c: 365: switch(SysRunData.PedalSta[1])
  1738  000564  D0CE               	goto	l3569
  1739  000566                     l3483:
  1740                           
  1741                           ;app.c: 368: if(++SysRunData.PedalWaitBackCnt[1] >= 250)
  1742  000566  4A11               	infsnz	_SysRunData+13,f,c
  1743  000568  2A12               	incf	_SysRunData+14,f,c
  1744  00056A  5012               	movf	_SysRunData+14,w,c
  1745  00056C  E104               	bnz	u2820
  1746  00056E  0EFA               	movlw	250
  1747  000570  5C11               	subwf	_SysRunData+13,w,c
  1748  000572  A0D8               	btfss	status,0,c
  1749  000574  D0DA               	goto	l3571
  1750  000576                     u2820:
  1751                           
  1752                           ;app.c: 369: {
  1753                           ;app.c: 370: SysRunData.PedalWaitBackCnt[1] = 0;
  1754  000576  0E00               	movlw	0
  1755  000578  6E12               	movwf	_SysRunData+14,c
  1756  00057A  0E00               	movlw	0
  1757  00057C  6E11               	movwf	_SysRunData+13,c
  1758                           
  1759                           ;app.c: 371: SysRunData.PedalWaitSleepCnt = 0;
  1760  00057E  0E00               	movlw	0
  1761  000580  6E0E               	movwf	_SysRunData+10,c
  1762  000582  0E00               	movlw	0
  1763  000584  6E0D               	movwf	_SysRunData+9,c
  1764  000586  D087               	goto	l3541
  1765                           
  1766                           ;app.c: 373: }
  1767                           ;app.c: 374: break;
  1768                           
  1769                           ;app.c: 372: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  1770  000588  D0D0               	goto	l3571
  1771  00058A                     l3487:
  1772                           
  1773                           ;app.c: 376: if(SysRunData.PedalRunCnt[1] < 350)
  1774  00058A  0E5E               	movlw	94
  1775  00058C  5C09               	subwf	_SysRunData+5,w,c
  1776  00058E  0E01               	movlw	1
  1777  000590  580A               	subwfb	_SysRunData+6,w,c
  1778  000592  B0D8               	btfsc	status,0,c
  1779  000594  D041               	goto	l3517
  1780                           
  1781                           ;app.c: 377: {
  1782                           ;app.c: 378: Pedal_Back(1);
  1783  000596  0E01               	movlw	1
  1784  000598  EC5A  F009         	call	_Pedal_Back
  1785                           
  1786                           ;app.c: 379: SysRunData.PedalRunCnt[1]++;
  1787  00059C  4A09               	infsnz	_SysRunData+5,f,c
  1788  00059E  2A0A               	incf	_SysRunData+6,f,c
  1789                           
  1790                           ;app.c: 380: SysRunData.PedalWaitSleepCnt = 0;
  1791  0005A0  0E00               	movlw	0
  1792  0005A2  6E0E               	movwf	_SysRunData+10,c
  1793  0005A4  0E00               	movlw	0
  1794  0005A6  6E0D               	movwf	_SysRunData+9,c
  1795                           
  1796                           ;app.c: 381: PedalCurrentAcqDelay(1);
  1797  0005A8  0E01               	movlw	1
  1798  0005AA  EC6F  F008         	call	_PedalCurrentAcqDelay
  1799                           
  1800                           ;app.c: 383: if(SysRunData.ADC_Buf[0x02] > 492)
  1801  0005AE  0EED               	movlw	237
  1802  0005B0  5C17               	subwf	_SysRunData+19,w,c
  1803  0005B2  0E01               	movlw	1
  1804  0005B4  5818               	subwfb	_SysRunData+20,w,c
  1805  0005B6  A0D8               	btfss	status,0,c
  1806  0005B8  D0B8               	goto	l3571
  1807                           
  1808                           ;app.c: 384: {
  1809                           ;app.c: 385: if(SysRunData.PedalRunCnt[1] > 130)
  1810  0005BA  500A               	movf	_SysRunData+6,w,c
  1811  0005BC  E104               	bnz	u2850
  1812  0005BE  0E83               	movlw	131
  1813  0005C0  5C09               	subwf	_SysRunData+5,w,c
  1814  0005C2  A0D8               	btfss	status,0,c
  1815  0005C4  D012               	goto	l3509
  1816  0005C6                     u2850:
  1817                           
  1818                           ;app.c: 386: {
  1819                           ;app.c: 387: Pedal_Stop(1);
  1820  0005C6  0E01               	movlw	1
  1821  0005C8  EC32  F009         	call	_Pedal_Stop
  1822                           
  1823                           ;app.c: 388: SysRunData.PedalRunCnt[1] = 0;
  1824  0005CC  0E00               	movlw	0
  1825  0005CE  6E0A               	movwf	_SysRunData+6,c
  1826  0005D0  0E00               	movlw	0
  1827  0005D2  6E09               	movwf	_SysRunData+5,c
  1828                           
  1829                           ;app.c: 389: SysRunData.PedalWaitSleepCnt = 0;
  1830  0005D4  0E00               	movlw	0
  1831  0005D6  6E0E               	movwf	_SysRunData+10,c
  1832  0005D8  0E00               	movlw	0
  1833  0005DA  6E0D               	movwf	_SysRunData+9,c
  1834                           
  1835                           ;app.c: 390: PedalCurrentAcq(1,0);
  1836  0005DC  0E00               	movlw	0
  1837  0005DE  0100               	movlb	0	; () banked
  1838  0005E0  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1839  0005E2  0E01               	movlw	1
  1840  0005E4  ECD1  F008         	call	_PedalCurrentAcq
  1841  0005E8  D063               	goto	l3547
  1842  0005EA                     l3509:
  1843                           
  1844                           ;app.c: 393: else
  1845                           ;app.c: 394: {
  1846                           ;app.c: 395: Pedal_Stop(1);
  1847  0005EA  0E01               	movlw	1
  1848  0005EC  EC32  F009         	call	_Pedal_Stop
  1849                           
  1850                           ;app.c: 396: SysRunData.PedalRunCnt[1] = 0;
  1851  0005F0  0E00               	movlw	0
  1852  0005F2  6E0A               	movwf	_SysRunData+6,c
  1853  0005F4  0E00               	movlw	0
  1854  0005F6  6E09               	movwf	_SysRunData+5,c
  1855                           
  1856                           ;app.c: 397: PedalCurrentAcq(1,0);
  1857  0005F8  0E00               	movlw	0
  1858  0005FA  0100               	movlb	0	; () banked
  1859  0005FC  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1860  0005FE  0E01               	movlw	1
  1861  000600  ECD1  F008         	call	_PedalCurrentAcq
  1862                           
  1863                           ;app.c: 398: SysRunData.PedalRunCnt[1] = 0;
  1864  000604  0E00               	movlw	0
  1865  000606  6E0A               	movwf	_SysRunData+6,c
  1866  000608  0E00               	movlw	0
  1867  00060A  6E09               	movwf	_SysRunData+5,c
  1868                           
  1869                           ;app.c: 399: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_OUT;
  1870  00060C  0E06               	movlw	6
  1871  00060E  6E05               	movwf	_SysRunData+1,c
  1872                           
  1873                           ;app.c: 400: Pedal_Out(1);
  1874  000610  0E01               	movlw	1
  1875  000612  EC46  F009         	call	_Pedal_Out
  1876                           
  1877                           ;app.c: 402: }
  1878                           ;app.c: 403: }
  1879                           ;app.c: 404: }
  1880  000616  D089               	goto	l3571
  1881  000618                     l3517:
  1882                           
  1883                           ;app.c: 405: else
  1884                           ;app.c: 406: {
  1885                           ;app.c: 407: Pedal_Stop(1);
  1886  000618  0E01               	movlw	1
  1887  00061A  EC32  F009         	call	_Pedal_Stop
  1888                           
  1889                           ;app.c: 408: PedalCurrentAcq(1,0);
  1890  00061E  0E00               	movlw	0
  1891  000620  0100               	movlb	0	; () banked
  1892  000622  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1893  000624  0E01               	movlw	1
  1894  000626  ECD1  F008         	call	_PedalCurrentAcq
  1895                           
  1896                           ;app.c: 409: SysRunData.PedalRunCnt[1] = 0;
  1897  00062A  0E00               	movlw	0
  1898  00062C  6E0A               	movwf	_SysRunData+6,c
  1899  00062E  0E00               	movlw	0
  1900  000630  6E09               	movwf	_SysRunData+5,c
  1901                           
  1902                           ;app.c: 410: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  1903  000632  0E08               	movlw	8
  1904  000634  D767               	goto	L8
  1905                           
  1906                           ;app.c: 411: }
  1907                           ;app.c: 412: break;
  1908  000636  D079               	goto	l3571
  1909  000638                     l3523:
  1910                           
  1911                           ;app.c: 415: SysRunData.PedalWaitSleepCnt = 0;
  1912  000638  0E00               	movlw	0
  1913  00063A  6E0E               	movwf	_SysRunData+10,c
  1914  00063C  0E00               	movlw	0
  1915  00063E  6E0D               	movwf	_SysRunData+9,c
  1916                           
  1917                           ;app.c: 416: PedalCurrentAcqDelay(1);
  1918  000640  0E01               	movlw	1
  1919  000642  EC6F  F008         	call	_PedalCurrentAcqDelay
  1920                           
  1921                           ;app.c: 417: if(SysRunData.ADC_Buf[0x02] > 492)
  1922  000646  0EED               	movlw	237
  1923  000648  5C17               	subwf	_SysRunData+19,w,c
  1924  00064A  0E01               	movlw	1
  1925  00064C  5818               	subwfb	_SysRunData+20,w,c
  1926  00064E  A0D8               	btfss	status,0,c
  1927  000650  D06C               	goto	l3571
  1928                           
  1929                           ;app.c: 418: {
  1930                           ;app.c: 420: Pedal_Stop(1);
  1931  000652  0E01               	movlw	1
  1932  000654  EC32  F009         	call	_Pedal_Stop
  1933                           
  1934                           ;app.c: 421: PedalCurrentAcq(1,0);
  1935  000658  0E00               	movlw	0
  1936  00065A  0100               	movlb	0	; () banked
  1937  00065C  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1938  00065E  0E01               	movlw	1
  1939  000660  ECD1  F008         	call	_PedalCurrentAcq
  1940                           
  1941                           ;app.c: 422: SysRunData.PedalSta[1] = PEDAL_STALL_WAIT_BACK;
  1942  000664  0E03               	movlw	3
  1943  000666  D74E               	goto	L8
  1944                           
  1945                           ;app.c: 423: }
  1946                           ;app.c: 424: break;
  1947  000668  D060               	goto	l3571
  1948  00066A                     l3533:
  1949                           
  1950                           ;app.c: 426: SysRunData.PedalWaitSleepCnt = 0;
  1951  00066A  0E00               	movlw	0
  1952  00066C  6E0E               	movwf	_SysRunData+10,c
  1953  00066E  0E00               	movlw	0
  1954  000670  6E0D               	movwf	_SysRunData+9,c
  1955                           
  1956                           ;app.c: 427: if(++SysRunData.PedalWaitBackCnt[1] >= 1500)
  1957  000672  4A11               	infsnz	_SysRunData+13,f,c
  1958  000674  2A12               	incf	_SysRunData+14,f,c
  1959  000676  0EDC               	movlw	220
  1960  000678  5C11               	subwf	_SysRunData+13,w,c
  1961  00067A  0E05               	movlw	5
  1962  00067C  5812               	subwfb	_SysRunData+14,w,c
  1963  00067E  A0D8               	btfss	status,0,c
  1964  000680  D054               	goto	l3571
  1965                           
  1966                           ;app.c: 428: {
  1967                           ;app.c: 429: SysRunData.PedalWaitBackCnt[1] = 0;
  1968  000682  0E00               	movlw	0
  1969  000684  6E12               	movwf	_SysRunData+14,c
  1970  000686  0E00               	movlw	0
  1971  000688  6E11               	movwf	_SysRunData+13,c
  1972                           
  1973                           ;app.c: 430: PedalCurrentAcq(1,0);
  1974  00068A  0E00               	movlw	0
  1975  00068C  0100               	movlb	0	; () banked
  1976  00068E  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  1977  000690  0E01               	movlw	1
  1978  000692  ECD1  F008         	call	_PedalCurrentAcq
  1979  000696                     l3541:
  1980                           
  1981                           ;app.c: 431: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  1982  000696  0E01               	movlw	1
  1983  000698  D735               	goto	L8
  1984                           
  1985                           ;app.c: 432: }
  1986                           ;app.c: 433: break;
  1987  00069A  D047               	goto	l3571
  1988  00069C                     l3543:
  1989                           
  1990                           ;app.c: 436: SysRunData.PedalRunCnt[1] = 0;
  1991  00069C  0E00               	movlw	0
  1992  00069E  6E0A               	movwf	_SysRunData+6,c
  1993  0006A0  0E00               	movlw	0
  1994  0006A2  6E09               	movwf	_SysRunData+5,c
  1995                           
  1996                           ;app.c: 437: PedalCurrentAcq(1,0);
  1997  0006A4  0E00               	movlw	0
  1998  0006A6  0100               	movlb	0	; () banked
  1999  0006A8  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  2000  0006AA  0E01               	movlw	1
  2001  0006AC  ECD1  F008         	call	_PedalCurrentAcq
  2002  0006B0                     l3547:
  2003                           
  2004                           ;app.c: 438: SysRunData.PedalSta[1] = PEDAL_UP_LIMIT;
  2005  0006B0  0E00               	movlw	0
  2006  0006B2  D728               	goto	L8
  2007  0006B4                     l3549:
  2008                           
  2009                           ;app.c: 441: if(SysRunData.PedalRunCnt[1] < 350)
  2010  0006B4  0E5E               	movlw	94
  2011  0006B6  5C09               	subwf	_SysRunData+5,w,c
  2012  0006B8  0E01               	movlw	1
  2013  0006BA  580A               	subwfb	_SysRunData+6,w,c
  2014  0006BC  B0D8               	btfsc	status,0,c
  2015  0006BE  D011               	goto	l3561
  2016                           
  2017                           ;app.c: 442: {
  2018                           ;app.c: 443: Pedal_Back(1);
  2019  0006C0  0E01               	movlw	1
  2020  0006C2  EC5A  F009         	call	_Pedal_Back
  2021                           
  2022                           ;app.c: 444: SysRunData.PedalRunCnt[1]++;
  2023  0006C6  4A09               	infsnz	_SysRunData+5,f,c
  2024  0006C8  2A0A               	incf	_SysRunData+6,f,c
  2025                           
  2026                           ;app.c: 445: SysRunData.PedalWaitSleepCnt = 0;
  2027  0006CA  0E00               	movlw	0
  2028  0006CC  6E0E               	movwf	_SysRunData+10,c
  2029  0006CE  0E00               	movlw	0
  2030  0006D0  6E0D               	movwf	_SysRunData+9,c
  2031                           
  2032                           ;app.c: 446: PedalCurrentAcqDelay(1);
  2033  0006D2  0E01               	movlw	1
  2034  0006D4  EC6F  F008         	call	_PedalCurrentAcqDelay
  2035  0006D8                     l3559:
  2036                           
  2037                           ;app.c: 447: SysRunData.PedalWaitSleepCnt = 0;
  2038  0006D8  0E00               	movlw	0
  2039  0006DA  6E0E               	movwf	_SysRunData+10,c
  2040  0006DC  0E00               	movlw	0
  2041  0006DE  6E0D               	movwf	_SysRunData+9,c
  2042                           
  2043                           ;app.c: 448: }
  2044  0006E0  D024               	goto	l3571
  2045  0006E2                     l3561:
  2046                           
  2047                           ;app.c: 449: else
  2048                           ;app.c: 450: {
  2049                           ;app.c: 451: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  2050  0006E2  0E08               	movlw	8
  2051  0006E4  6E05               	movwf	_SysRunData+1,c
  2052                           
  2053                           ;app.c: 452: Pedal_Stop(1);
  2054  0006E6  0E01               	movlw	1
  2055  0006E8  EC32  F009         	call	_Pedal_Stop
  2056                           
  2057                           ;app.c: 453: PedalCurrentAcq(1,0);
  2058  0006EC  0E00               	movlw	0
  2059  0006EE  0100               	movlb	0	; () banked
  2060  0006F0  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  2061  0006F2  0E01               	movlw	1
  2062  0006F4  ECD1  F008         	call	_PedalCurrentAcq
  2063  0006F8                     L10:
  2064                           
  2065                           ;app.c: 454: SysRunData.PedalRunCnt[1] = 0;
  2066  0006F8  0E00               	movlw	0
  2067  0006FA  6E0A               	movwf	_SysRunData+6,c
  2068  0006FC  0E00               	movlw	0
  2069  0006FE  6E09               	movwf	_SysRunData+5,c
  2070                           
  2071                           ;app.c: 459: }
  2072                           
  2073                           ;app.c: 458: break;
  2074                           
  2075                           ;app.c: 457: default:
  2076                           
  2077                           ;app.c: 455: }
  2078                           ;app.c: 456: break;
  2079  000700  D014               	goto	l3571
  2080  000702                     l3569:
  2081  000702  5005               	movf	_SysRunData+1,w,c
  2082                           
  2083                           ; Switch size 1, requested type "space"
  2084                           ; Number of cases is 6, Range of values is 1 to 7
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           19    10 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089  000704  0A01               	xorlw	1	; case 1
  2090  000706  B4D8               	btfsc	status,2,c
  2091  000708  D740               	goto	l3487
  2092  00070A  0A03               	xorlw	3	; case 2
  2093  00070C  B4D8               	btfsc	status,2,c
  2094  00070E  D72B               	goto	l3483
  2095  000710  0A01               	xorlw	1	; case 3
  2096  000712  B4D8               	btfsc	status,2,c
  2097  000714  D7AA               	goto	l3533
  2098  000716  0A07               	xorlw	7	; case 4
  2099  000718  B4D8               	btfsc	status,2,c
  2100  00071A  D7C0               	goto	l3543
  2101  00071C  0A02               	xorlw	2	; case 6
  2102  00071E  B4D8               	btfsc	status,2,c
  2103  000720  D78B               	goto	l3523
  2104  000722  0A01               	xorlw	1	; case 7
  2105  000724  B4D8               	btfsc	status,2,c
  2106  000726  D7C6               	goto	l3549
  2107  000728  D000               	goto	l3571
  2108  00072A                     l3571:
  2109                           
  2110                           ;app.c: 460: }
  2111                           ;app.c: 462: if((SysRunData.PedalSta[0] != PEDAL_STALL_WAIT_BACK) || (SysRunData.PedalSt
      +                          a[1] != PEDAL_STALL_WAIT_BACK) && (SysRunData.PedalRunCnt[0] == 0))
  2112  00072A  0E03               	movlw	3
  2113  00072C  1804               	xorwf	_SysRunData,w,c
  2114  00072E  A4D8               	btfss	status,2,c
  2115  000730  D008               	goto	l3577
  2116  000732  0E03               	movlw	3
  2117  000734  1805               	xorwf	_SysRunData+1,w,c
  2118  000736  B4D8               	btfsc	status,2,c
  2119  000738  0012               	return	
  2120  00073A  5007               	movf	_SysRunData+3,w,c
  2121  00073C  1008               	iorwf	_SysRunData+4,w,c
  2122  00073E  A4D8               	btfss	status,2,c
  2123  000740  0012               	return	
  2124  000742                     l3577:
  2125                           
  2126                           ;app.c: 463: {
  2127                           ;app.c: 464: SysNormalWaitSleep();
  2128  000742  EC95  F008         	call	_SysNormalWaitSleep	;wreg free
  2129  000746  0012               	return	
  2130  000748  0012               	return		;funcret
  2131  00074A                     __end_of_Pedal_Process:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           indf2	equ	0xFDF
  2142                           postinc2	equ	0xFDE
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _SysNormalWaitSleep *****************
  2148 ;; Defined at:
  2149 ;;		line 549 in file "source/app.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    7
  2170 ;; This function calls:
  2171 ;;		_App_System_Init
  2172 ;;		_SysEnterSleep
  2173 ;; This function is called by:
  2174 ;;		_Pedal_Process
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text4
  2179  00112A                     __ptext4:
  2180                           	opt stack 0
  2181  00112A                     _SysNormalWaitSleep:
  2182                           	opt stack 21
  2183                           
  2184                           ;app.c: 551: static uint8_t tempPedalRunFlag = 0xAA;
  2185                           ;app.c: 552: if(SysRunData.PedalRunFlag != tempPedalRunFlag)
  2186                           
  2187                           ;incstack = 0
  2188  00112A  5046               	movf	SysNormalWaitSleep@tempPedalRunFlag,w,c
  2189  00112C  181B               	xorwf	_SysRunData+23,w,c
  2190  00112E  B4D8               	btfsc	status,2,c
  2191  001130  D015               	goto	l3091
  2192                           
  2193                           ;app.c: 553: {
  2194                           ;app.c: 554: tempPedalRunFlag = 0xAA;
  2195  001132  0EAA               	movlw	170
  2196  001134  6E46               	movwf	SysNormalWaitSleep@tempPedalRunFlag,c
  2197                           
  2198                           ;app.c: 555: if(++SysRunData.PedalWaitSleepCnt > 1500)
  2199  001136  4A0D               	infsnz	_SysRunData+9,f,c
  2200  001138  2A0E               	incf	_SysRunData+10,f,c
  2201  00113A  0EDD               	movlw	221
  2202  00113C  5C0D               	subwf	_SysRunData+9,w,c
  2203  00113E  0E05               	movlw	5
  2204  001140  580E               	subwfb	_SysRunData+10,w,c
  2205  001142  A0D8               	btfss	status,0,c
  2206  001144  0012               	return	
  2207                           
  2208                           ;app.c: 556: {
  2209                           ;app.c: 557: SysRunData.PedalWaitSleepCnt = 0;
  2210  001146  0E00               	movlw	0
  2211  001148  6E0E               	movwf	_SysRunData+10,c
  2212  00114A  0E00               	movlw	0
  2213  00114C  6E0D               	movwf	_SysRunData+9,c
  2214                           
  2215                           ;app.c: 558: tempPedalRunFlag = SysRunData.PedalRunFlag;
  2216  00114E  C01B  F046         	movff	_SysRunData+23,SysNormalWaitSleep@tempPedalRunFlag
  2217                           
  2218                           ;app.c: 559: SysEnterSleep();
  2219  001152  EC9D  F007         	call	_SysEnterSleep	;wreg free
  2220                           
  2221                           ;app.c: 560: App_System_Init();
  2222  001156  EC0F  F008         	call	_App_System_Init	;wreg free
  2223                           
  2224                           ;app.c: 561: }
  2225                           ;app.c: 562: }
  2226  00115A  0012               	return	
  2227  00115C                     l3091:
  2228                           
  2229                           ;app.c: 563: else
  2230                           ;app.c: 564: {
  2231                           ;app.c: 565: SysEnterSleep();
  2232  00115C  EC9D  F007         	call	_SysEnterSleep	;wreg free
  2233                           
  2234                           ;app.c: 566: App_System_Init();
  2235  001160  EC0F  F008         	call	_App_System_Init	;wreg free
  2236  001164  0012               	return	
  2237  001166  0012               	return		;funcret
  2238  001168                     __end_of_SysNormalWaitSleep:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           indf2	equ	0xFDF
  2249                           postinc2	equ	0xFDE
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _SysEnterSleep *****************
  2255 ;; Defined at:
  2256 ;;		line 577 in file "source/app.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;		None               void
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    5
  2277 ;; This function calls:
  2278 ;;		_ADC_Cmd
  2279 ;;		_CAN_SetMode
  2280 ;;		_PedalCurrentAcq
  2281 ;; This function is called by:
  2282 ;;		_SysNormalWaitSleep
  2283 ;;		_main
  2284 ;;		_SysErrorWaitSleep
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text5
  2289  000F3A                     __ptext5:
  2290                           	opt stack 0
  2291  000F3A                     _SysEnterSleep:
  2292                           	opt stack 25
  2293                           
  2294                           ;app.c: 579: CAN_SetMode(1);
  2295                           
  2296                           ;incstack = 0
  2297  000F3A  0E01               	movlw	1
  2298  000F3C  ECAE  F009         	call	_CAN_SetMode
  2299                           
  2300                           ;app.c: 580: ADC_Cmd(0x00,0);
  2301  000F40  0E00               	movlw	0
  2302  000F42  0100               	movlb	0	; () banked
  2303  000F44  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2304  000F46  0E00               	movlw	0
  2305  000F48  EC06  F009         	call	_ADC_Cmd
  2306                           
  2307                           ;app.c: 581: ADC_Cmd(0x01,0);
  2308  000F4C  0E00               	movlw	0
  2309  000F4E  0100               	movlb	0	; () banked
  2310  000F50  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2311  000F52  0E01               	movlw	1
  2312  000F54  EC06  F009         	call	_ADC_Cmd
  2313                           
  2314                           ;app.c: 582: PedalCurrentAcq(0,0);
  2315  000F58  0E00               	movlw	0
  2316  000F5A  0100               	movlb	0	; () banked
  2317  000F5C  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  2318  000F5E  0E00               	movlw	0
  2319  000F60  ECD1  F008         	call	_PedalCurrentAcq
  2320                           
  2321                           ;app.c: 583: PedalCurrentAcq(1,0);
  2322  000F64  0E00               	movlw	0
  2323  000F66  0100               	movlb	0	; () banked
  2324  000F68  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  2325  000F6A  0E01               	movlw	1
  2326  000F6C  ECD1  F008         	call	_PedalCurrentAcq
  2327                           
  2328                           ;app.c: 584: SysRunData.PedalRunCnt[0] = 0;
  2329  000F70  0E00               	movlw	0
  2330  000F72  6E08               	movwf	_SysRunData+4,c
  2331  000F74  0E00               	movlw	0
  2332  000F76  6E07               	movwf	_SysRunData+3,c
  2333                           
  2334                           ;app.c: 585: SysRunData.PedalRunCnt[1] = 0;
  2335  000F78  0E00               	movlw	0
  2336  000F7A  6E0A               	movwf	_SysRunData+6,c
  2337  000F7C  0E00               	movlw	0
  2338  000F7E  6E09               	movwf	_SysRunData+5,c
  2339                           
  2340                           ;app.c: 586: SysRunData.PedalWaitSleepCnt = 0;
  2341  000F80  0E00               	movlw	0
  2342  000F82  6E0E               	movwf	_SysRunData+10,c
  2343  000F84  0E00               	movlw	0
  2344  000F86  6E0D               	movwf	_SysRunData+9,c
  2345                           
  2346                           ;app.c: 587: PIR5bits.WAKIF = 0;
  2347  000F88  9C77               	bcf	3959,6,c	;volatile
  2348                           
  2349                           ;app.c: 588: PIE5bits.WAKIE = 1;
  2350  000F8A  8C76               	bsf	3958,6,c	;volatile
  2351                           
  2352                           ;app.c: 589: IPR5bits.WAKIP = 1;
  2353  000F8C  8C78               	bsf	3960,6,c	;volatile
  2354                           
  2355                           ;app.c: 590: CANCON = 0x20;
  2356  000F8E  0E20               	movlw	32
  2357  000F90  6E6F               	movwf	3951,c	;volatile
  2358                           
  2359                           ;app.c: 591: while(CANSTATbits.OPMODE !=0x01);
  2360  000F92  D000               	goto	l3037
  2361  000F94                     l3037:
  2362  000F94  386E               	swapf	3950,w,c	;volatile
  2363  000F96  32E8               	rrcf	wreg,f,c
  2364  000F98  0B07               	andlw	7
  2365  000F9A  06E8               	decf	wreg,f,c
  2366  000F9C  A4D8               	btfss	status,2,c
  2367  000F9E  D7FA               	goto	l3037
  2368                           
  2369                           ;app.c: 592: OSCCONbits.IDLEN = 0;
  2370  000FA0  9ED3               	bcf	4051,7,c	;volatile
  2371  000FA2  0003               	sleep		;# 
  2372                           
  2373                           ;app.c: 594: _delay((unsigned long)((150)*(32000000UL/4000000.0)));
  2374  000FA4  0EF0               	movlw	240
  2375  000FA6                     u3057:
  2376  000FA6  D000               	nop2	
  2377  000FA8  2EE8               	decfsz	wreg,f,c
  2378  000FAA  D7FD               	goto	u3057
  2379  000FAC  0012               	return		;funcret
  2380  000FAE                     __end_of_SysEnterSleep:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf2	equ	0xFDF
  2391                           postinc2	equ	0xFDE
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _App_System_Init *****************
  2397 ;; Defined at:
  2398 ;;		line 26 in file "source/app.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    6
  2419 ;; This function calls:
  2420 ;;		_ADC_Cmd
  2421 ;;		_ADC_Init
  2422 ;;		_CAN_SetMode
  2423 ;;		_ConfigTimer0
  2424 ;;		_ECAN_Init
  2425 ;;		_PORT_Init
  2426 ;;		_RLY_Init
  2427 ;;		_SetSysClock
  2428 ;;		_bsp_StartAutoTimer
  2429 ;; This function is called by:
  2430 ;;		_SysNormalWaitSleep
  2431 ;;		_main
  2432 ;;		_SysErrorWaitSleep
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text6
  2437  00101E                     __ptext6:
  2438                           	opt stack 0
  2439  00101E                     _App_System_Init:
  2440                           	opt stack 24
  2441                           
  2442                           ;app.c: 29: RCONbits.IPEN = 1;;
  2443                           
  2444                           ;incstack = 0
  2445  00101E  8ED0               	bsf	4048,7,c	;volatile
  2446                           
  2447                           ;app.c: 31: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  2448  001020  8EF2               	bsf	intcon,7,c	;volatile
  2449  001022  8CF2               	bsf	intcon,6,c	;volatile
  2450                           
  2451                           ;app.c: 33: SetSysClock();
  2452  001024  ECBA  F009         	call	_SetSysClock	;wreg free
  2453                           
  2454                           ;app.c: 35: ADC_Init();
  2455  001028  EC6E  F009         	call	_ADC_Init	;wreg free
  2456                           
  2457                           ;app.c: 36: ECAN_Init();
  2458  00102C  EC88  F006         	call	_ECAN_Init	;wreg free
  2459                           
  2460                           ;app.c: 37: RLY_Init();
  2461  001030  EC81  F009         	call	_RLY_Init	;wreg free
  2462                           
  2463                           ;app.c: 38: PORT_Init();
  2464  001034  ECBD  F009         	call	_PORT_Init	;wreg free
  2465                           
  2466                           ;app.c: 40: ConfigTimer0(1);
  2467  001038  0E00               	movlw	0
  2468  00103A  0100               	movlb	0	; () banked
  2469  00103C  6FCF               	movwf	(ConfigTimer0@ms+1)& (0+255),b
  2470  00103E  0E01               	movlw	1
  2471  001040  6FCE               	movwf	ConfigTimer0@ms& (0+255),b
  2472  001042  EC57  F005         	call	_ConfigTimer0	;wreg free
  2473                           
  2474                           ;app.c: 42: CAN_SetMode(0);
  2475  001046  0E00               	movlw	0
  2476  001048  ECAE  F009         	call	_CAN_SetMode
  2477                           
  2478                           ;app.c: 44: ADC_Cmd(0x00,1);
  2479  00104C  0E01               	movlw	1
  2480  00104E  0100               	movlb	0	; () banked
  2481  001050  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2482  001052  0E00               	movlw	0
  2483  001054  EC06  F009         	call	_ADC_Cmd
  2484                           
  2485                           ;app.c: 45: ADC_Cmd(0x01,1);
  2486  001058  0E01               	movlw	1
  2487  00105A  0100               	movlb	0	; () banked
  2488  00105C  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2489  00105E  0E01               	movlw	1
  2490  001060  EC06  F009         	call	_ADC_Cmd
  2491                           
  2492                           ;app.c: 47: bsp_StartAutoTimer(1,10);
  2493  001064  0E00               	movlw	0
  2494  001066  0100               	movlb	0	; () banked
  2495  001068  6FB6               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  2496  00106A  0E0A               	movlw	10
  2497  00106C  6FB5               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  2498  00106E  0E01               	movlw	1
  2499  001070  ECD7  F006         	call	_bsp_StartAutoTimer
  2500                           
  2501                           ;app.c: 48: bsp_StartAutoTimer(0,1);
  2502  001074  0E00               	movlw	0
  2503  001076  0100               	movlb	0	; () banked
  2504  001078  6FB6               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  2505  00107A  0E01               	movlw	1
  2506  00107C  6FB5               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  2507  00107E  0E00               	movlw	0
  2508  001080  ECD7  F006         	call	_bsp_StartAutoTimer
  2509  001084  0012               	return		;funcret
  2510  001086                     __end_of_App_System_Init:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           prodh	equ	0xFF4
  2517                           prodl	equ	0xFF3
  2518                           intcon	equ	0xFF2
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           indf2	equ	0xFDF
  2522                           postinc2	equ	0xFDE
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _bsp_StartAutoTimer *****************
  2528 ;; Defined at:
  2529 ;;		line 98 in file "source/timer.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  _id             1    wreg     unsigned char 
  2532 ;;  _period         2   14[BANK0 ] unsigned int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  _id             1   16[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;Total ram usage:        3 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    4
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_App_System_Init
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text7
  2559  000DAE                     __ptext7:
  2560                           	opt stack 0
  2561  000DAE                     _bsp_StartAutoTimer:
  2562                           	opt stack 25
  2563                           
  2564                           ;incstack = 0
  2565                           ;bsp_StartAutoTimer@_id stored from wreg
  2566  000DAE  0100               	movlb	0	; () banked
  2567  000DB0  6FB7               	movwf	bsp_StartAutoTimer@_id& (0+255),b
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;timer.c: 100: if (_id >= 2)
  2571  000DB2  0E01               	movlw	1
  2572  000DB4  0100               	movlb	0	; () banked
  2573  000DB6  65B7               	cpfsgt	bsp_StartAutoTimer@_id& (0+255),b
  2574  000DB8  D001               	goto	l529
  2575  000DBA                     
  2576                           ; BSR set to: 0
  2577  000DBA  D7FF               	goto	l531
  2578  000DBC                     l529:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;timer.c: 105: }
  2582                           ;timer.c: 107: INTCONbits.GIE = 0;INTCONbits.PEIE = 0;;
  2583  000DBC  9EF2               	bcf	intcon,7,c	;volatile
  2584  000DBE  9CF2               	bcf	intcon,6,c	;volatile
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;timer.c: 109: s_tTmr[_id].Count = _period;
  2588  000DC0  0100               	movlb	0	; () banked
  2589  000DC2  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2590  000DC4  0D06               	mullw	6
  2591  000DC6  0E02               	movlw	2
  2592  000DC8  26F3               	addwf	prodl,f,c
  2593  000DCA  0E00               	movlw	0
  2594  000DCC  22F4               	addwfc	prodh,f,c
  2595  000DCE  0E1D               	movlw	low _s_tTmr
  2596  000DD0  24F3               	addwf	prodl,w,c
  2597  000DD2  6ED9               	movwf	fsr2l,c
  2598  000DD4  0E00               	movlw	high _s_tTmr
  2599  000DD6  20F4               	addwfc	prodh,w,c
  2600  000DD8  6EDA               	movwf	fsr2h,c
  2601  000DDA  C0B5  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  2602  000DDE  C0B6  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  2603                           
  2604                           ;timer.c: 110: s_tTmr[_id].PreLoad = _period;
  2605  000DE2  0100               	movlb	0	; () banked
  2606  000DE4  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2607  000DE6  0D06               	mullw	6
  2608  000DE8  0E04               	movlw	4
  2609  000DEA  26F3               	addwf	prodl,f,c
  2610  000DEC  0E00               	movlw	0
  2611  000DEE  22F4               	addwfc	prodh,f,c
  2612  000DF0  0E1D               	movlw	low _s_tTmr
  2613  000DF2  24F3               	addwf	prodl,w,c
  2614  000DF4  6ED9               	movwf	fsr2l,c
  2615  000DF6  0E00               	movlw	high _s_tTmr
  2616  000DF8  20F4               	addwfc	prodh,w,c
  2617  000DFA  6EDA               	movwf	fsr2h,c
  2618  000DFC  C0B5  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  2619  000E00  C0B6  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  2620                           
  2621                           ;timer.c: 111: s_tTmr[_id].Flag = 0;
  2622  000E04  0100               	movlb	0	; () banked
  2623  000E06  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2624  000E08  0D06               	mullw	6
  2625  000E0A  0E01               	movlw	1
  2626  000E0C  26F3               	addwf	prodl,f,c
  2627  000E0E  0E00               	movlw	0
  2628  000E10  22F4               	addwfc	prodh,f,c
  2629  000E12  0E1D               	movlw	low _s_tTmr
  2630  000E14  24F3               	addwf	prodl,w,c
  2631  000E16  6ED9               	movwf	fsr2l,c
  2632  000E18  0E00               	movlw	high _s_tTmr
  2633  000E1A  20F4               	addwfc	prodh,w,c
  2634  000E1C  6EDA               	movwf	fsr2h,c
  2635  000E1E  0E00               	movlw	0
  2636  000E20  6EDF               	movwf	indf2,c
  2637                           
  2638                           ;timer.c: 112: s_tTmr[_id].Mode = TMR_AUTO_MODE;
  2639  000E22  0100               	movlb	0	; () banked
  2640  000E24  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2641  000E26  0D06               	mullw	6
  2642  000E28  0E1D               	movlw	low _s_tTmr
  2643  000E2A  24F3               	addwf	prodl,w,c
  2644  000E2C  6ED9               	movwf	fsr2l,c
  2645  000E2E  0E00               	movlw	high _s_tTmr
  2646  000E30  20F4               	addwfc	prodh,w,c
  2647  000E32  6EDA               	movwf	fsr2h,c
  2648  000E34  0E01               	movlw	1
  2649  000E36  6EDF               	movwf	indf2,c
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;timer.c: 114: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  2653  000E38  8EF2               	bsf	intcon,7,c	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656  000E3A  8CF2               	bsf	intcon,6,c	;volatile
  2657                           
  2658                           ; BSR set to: 0
  2659  000E3C  0012               	return		;funcret
  2660  000E3E                     __end_of_bsp_StartAutoTimer:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           prodh	equ	0xFF4
  2667                           prodl	equ	0xFF3
  2668                           intcon	equ	0xFF2
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           indf2	equ	0xFDF
  2672                           postinc2	equ	0xFDE
  2673                           postdec2	equ	0xFDD
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _SetSysClock *****************
  2679 ;; Defined at:
  2680 ;;		line 476 in file "source/app.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		None
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_App_System_Init
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text8
  2709  001374                     __ptext8:
  2710                           	opt stack 0
  2711  001374                     _SetSysClock:
  2712                           	opt stack 25
  2713                           
  2714                           ;app.c: 479: OSCTUNEbits.PLLEN = 1;
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;incstack = 0
  2718  001374  8C9B               	bsf	3995,6,c	;volatile
  2719  001376  0012               	return		;funcret
  2720  001378                     __end_of_SetSysClock:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           indf2	equ	0xFDF
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function _RLY_Init *****************
  2739 ;; Defined at:
  2740 ;;		line 11 in file "source/rly.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;		None               void
  2747 ;; Registers used:
  2748 ;;		None
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    4
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_App_System_Init
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text9
  2769  001302                     __ptext9:
  2770                           	opt stack 0
  2771  001302                     _RLY_Init:
  2772                           	opt stack 25
  2773                           
  2774                           ;incstack = 0
  2775                           ;rly.c: 13: do { LATC1 = 0; } while(0);
  2776  001302  928B               	bcf	3979,1,c	;volatile
  2777  001304  D000               	goto	l573
  2778  001306                     l573:
  2779  001306  908B               	bcf	3979,0,c	;volatile
  2780  001308  D000               	goto	l575
  2781  00130A                     l575:
  2782  00130A  9E8B               	bcf	3979,7,c	;volatile
  2783  00130C  D000               	goto	l577
  2784  00130E                     l577:
  2785  00130E  988B               	bcf	3979,4,c	;volatile
  2786  001310  D000               	goto	l579
  2787  001312                     l579:
  2788  001312  9294               	bcf	3988,1,c	;volatile
  2789  001314  D000               	goto	l581
  2790  001316                     l581:
  2791  001316  9094               	bcf	3988,0,c	;volatile
  2792  001318  D000               	goto	l583
  2793  00131A                     l583:
  2794  00131A  9E94               	bcf	3988,7,c	;volatile
  2795  00131C  D000               	goto	l585
  2796  00131E                     l585:
  2797  00131E  9894               	bcf	3988,4,c	;volatile
  2798  001320  0012               	return	
  2799  001322  0012               	return		;funcret
  2800  001324                     __end_of_RLY_Init:
  2801                           	opt stack 0
  2802                           tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           prodh	equ	0xFF4
  2807                           prodl	equ	0xFF3
  2808                           intcon	equ	0xFF2
  2809                           postinc0	equ	0xFEE
  2810                           wreg	equ	0xFE8
  2811                           indf2	equ	0xFDF
  2812                           postinc2	equ	0xFDE
  2813                           postdec2	equ	0xFDD
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _PORT_Init *****************
  2819 ;; Defined at:
  2820 ;;		line 775 in file "source/app.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		None
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_App_System_Init
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text10
  2849  00137A                     __ptext10:
  2850                           	opt stack 0
  2851  00137A                     _PORT_Init:
  2852                           	opt stack 25
  2853                           
  2854                           ;incstack = 0
  2855  00137A  0012               	return		;funcret
  2856  00137C                     __end_of_PORT_Init:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           intcon	equ	0xFF2
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           indf2	equ	0xFDF
  2868                           postinc2	equ	0xFDE
  2869                           postdec2	equ	0xFDD
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _ECAN_Init *****************
  2875 ;; Defined at:
  2876 ;;		line 31 in file "source/ecan.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    4
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_App_System_Init
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text11
  2905  000D10                     __ptext11:
  2906                           	opt stack 0
  2907  000D10                     _ECAN_Init:
  2908                           	opt stack 25
  2909                           
  2910                           ;incstack = 0
  2911                           ;ecan.c: 33: do { TRISB5 = 0; } while(0);
  2912  000D10  9A93               	bcf	3987,5,c	;volatile
  2913  000D12  D000               	goto	l432
  2914  000D14                     l432:
  2915  000D14  9493               	bcf	3987,2,c	;volatile
  2916  000D16  D000               	goto	l434
  2917  000D18                     l434:
  2918  000D18  8693               	bsf	3987,3,c	;volatile
  2919  000D1A  D000               	goto	l2919
  2920  000D1C                     l2919:
  2921                           
  2922                           ;ecan.c: 37: CANCON = 0x80;
  2923  000D1C  0E80               	movlw	128
  2924  000D1E  6E6F               	movwf	3951,c	;volatile
  2925                           
  2926                           ;ecan.c: 39: while(CANSTAT != 0X80);
  2927  000D20  D000               	goto	l2921
  2928  000D22                     l2921:
  2929  000D22  0E80               	movlw	128
  2930  000D24  186E               	xorwf	3950,w,c	;volatile
  2931  000D26  A4D8               	btfss	status,2,c
  2932  000D28  D7FC               	goto	l2921
  2933                           
  2934                           ;ecan.c: 44: ECANCON = 0x00;
  2935  000D2A  0E00               	movlw	0
  2936  000D2C  6E72               	movwf	3954,c	;volatile
  2937                           
  2938                           ;ecan.c: 53: if (0==1)
  2939  000D2E  D005               	goto	l2929
  2940                           
  2941                           ;ecan.c: 54: {
  2942                           ;ecan.c: 56: BRGCON1 = 0x13;
  2943  000D30  0E13               	movlw	19
  2944  000D32  D007               	goto	L13
  2945                           
  2946                           ; BSR set to: 14
  2947                           ;ecan.c: 60: else if (0==1)
  2948                           
  2949                           ;ecan.c: 59: }
  2950                           
  2951                           ;ecan.c: 58: BRGCON3 = 0x02;
  2952                           
  2953                           ;ecan.c: 57: BRGCON2 = 0x90;
  2954  000D34  D002               	goto	l2929
  2955                           
  2956                           ; BSR set to: 14
  2957                           ;ecan.c: 61: {
  2958                           ;ecan.c: 63: BRGCON1 = 0x0F;
  2959  000D36  0E0F               	movlw	15
  2960  000D38  D004               	goto	L13
  2961  000D3A                     l2929:
  2962                           
  2963                           ;ecan.c: 68: {
  2964                           ;ecan.c: 70: BRGCON1 = 0x03;
  2965  000D3A  0E03               	movlw	3
  2966  000D3C  D002               	goto	L13
  2967                           
  2968                           ; BSR set to: 14
  2969                           ;ecan.c: 74: else if (0==1)
  2970                           
  2971                           ;ecan.c: 73: }
  2972                           
  2973                           ;ecan.c: 72: BRGCON3 = 0x02;
  2974                           
  2975                           ;ecan.c: 71: BRGCON2 = 0x90;
  2976  000D3E  D00A               	goto	l440
  2977                           
  2978                           ; BSR set to: 14
  2979                           ;ecan.c: 75: {
  2980                           ;ecan.c: 77: BRGCON1 = 0x01;
  2981  000D40  0E01               	movlw	1
  2982  000D42                     L13:
  2983  000D42  010E               	movlb	14	; () banked
  2984  000D44  6F43               	movwf	67,b	;volatile
  2985                           
  2986                           ;ecan.c: 78: BRGCON2 = 0x90;
  2987  000D46  0E90               	movlw	144
  2988  000D48  010E               	movlb	14	; () banked
  2989  000D4A  6F44               	movwf	68,b	;volatile
  2990                           
  2991                           ;ecan.c: 79: BRGCON3 = 0x02;
  2992  000D4C  0E02               	movlw	2
  2993  000D4E  010E               	movlb	14	; () banked
  2994  000D50  6F45               	movwf	69,b	;volatile
  2995                           
  2996                           ; BSR set to: 14
  2997                           
  2998                           ; BSR set to: 14
  2999  000D52  D000               	goto	l440
  3000  000D54                     l440:
  3001                           
  3002                           ; BSR set to: 14
  3003                           ;ecan.c: 80: }
  3004                           ;ecan.c: 83: RXM0EIDH = 0x00;
  3005  000D54  0E00               	movlw	0
  3006  000D56  010E               	movlb	14	; () banked
  3007  000D58  6FFA               	movwf	250,b	;volatile
  3008                           
  3009                           ;ecan.c: 84: RXM0EIDL = 0x00;
  3010  000D5A  0E00               	movlw	0
  3011  000D5C  010E               	movlb	14	; () banked
  3012  000D5E  6FFB               	movwf	251,b	;volatile
  3013                           
  3014                           ; BSR set to: 14
  3015                           ;ecan.c: 85: RXM0SIDH = 0xFF;
  3016  000D60  010E               	movlb	14	; () banked
  3017  000D62  69F8               	setf	248,b	;volatile
  3018                           
  3019                           ;ecan.c: 86: RXM0SIDL = 0xE0;
  3020  000D64  0EE0               	movlw	224
  3021  000D66  010E               	movlb	14	; () banked
  3022  000D68  6FF9               	movwf	249,b	;volatile
  3023                           
  3024                           ;ecan.c: 91: RXFCON0 = 0x01;
  3025  000D6A  0E01               	movlw	1
  3026  000D6C  010E               	movlb	14	; () banked
  3027  000D6E  6F46               	movwf	70,b	;volatile
  3028                           
  3029                           ;ecan.c: 92: RXFCON1 = 0x00;
  3030  000D70  0E00               	movlw	0
  3031  000D72  010E               	movlb	14	; () banked
  3032  000D74  6F47               	movwf	71,b	;volatile
  3033                           
  3034                           ;ecan.c: 97: RXF0EIDH = 0x00;
  3035  000D76  0E00               	movlw	0
  3036  000D78  010E               	movlb	14	; () banked
  3037  000D7A  6FE2               	movwf	226,b	;volatile
  3038                           
  3039                           ;ecan.c: 98: RXF0EIDL = 0x00;
  3040  000D7C  0E00               	movlw	0
  3041  000D7E  010E               	movlb	14	; () banked
  3042  000D80  6FE3               	movwf	227,b	;volatile
  3043                           
  3044                           ;ecan.c: 99: RXF0SIDH = (uint8_t)(0X110>>3);
  3045  000D82  0E22               	movlw	34
  3046  000D84  010E               	movlb	14	; () banked
  3047  000D86  6FE0               	movwf	224,b	;volatile
  3048                           
  3049                           ;ecan.c: 100: RXF0SIDL = (uint8_t)(0X110<<5)&0xE0;
  3050  000D88  0E00               	movlw	0
  3051  000D8A  010E               	movlb	14	; () banked
  3052  000D8C  6FE1               	movwf	225,b	;volatile
  3053                           
  3054                           ;ecan.c: 112: TXB0CON=0X03;
  3055  000D8E  0E03               	movlw	3
  3056  000D90  010F               	movlb	15	; () banked
  3057  000D92  6F20               	movwf	32,b	;volatile
  3058                           
  3059                           ;ecan.c: 115: CANCON = 0x00;
  3060  000D94  0E00               	movlw	0
  3061  000D96  6E6F               	movwf	3951,c	;volatile
  3062                           
  3063                           ; BSR set to: 15
  3064                           
  3065                           ;ecan.c: 117: while(CANSTAT != 0X00);
  3066  000D98  D000               	goto	l2935
  3067  000D9A                     l2935:
  3068  000D9A  506E               	movf	3950,w,c	;volatile
  3069  000D9C  A4D8               	btfss	status,2,c
  3070  000D9E  D7FD               	goto	l2935
  3071                           
  3072                           ;ecan.c: 120: RXB0CON = 0x20;
  3073  000DA0  0E20               	movlw	32
  3074  000DA2  6E60               	movwf	3936,c	;volatile
  3075                           
  3076                           ;ecan.c: 122: PIR5=0X00;
  3077  000DA4  0E00               	movlw	0
  3078  000DA6  6E77               	movwf	3959,c	;volatile
  3079                           
  3080                           ;ecan.c: 123: PIE5bits.RXB0IE = 1;
  3081  000DA8  8076               	bsf	3958,0,c	;volatile
  3082                           
  3083                           ;ecan.c: 124: IPR5bits.RXB0IP = 1;
  3084  000DAA  8078               	bsf	3960,0,c	;volatile
  3085  000DAC  0012               	return		;funcret
  3086  000DAE                     __end_of_ECAN_Init:
  3087                           	opt stack 0
  3088                           tblptru	equ	0xFF8
  3089                           tblptrh	equ	0xFF7
  3090                           tblptrl	equ	0xFF6
  3091                           tablat	equ	0xFF5
  3092                           prodh	equ	0xFF4
  3093                           prodl	equ	0xFF3
  3094                           intcon	equ	0xFF2
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf2	equ	0xFDF
  3098                           postinc2	equ	0xFDE
  3099                           postdec2	equ	0xFDD
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _ConfigTimer0 *****************
  3105 ;; Defined at:
  3106 ;;		line 16 in file "source/timer.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  ms              2   39[BANK0 ] unsigned int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  tmp             4   45[BANK0 ] unsigned long 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;		None               void
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;Total ram usage:       10 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    5
  3127 ;; This function calls:
  3128 ;;		___lldiv
  3129 ;;		___lmul
  3130 ;; This function is called by:
  3131 ;;		_App_System_Init
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text12
  3136  000AAE                     __ptext12:
  3137                           	opt stack 0
  3138  000AAE                     _ConfigTimer0:
  3139                           	opt stack 24
  3140                           
  3141                           ;timer.c: 18: uint32_t tmp;
  3142                           ;timer.c: 20: T0CON = 0X02;
  3143                           
  3144                           ;incstack = 0
  3145  000AAE  0E02               	movlw	2
  3146  000AB0  6ED5               	movwf	4053,c	;volatile
  3147                           
  3148                           ;timer.c: 21: T0CONbits.T08BIT = 0;
  3149  000AB2  9CD5               	bcf	4053,6,c	;volatile
  3150                           
  3151                           ;timer.c: 22: tmp = 32000000UL/4/8;
  3152  000AB4  0E40               	movlw	64
  3153  000AB6  0100               	movlb	0	; () banked
  3154  000AB8  6FD4               	movwf	ConfigTimer0@tmp& (0+255),b
  3155  000ABA  0E42               	movlw	66
  3156  000ABC  6FD5               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  3157  000ABE  0E0F               	movlw	15
  3158  000AC0  6FD6               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  3159  000AC2  0E00               	movlw	0
  3160  000AC4  6FD7               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;timer.c: 23: tmp = (tmp * ms)/1000;
  3164  000AC6  C0CE  F0B5         	movff	ConfigTimer0@ms,___lmul@multiplier
  3165  000ACA  C0CF  F0B6         	movff	ConfigTimer0@ms+1,___lmul@multiplier+1
  3166  000ACE  0100               	movlb	0	; () banked
  3167  000AD0  6BB7               	clrf	(___lmul@multiplier+2)& (0+255),b
  3168  000AD2  6BB8               	clrf	(___lmul@multiplier+3)& (0+255),b
  3169  000AD4  C0D4  F0B9         	movff	ConfigTimer0@tmp,___lmul@multiplicand
  3170  000AD8  C0D5  F0BA         	movff	ConfigTimer0@tmp+1,___lmul@multiplicand+1
  3171  000ADC  C0D6  F0BB         	movff	ConfigTimer0@tmp+2,___lmul@multiplicand+2
  3172  000AE0  C0D7  F0BC         	movff	ConfigTimer0@tmp+3,___lmul@multiplicand+3
  3173  000AE4  EC60  F007         	call	___lmul	;wreg free
  3174  000AE8  C0B5  F0C1         	movff	?___lmul,___lldiv@dividend
  3175  000AEC  C0B6  F0C2         	movff	?___lmul+1,___lldiv@dividend+1
  3176  000AF0  C0B7  F0C3         	movff	?___lmul+2,___lldiv@dividend+2
  3177  000AF4  C0B8  F0C4         	movff	?___lmul+3,___lldiv@dividend+3
  3178  000AF8  0EE8               	movlw	232
  3179  000AFA  0100               	movlb	0	; () banked
  3180  000AFC  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3181  000AFE  0E03               	movlw	3
  3182  000B00  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3183  000B02  0E00               	movlw	0
  3184  000B04  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3185  000B06  0E00               	movlw	0
  3186  000B08  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3187  000B0A  ECC2  F005         	call	___lldiv	;wreg free
  3188  000B0E  C0C1  F0D4         	movff	?___lldiv,ConfigTimer0@tmp
  3189  000B12  C0C2  F0D5         	movff	?___lldiv+1,ConfigTimer0@tmp+1
  3190  000B16  C0C3  F0D6         	movff	?___lldiv+2,ConfigTimer0@tmp+2
  3191  000B1A  C0C4  F0D7         	movff	?___lldiv+3,ConfigTimer0@tmp+3
  3192                           
  3193                           ;timer.c: 24: tmp = 65536 - tmp;
  3194  000B1E  C0D4  F0D0         	movff	ConfigTimer0@tmp,??_ConfigTimer0
  3195  000B22  C0D5  F0D1         	movff	ConfigTimer0@tmp+1,??_ConfigTimer0+1
  3196  000B26  C0D6  F0D2         	movff	ConfigTimer0@tmp+2,??_ConfigTimer0+2
  3197  000B2A  C0D7  F0D3         	movff	ConfigTimer0@tmp+3,??_ConfigTimer0+3
  3198  000B2E  0100               	movlb	0	; () banked
  3199  000B30  1FD0               	comf	??_ConfigTimer0& (0+255),f,b
  3200  000B32  1FD1               	comf	(??_ConfigTimer0+1)& (0+255),f,b
  3201  000B34  1FD2               	comf	(??_ConfigTimer0+2)& (0+255),f,b
  3202  000B36  1FD3               	comf	(??_ConfigTimer0+3)& (0+255),f,b
  3203  000B38  2BD0               	incf	??_ConfigTimer0& (0+255),f,b
  3204  000B3A  0E00               	movlw	0
  3205  000B3C  23D1               	addwfc	(??_ConfigTimer0+1)& (0+255),f,b
  3206  000B3E  23D2               	addwfc	(??_ConfigTimer0+2)& (0+255),f,b
  3207  000B40  23D3               	addwfc	(??_ConfigTimer0+3)& (0+255),f,b
  3208  000B42  0E00               	movlw	0
  3209  000B44  0100               	movlb	0	; () banked
  3210  000B46  25D0               	addwf	??_ConfigTimer0& (0+255),w,b
  3211  000B48  0100               	movlb	0	; () banked
  3212  000B4A  6FD4               	movwf	ConfigTimer0@tmp& (0+255),b
  3213  000B4C  0E00               	movlw	0
  3214  000B4E  0100               	movlb	0	; () banked
  3215  000B50  21D1               	addwfc	(??_ConfigTimer0+1)& (0+255),w,b
  3216  000B52  0100               	movlb	0	; () banked
  3217  000B54  6FD5               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  3218  000B56  0E01               	movlw	1
  3219  000B58  0100               	movlb	0	; () banked
  3220  000B5A  21D2               	addwfc	(??_ConfigTimer0+2)& (0+255),w,b
  3221  000B5C  0100               	movlb	0	; () banked
  3222  000B5E  6FD6               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  3223  000B60  0E00               	movlw	0
  3224  000B62  0100               	movlb	0	; () banked
  3225  000B64  21D3               	addwfc	(??_ConfigTimer0+3)& (0+255),w,b
  3226  000B66  0100               	movlb	0	; () banked
  3227  000B68  6FD7               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;timer.c: 25: T0RH = (uint8_t)(tmp>>8);
  3231  000B6A  C0D5  F002         	movff	ConfigTimer0@tmp+1,_T0RH
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;timer.c: 26: T0RL = (uint8_t)tmp;
  3235  000B6E  C0D4  F003         	movff	ConfigTimer0@tmp,_T0RL
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;timer.c: 27: T0CONbits.TMR0ON = 1;
  3239  000B72  8ED5               	bsf	4053,7,c	;volatile
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;timer.c: 28: TMR0H = T0RH;
  3243  000B74  C002  FFD7         	movff	_T0RH,4055	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;timer.c: 29: TMR0L = T0RL;
  3247  000B78  C003  FFD6         	movff	_T0RL,4054	;volatile
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;timer.c: 30: INTCONbits.TMR0IF = 0;
  3251  000B7C  94F2               	bcf	intcon,2,c	;volatile
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;timer.c: 31: INTCONbits.TMR0IE = 1;
  3255  000B7E  8AF2               	bsf	intcon,5,c	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;timer.c: 32: INTCON2bits.TMR0IP = 0;
  3259  000B80  94F1               	bcf	intcon2,2,c	;volatile
  3260                           
  3261                           ; BSR set to: 0
  3262  000B82  0012               	return		;funcret
  3263  000B84                     __end_of_ConfigTimer0:
  3264                           	opt stack 0
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           intcon	equ	0xFF2
  3272                           intcon2	equ	0xFF1
  3273                           postinc0	equ	0xFEE
  3274                           wreg	equ	0xFE8
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           postdec2	equ	0xFDD
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282 ;; *************** function ___lmul *****************
  3283 ;; Defined at:
  3284 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  multiplier      4   14[BANK0 ] unsigned long 
  3287 ;;  multiplicand    4   18[BANK0 ] unsigned long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  product         4   22[BANK0 ] unsigned long 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  4   14[BANK0 ] unsigned long 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;Total ram usage:       12 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    4
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_ConfigTimer0
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text13
  3314  000EC0                     __ptext13:
  3315                           	opt stack 0
  3316  000EC0                     ___lmul:
  3317                           	opt stack 24
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;incstack = 0
  3321  000EC0  0E00               	movlw	0
  3322  000EC2  0100               	movlb	0	; () banked
  3323  000EC4  6FBD               	movwf	___lmul@product& (0+255),b
  3324  000EC6  0E00               	movlw	0
  3325  000EC8  6FBE               	movwf	(___lmul@product+1)& (0+255),b
  3326  000ECA  0E00               	movlw	0
  3327  000ECC  6FBF               	movwf	(___lmul@product+2)& (0+255),b
  3328  000ECE  0E00               	movlw	0
  3329  000ED0  6FC0               	movwf	(___lmul@product+3)& (0+255),b
  3330  000ED2  D000               	goto	l2877
  3331  000ED4                     l2877:
  3332                           
  3333                           ; BSR set to: 0
  3334  000ED4  0100               	movlb	0	; () banked
  3335  000ED6  A1B5               	btfss	___lmul@multiplier& (0+255),0,b
  3336  000ED8  D011               	goto	l2881
  3337                           
  3338                           ; BSR set to: 0
  3339  000EDA  0100               	movlb	0	; () banked
  3340  000EDC  51B9               	movf	___lmul@multiplicand& (0+255),w,b
  3341  000EDE  0100               	movlb	0	; () banked
  3342  000EE0  27BD               	addwf	___lmul@product& (0+255),f,b
  3343  000EE2  0100               	movlb	0	; () banked
  3344  000EE4  51BA               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3345  000EE6  0100               	movlb	0	; () banked
  3346  000EE8  23BE               	addwfc	(___lmul@product+1)& (0+255),f,b
  3347  000EEA  0100               	movlb	0	; () banked
  3348  000EEC  51BB               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3349  000EEE  0100               	movlb	0	; () banked
  3350  000EF0  23BF               	addwfc	(___lmul@product+2)& (0+255),f,b
  3351  000EF2  0100               	movlb	0	; () banked
  3352  000EF4  51BC               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3353  000EF6  0100               	movlb	0	; () banked
  3354  000EF8  23C0               	addwfc	(___lmul@product+3)& (0+255),f,b
  3355  000EFA  D000               	goto	l2881
  3356  000EFC                     l2881:
  3357                           
  3358                           ; BSR set to: 0
  3359  000EFC  0100               	movlb	0	; () banked
  3360  000EFE  90D8               	bcf	status,0,c
  3361  000F00  37B9               	rlcf	___lmul@multiplicand& (0+255),f,b
  3362  000F02  37BA               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3363  000F04  37BB               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3364  000F06  37BC               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3365                           
  3366                           ; BSR set to: 0
  3367  000F08  0100               	movlb	0	; () banked
  3368  000F0A  90D8               	bcf	status,0,c
  3369  000F0C  33B8               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3370  000F0E  33B7               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3371  000F10  33B6               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3372  000F12  33B5               	rrcf	___lmul@multiplier& (0+255),f,b
  3373  000F14  0100               	movlb	0	; () banked
  3374  000F16  51B5               	movf	___lmul@multiplier& (0+255),w,b
  3375  000F18  0100               	movlb	0	; () banked
  3376  000F1A  11B6               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3377  000F1C  0100               	movlb	0	; () banked
  3378  000F1E  11B7               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3379  000F20  0100               	movlb	0	; () banked
  3380  000F22  11B8               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3381  000F24  A4D8               	btfss	status,2,c
  3382  000F26  D7D6               	goto	l2877
  3383                           
  3384                           ; BSR set to: 0
  3385  000F28  C0BD  F0B5         	movff	___lmul@product,?___lmul
  3386  000F2C  C0BE  F0B6         	movff	___lmul@product+1,?___lmul+1
  3387  000F30  C0BF  F0B7         	movff	___lmul@product+2,?___lmul+2
  3388  000F34  C0C0  F0B8         	movff	___lmul@product+3,?___lmul+3
  3389                           
  3390                           ; BSR set to: 0
  3391  000F38  0012               	return		;funcret
  3392  000F3A                     __end_of___lmul:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           prodh	equ	0xFF4
  3399                           prodl	equ	0xFF3
  3400                           intcon	equ	0xFF2
  3401                           intcon2	equ	0xFF1
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function ___lldiv *****************
  3412 ;; Defined at:
  3413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        4   26[BANK0 ] unsigned long 
  3416 ;;  divisor         4   30[BANK0 ] unsigned long 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  quotient        4   34[BANK0 ] unsigned long 
  3419 ;;  counter         1   38[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  4   26[BANK0 ] unsigned long 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;Total ram usage:       13 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_ConfigTimer0
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text14
  3444  000B84                     __ptext14:
  3445                           	opt stack 0
  3446  000B84                     ___lldiv:
  3447                           	opt stack 24
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451  000B84  0E00               	movlw	0
  3452  000B86  0100               	movlb	0	; () banked
  3453  000B88  6FC9               	movwf	___lldiv@quotient& (0+255),b
  3454  000B8A  0E00               	movlw	0
  3455  000B8C  6FCA               	movwf	(___lldiv@quotient+1)& (0+255),b
  3456  000B8E  0E00               	movlw	0
  3457  000B90  6FCB               	movwf	(___lldiv@quotient+2)& (0+255),b
  3458  000B92  0E00               	movlw	0
  3459  000B94  6FCC               	movwf	(___lldiv@quotient+3)& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462  000B96  0100               	movlb	0	; () banked
  3463  000B98  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3464  000B9A  0100               	movlb	0	; () banked
  3465  000B9C  11C6               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3466  000B9E  0100               	movlb	0	; () banked
  3467  000BA0  11C7               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3468  000BA2  0100               	movlb	0	; () banked
  3469  000BA4  11C8               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3470  000BA6  B4D8               	btfsc	status,2,c
  3471  000BA8  D047               	goto	l1087
  3472                           
  3473                           ; BSR set to: 0
  3474  000BAA  0E01               	movlw	1
  3475  000BAC  0100               	movlb	0	; () banked
  3476  000BAE  6FCD               	movwf	___lldiv@counter& (0+255),b
  3477  000BB0  D009               	goto	l2893
  3478  000BB2                     l2891:
  3479                           
  3480                           ; BSR set to: 0
  3481  000BB2  0100               	movlb	0	; () banked
  3482  000BB4  90D8               	bcf	status,0,c
  3483  000BB6  37C5               	rlcf	___lldiv@divisor& (0+255),f,b
  3484  000BB8  37C6               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3485  000BBA  37C7               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3486  000BBC  37C8               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3487  000BBE  0100               	movlb	0	; () banked
  3488  000BC0  2BCD               	incf	___lldiv@counter& (0+255),f,b
  3489  000BC2  D000               	goto	l2893
  3490  000BC4                     l2893:
  3491                           
  3492                           ; BSR set to: 0
  3493  000BC4  0100               	movlb	0	; () banked
  3494  000BC6  BFC8               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  3495  000BC8  D002               	goto	l2895
  3496  000BCA  D7F3               	goto	l2891
  3497                           
  3498                           ; BSR set to: 0
  3499  000BCC  D000               	goto	l2895
  3500  000BCE                     l2895:
  3501                           
  3502                           ; BSR set to: 0
  3503  000BCE  0100               	movlb	0	; () banked
  3504  000BD0  90D8               	bcf	status,0,c
  3505  000BD2  37C9               	rlcf	___lldiv@quotient& (0+255),f,b
  3506  000BD4  37CA               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3507  000BD6  37CB               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3508  000BD8  37CC               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3509                           
  3510                           ; BSR set to: 0
  3511  000BDA  0100               	movlb	0	; () banked
  3512  000BDC  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3513  000BDE  0100               	movlb	0	; () banked
  3514  000BE0  5DC1               	subwf	___lldiv@dividend& (0+255),w,b
  3515  000BE2  0100               	movlb	0	; () banked
  3516  000BE4  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3517  000BE6  0100               	movlb	0	; () banked
  3518  000BE8  59C2               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3519  000BEA  0100               	movlb	0	; () banked
  3520  000BEC  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3521  000BEE  0100               	movlb	0	; () banked
  3522  000BF0  59C3               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3523  000BF2  0100               	movlb	0	; () banked
  3524  000BF4  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3525  000BF6  0100               	movlb	0	; () banked
  3526  000BF8  59C4               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3527  000BFA  A0D8               	btfss	status,0,c
  3528  000BFC  D013               	goto	l2903
  3529                           
  3530                           ; BSR set to: 0
  3531  000BFE  0100               	movlb	0	; () banked
  3532  000C00  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3533  000C02  0100               	movlb	0	; () banked
  3534  000C04  5FC1               	subwf	___lldiv@dividend& (0+255),f,b
  3535  000C06  0100               	movlb	0	; () banked
  3536  000C08  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3537  000C0A  0100               	movlb	0	; () banked
  3538  000C0C  5BC2               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3539  000C0E  0100               	movlb	0	; () banked
  3540  000C10  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3541  000C12  0100               	movlb	0	; () banked
  3542  000C14  5BC3               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3543  000C16  0100               	movlb	0	; () banked
  3544  000C18  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3545  000C1A  0100               	movlb	0	; () banked
  3546  000C1C  5BC4               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3547                           
  3548                           ; BSR set to: 0
  3549  000C1E  0100               	movlb	0	; () banked
  3550  000C20  81C9               	bsf	___lldiv@quotient& (0+255),0,b
  3551  000C22  D000               	goto	l2903
  3552  000C24                     l2903:
  3553                           
  3554                           ; BSR set to: 0
  3555  000C24  0100               	movlb	0	; () banked
  3556  000C26  90D8               	bcf	status,0,c
  3557  000C28  33C8               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3558  000C2A  33C7               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3559  000C2C  33C6               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3560  000C2E  33C5               	rrcf	___lldiv@divisor& (0+255),f,b
  3561                           
  3562                           ; BSR set to: 0
  3563  000C30  0100               	movlb	0	; () banked
  3564  000C32  2FCD               	decfsz	___lldiv@counter& (0+255),f,b
  3565  000C34  D7CC               	goto	l2895
  3566  000C36  D000               	goto	l1087
  3567  000C38                     l1087:
  3568                           
  3569                           ; BSR set to: 0
  3570  000C38  C0C9  F0C1         	movff	___lldiv@quotient,?___lldiv
  3571  000C3C  C0CA  F0C2         	movff	___lldiv@quotient+1,?___lldiv+1
  3572  000C40  C0CB  F0C3         	movff	___lldiv@quotient+2,?___lldiv+2
  3573  000C44  C0CC  F0C4         	movff	___lldiv@quotient+3,?___lldiv+3
  3574                           
  3575                           ; BSR set to: 0
  3576  000C48  0012               	return		;funcret
  3577  000C4A                     __end_of___lldiv:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           intcon2	equ	0xFF1
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           indf2	equ	0xFDF
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _CAN_SetMode *****************
  3597 ;; Defined at:
  3598 ;;		line 138 in file "source/ecan.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  mode            1    wreg     unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  mode            1   14[BANK0 ] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg, status,2
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;Total ram usage:        1 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    4
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_App_System_Init
  3623 ;;		_SysEnterSleep
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text15
  3628  00135C                     __ptext15:
  3629                           	opt stack 0
  3630  00135C                     _CAN_SetMode:
  3631                           	opt stack 25
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;incstack = 0
  3635                           ;CAN_SetMode@mode stored from wreg
  3636  00135C  0100               	movlb	0	; () banked
  3637  00135E  6FB5               	movwf	CAN_SetMode@mode& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;ecan.c: 140: if(mode == 0)
  3641  001360  0100               	movlb	0	; () banked
  3642  001362  51B5               	movf	CAN_SetMode@mode& (0+255),w,b
  3643  001364  0100               	movlb	0	; () banked
  3644  001366  A4D8               	btfss	status,2,c
  3645  001368  D002               	goto	l456
  3646                           
  3647                           ; BSR set to: 0
  3648                           
  3649                           ;ecan.c: 141: {
  3650                           ;ecan.c: 142: do { LATB5 = 0; } while(0);
  3651  00136A  9A8A               	bcf	3978,5,c	;volatile
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;ecan.c: 143: }
  3655  00136C  0012               	return	
  3656  00136E                     l456:
  3657                           
  3658                           ; BSR set to: 0
  3659  00136E  8A8A               	bsf	3978,5,c	;volatile
  3660                           
  3661                           ; BSR set to: 0
  3662  001370  0012               	return	
  3663                           
  3664                           ; BSR set to: 0
  3665                           
  3666                           ; BSR set to: 0
  3667  001372  0012               	return		;funcret
  3668  001374                     __end_of_CAN_SetMode:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           intcon2	equ	0xFF1
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _ADC_Init *****************
  3688 ;; Defined at:
  3689 ;;		line 11 in file "source/adc.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    5
  3710 ;; This function calls:
  3711 ;;		_ADC_StartConversion
  3712 ;; This function is called by:
  3713 ;;		_App_System_Init
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text16
  3718  0012DC                     __ptext16:
  3719                           	opt stack 0
  3720  0012DC                     _ADC_Init:
  3721                           	opt stack 24
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;incstack = 0
  3725                           ;adc.c: 13: do { TRISB6 = 0; } while(0);
  3726  0012DC  9C93               	bcf	3987,6,c	;volatile
  3727  0012DE  D000               	goto	l29
  3728  0012E0                     l29:
  3729  0012E0  9E93               	bcf	3987,7,c	;volatile
  3730                           
  3731                           ;adc.c: 15: TRISA = 0xFF;
  3732  0012E2  6892               	setf	3986,c	;volatile
  3733                           
  3734                           ;adc.c: 16: ANCON0 = 0X0F;
  3735  0012E4  0E0F               	movlw	15
  3736  0012E6  010F               	movlb	15	; () banked
  3737  0012E8  6F5D               	movwf	93,b	;volatile
  3738                           
  3739                           ;adc.c: 18: ADCON1 = 0x00;
  3740  0012EA  0E00               	movlw	0
  3741  0012EC  6EC1               	movwf	4033,c	;volatile
  3742                           
  3743                           ;adc.c: 19: ADCON2 = 0xAA;
  3744  0012EE  0EAA               	movlw	170
  3745  0012F0  6EC0               	movwf	4032,c	;volatile
  3746                           
  3747                           ;adc.c: 20: ADRESH = 0;
  3748  0012F2  0E00               	movlw	0
  3749  0012F4  6EC4               	movwf	4036,c	;volatile
  3750                           
  3751                           ;adc.c: 21: ADRESL = 0;
  3752  0012F6  0E00               	movlw	0
  3753  0012F8  6EC3               	movwf	4035,c	;volatile
  3754                           
  3755                           ; BSR set to: 15
  3756                           ;adc.c: 22: ADC_StartConversion(0x01);
  3757  0012FA  0E01               	movlw	1
  3758  0012FC  EC92  F009         	call	_ADC_StartConversion
  3759  001300  0012               	return		;funcret
  3760  001302                     __end_of_ADC_Init:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           indf2	equ	0xFDF
  3773                           postinc2	equ	0xFDE
  3774                           postdec2	equ	0xFDD
  3775                           fsr2h	equ	0xFDA
  3776                           fsr2l	equ	0xFD9
  3777                           status	equ	0xFD8
  3778                           
  3779 ;; *************** function _ADC_Cmd *****************
  3780 ;; Defined at:
  3781 ;;		line 94 in file "source/adc.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  channel         1    wreg     unsigned char 
  3784 ;;  sta             1   14[BANK0 ] unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  channel         1   15[BANK0 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3796 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    4
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_App_System_Init
  3807 ;;		_SysEnterSleep
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text17
  3812  00120C                     __ptext17:
  3813                           	opt stack 0
  3814  00120C                     _ADC_Cmd:
  3815                           	opt stack 25
  3816                           
  3817                           ;incstack = 0
  3818                           ;ADC_Cmd@channel stored from wreg
  3819  00120C  0100               	movlb	0	; () banked
  3820  00120E  6FB6               	movwf	ADC_Cmd@channel& (0+255),b
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;adc.c: 96: if(sta != 0)
  3824  001210  0100               	movlb	0	; () banked
  3825  001212  51B5               	movf	ADC_Cmd@sta& (0+255),w,b
  3826  001214  0100               	movlb	0	; () banked
  3827  001216  B4D8               	btfsc	status,2,c
  3828  001218  D008               	goto	l2915
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;adc.c: 97: {
  3832                           ;adc.c: 98: if(channel == 1)
  3833  00121A  0100               	movlb	0	; () banked
  3834  00121C  05B6               	decf	ADC_Cmd@channel& (0+255),w,b
  3835  00121E  A4D8               	btfss	status,2,c
  3836  001220  D002               	goto	l52
  3837                           
  3838                           ; BSR set to: 0
  3839                           
  3840                           ;adc.c: 99: {
  3841                           ;adc.c: 100: do { LATB6 = 1; } while(0);
  3842  001222  8C8A               	bsf	3978,6,c	;volatile
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;adc.c: 101: }
  3846  001224  0012               	return	
  3847  001226                     l52:
  3848                           
  3849                           ; BSR set to: 0
  3850  001226  8E8A               	bsf	3978,7,c	;volatile
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;adc.c: 105: }
  3854                           ;adc.c: 106: }
  3855                           
  3856                           ; BSR set to: 0
  3857  001228  0012               	return	
  3858  00122A                     l2915:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;adc.c: 107: else
  3862                           ;adc.c: 108: {
  3863                           ;adc.c: 109: if(channel == 1)
  3864  00122A  0100               	movlb	0	; () banked
  3865  00122C  05B6               	decf	ADC_Cmd@channel& (0+255),w,b
  3866  00122E  A4D8               	btfss	status,2,c
  3867  001230  D002               	goto	l59
  3868                           
  3869                           ; BSR set to: 0
  3870                           
  3871                           ;adc.c: 110: {
  3872                           ;adc.c: 111: do { LATB6 = 0; } while(0);
  3873  001232  9C8A               	bcf	3978,6,c	;volatile
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;adc.c: 112: }
  3877  001234  0012               	return	
  3878  001236                     l59:
  3879                           
  3880                           ; BSR set to: 0
  3881  001236  9E8A               	bcf	3978,7,c	;volatile
  3882                           
  3883                           ; BSR set to: 0
  3884                           
  3885                           ; BSR set to: 0
  3886  001238  0012               	return	
  3887                           
  3888                           ; BSR set to: 0
  3889                           
  3890                           ; BSR set to: 0
  3891  00123A  0012               	return		;funcret
  3892  00123C                     __end_of_ADC_Cmd:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           intcon2	equ	0xFF1
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           indf2	equ	0xFDF
  3905                           postinc2	equ	0xFDE
  3906                           postdec2	equ	0xFDD
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _Pedal_Stop *****************
  3912 ;; Defined at:
  3913 ;;		line 72 in file "source/rly.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  dir             1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  dir             1   14[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    4
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_Pedal_Process
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text18
  3942  001264                     __ptext18:
  3943                           	opt stack 0
  3944  001264                     _Pedal_Stop:
  3945                           	opt stack 24
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;incstack = 0
  3949                           ;Pedal_Stop@dir stored from wreg
  3950  001264  0100               	movlb	0	; () banked
  3951  001266  6FB5               	movwf	Pedal_Stop@dir& (0+255),b
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;rly.c: 74: if(dir == 0)
  3955  001268  0100               	movlb	0	; () banked
  3956  00126A  51B5               	movf	Pedal_Stop@dir& (0+255),w,b
  3957  00126C  0100               	movlb	0	; () banked
  3958  00126E  A4D8               	btfss	status,2,c
  3959  001270  D004               	goto	l3071
  3960                           
  3961                           ; BSR set to: 0
  3962                           
  3963                           ;rly.c: 75: {
  3964                           ;rly.c: 76: do { LATC1 = 0; } while(0);
  3965  001272  928B               	bcf	3979,1,c	;volatile
  3966  001274  D000               	goto	l621
  3967  001276                     l621:
  3968                           
  3969                           ; BSR set to: 0
  3970  001276  908B               	bcf	3979,0,c	;volatile
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;rly.c: 78: }
  3974  001278  0012               	return	
  3975  00127A                     l3071:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;rly.c: 79: else if(dir == 1)
  3979  00127A  0100               	movlb	0	; () banked
  3980  00127C  05B5               	decf	Pedal_Stop@dir& (0+255),w,b
  3981  00127E  A4D8               	btfss	status,2,c
  3982  001280  0012               	return	
  3983                           
  3984                           ; BSR set to: 0
  3985                           
  3986                           ;rly.c: 80: {
  3987                           ;rly.c: 81: do { LATC7 = 0; } while(0);
  3988  001282  9E8B               	bcf	3979,7,c	;volatile
  3989  001284  D000               	goto	l627
  3990  001286                     l627:
  3991                           
  3992                           ; BSR set to: 0
  3993  001286  988B               	bcf	3979,4,c	;volatile
  3994                           
  3995                           ; BSR set to: 0
  3996                           
  3997                           ; BSR set to: 0
  3998  001288  0012               	return	
  3999                           
  4000                           ; BSR set to: 0
  4001                           
  4002                           ; BSR set to: 0
  4003  00128A  0012               	return		;funcret
  4004  00128C                     __end_of_Pedal_Stop:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           intcon2	equ	0xFF1
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           indf2	equ	0xFDF
  4017                           postinc2	equ	0xFDE
  4018                           postdec2	equ	0xFDD
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023 ;; *************** function _Pedal_Out *****************
  4024 ;; Defined at:
  4025 ;;		line 30 in file "source/rly.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  dir             1    wreg     unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  dir             1   14[BANK0 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;		None               void
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;Total ram usage:        1 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    4
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_Pedal_Process
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text19
  4054  00128C                     __ptext19:
  4055                           	opt stack 0
  4056  00128C                     _Pedal_Out:
  4057                           	opt stack 24
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;incstack = 0
  4061                           ;Pedal_Out@dir stored from wreg
  4062  00128C  0100               	movlb	0	; () banked
  4063  00128E  6FB5               	movwf	Pedal_Out@dir& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;rly.c: 32: if(dir == 0)
  4067  001290  0100               	movlb	0	; () banked
  4068  001292  51B5               	movf	Pedal_Out@dir& (0+255),w,b
  4069  001294  0100               	movlb	0	; () banked
  4070  001296  A4D8               	btfss	status,2,c
  4071  001298  D004               	goto	l3051
  4072                           
  4073                           ; BSR set to: 0
  4074                           
  4075                           ;rly.c: 33: {
  4076                           ;rly.c: 34: do { LATC1 = 1; } while(0);
  4077  00129A  828B               	bsf	3979,1,c	;volatile
  4078  00129C  D000               	goto	l593
  4079  00129E                     l593:
  4080                           
  4081                           ; BSR set to: 0
  4082  00129E  908B               	bcf	3979,0,c	;volatile
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;rly.c: 36: }
  4086  0012A0  0012               	return	
  4087  0012A2                     l3051:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;rly.c: 37: else if(dir == 1)
  4091  0012A2  0100               	movlb	0	; () banked
  4092  0012A4  05B5               	decf	Pedal_Out@dir& (0+255),w,b
  4093  0012A6  A4D8               	btfss	status,2,c
  4094  0012A8  0012               	return	
  4095                           
  4096                           ; BSR set to: 0
  4097                           
  4098                           ;rly.c: 38: {
  4099                           ;rly.c: 39: do { LATC7 = 0; } while(0);
  4100  0012AA  9E8B               	bcf	3979,7,c	;volatile
  4101  0012AC  D000               	goto	l599
  4102  0012AE                     l599:
  4103                           
  4104                           ; BSR set to: 0
  4105  0012AE  888B               	bsf	3979,4,c	;volatile
  4106                           
  4107                           ; BSR set to: 0
  4108                           
  4109                           ; BSR set to: 0
  4110  0012B0  0012               	return	
  4111                           
  4112                           ; BSR set to: 0
  4113                           
  4114                           ; BSR set to: 0
  4115  0012B2  0012               	return		;funcret
  4116  0012B4                     __end_of_Pedal_Out:
  4117                           	opt stack 0
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           prodh	equ	0xFF4
  4123                           prodl	equ	0xFF3
  4124                           intcon	equ	0xFF2
  4125                           intcon2	equ	0xFF1
  4126                           postinc0	equ	0xFEE
  4127                           wreg	equ	0xFE8
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _Pedal_Back *****************
  4136 ;; Defined at:
  4137 ;;		line 51 in file "source/rly.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  dir             1    wreg     unsigned char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  dir             1   14[BANK0 ] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;		None               void
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;Total ram usage:        1 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    4
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_Pedal_Process
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text20
  4166  0012B4                     __ptext20:
  4167                           	opt stack 0
  4168  0012B4                     _Pedal_Back:
  4169                           	opt stack 24
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;incstack = 0
  4173                           ;Pedal_Back@dir stored from wreg
  4174  0012B4  0100               	movlb	0	; () banked
  4175  0012B6  6FB5               	movwf	Pedal_Back@dir& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;rly.c: 53: if(dir == 0)
  4179  0012B8  0100               	movlb	0	; () banked
  4180  0012BA  51B5               	movf	Pedal_Back@dir& (0+255),w,b
  4181  0012BC  0100               	movlb	0	; () banked
  4182  0012BE  A4D8               	btfss	status,2,c
  4183  0012C0  D004               	goto	l3075
  4184                           
  4185                           ; BSR set to: 0
  4186                           
  4187                           ;rly.c: 54: {
  4188                           ;rly.c: 55: do { LATC1 = 0; } while(0);
  4189  0012C2  928B               	bcf	3979,1,c	;volatile
  4190  0012C4  D000               	goto	l607
  4191  0012C6                     l607:
  4192                           
  4193                           ; BSR set to: 0
  4194  0012C6  808B               	bsf	3979,0,c	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;rly.c: 57: }
  4198  0012C8  0012               	return	
  4199  0012CA                     l3075:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;rly.c: 58: else if(dir == 1)
  4203  0012CA  0100               	movlb	0	; () banked
  4204  0012CC  05B5               	decf	Pedal_Back@dir& (0+255),w,b
  4205  0012CE  A4D8               	btfss	status,2,c
  4206  0012D0  0012               	return	
  4207                           
  4208                           ; BSR set to: 0
  4209                           
  4210                           ;rly.c: 59: {
  4211                           ;rly.c: 60: do { LATC7 = 1; } while(0);
  4212  0012D2  8E8B               	bsf	3979,7,c	;volatile
  4213  0012D4  D000               	goto	l613
  4214  0012D6                     l613:
  4215                           
  4216                           ; BSR set to: 0
  4217  0012D6  988B               	bcf	3979,4,c	;volatile
  4218                           
  4219                           ; BSR set to: 0
  4220                           
  4221                           ; BSR set to: 0
  4222  0012D8  0012               	return	
  4223                           
  4224                           ; BSR set to: 0
  4225                           
  4226                           ; BSR set to: 0
  4227  0012DA  0012               	return		;funcret
  4228  0012DC                     __end_of_Pedal_Back:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           intcon2	equ	0xFF1
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           indf2	equ	0xFDF
  4241                           postinc2	equ	0xFDE
  4242                           postdec2	equ	0xFDD
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function _PedalCurrentAcqDelay *****************
  4248 ;; Defined at:
  4249 ;;		line 522 in file "source/app.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  dir             1    wreg     unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  dir             1   16[BANK0 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;Total ram usage:        1 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    5
  4270 ;; This function calls:
  4271 ;;		_PedalCurrentAcq
  4272 ;; This function is called by:
  4273 ;;		_Pedal_Process
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text21
  4278  0010DE                     __ptext21:
  4279                           	opt stack 0
  4280  0010DE                     _PedalCurrentAcqDelay:
  4281                           	opt stack 23
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;incstack = 0
  4285                           ;PedalCurrentAcqDelay@dir stored from wreg
  4286  0010DE  0100               	movlb	0	; () banked
  4287  0010E0  6FB7               	movwf	PedalCurrentAcqDelay@dir& (0+255),b
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;app.c: 524: if(dir == 0)
  4291  0010E2  0100               	movlb	0	; () banked
  4292  0010E4  51B7               	movf	PedalCurrentAcqDelay@dir& (0+255),w,b
  4293  0010E6  0100               	movlb	0	; () banked
  4294  0010E8  A4D8               	btfss	status,2,c
  4295  0010EA  D00D               	goto	l3061
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;app.c: 525: {
  4299                           ;app.c: 526: if(++SysRunData.CurrentDelayAcqCnt[0] >= 50)
  4300  0010EC  2A0B               	incf	_SysRunData+7,f,c
  4301  0010EE  0E31               	movlw	49
  4302  0010F0  640B               	cpfsgt	_SysRunData+7,c
  4303  0010F2  0012               	return	
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;app.c: 527: {
  4307                           ;app.c: 528: SysRunData.CurrentDelayAcqCnt[0] = 0;
  4308  0010F4  0E00               	movlw	0
  4309  0010F6  6E0B               	movwf	_SysRunData+7,c
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;app.c: 529: PedalCurrentAcq(0,1);
  4313  0010F8  0E01               	movlw	1
  4314  0010FA  0100               	movlb	0	; () banked
  4315  0010FC  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  4316  0010FE  0E00               	movlw	0
  4317  001100  ECD1  F008         	call	_PedalCurrentAcq
  4318                           
  4319                           ;app.c: 530: }
  4320                           ;app.c: 531: }
  4321  001104  0012               	return	
  4322  001106                     l3061:
  4323                           
  4324                           ;app.c: 532: else if(dir == 1)
  4325  001106  0100               	movlb	0	; () banked
  4326  001108  05B7               	decf	PedalCurrentAcqDelay@dir& (0+255),w,b
  4327  00110A  A4D8               	btfss	status,2,c
  4328  00110C  0012               	return	
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;app.c: 533: {
  4332                           ;app.c: 534: if(++SysRunData.CurrentDelayAcqCnt[1] >= 50)
  4333  00110E  2A0C               	incf	_SysRunData+8,f,c
  4334  001110  0E31               	movlw	49
  4335  001112  640C               	cpfsgt	_SysRunData+8,c
  4336  001114  0012               	return	
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;app.c: 535: {
  4340                           ;app.c: 536: SysRunData.CurrentDelayAcqCnt[1] = 0;
  4341  001116  0E00               	movlw	0
  4342  001118  6E0C               	movwf	_SysRunData+8,c
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;app.c: 537: PedalCurrentAcq(1,1);
  4346  00111A  0E01               	movlw	1
  4347  00111C  0100               	movlb	0	; () banked
  4348  00111E  6FB5               	movwf	PedalCurrentAcq@sta& (0+255),b
  4349  001120  0E01               	movlw	1
  4350  001122  ECD1  F008         	call	_PedalCurrentAcq
  4351  001126  0012               	return	
  4352  001128  0012               	return		;funcret
  4353  00112A                     __end_of_PedalCurrentAcqDelay:
  4354                           	opt stack 0
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           intcon2	equ	0xFF1
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _PedalCurrentAcq *****************
  4373 ;; Defined at:
  4374 ;;		line 489 in file "source/app.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  dir             1    wreg     unsigned char 
  4377 ;;  sta             1   14[BANK0 ] unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  dir             1   15[BANK0 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4389 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;Total ram usage:        2 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    4
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_Pedal_Process
  4400 ;;		_PedalCurrentAcqDelay
  4401 ;;		_SysEnterSleep
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text22
  4406  0011A2                     __ptext22:
  4407                           	opt stack 0
  4408  0011A2                     _PedalCurrentAcq:
  4409                           	opt stack 25
  4410                           
  4411                           ;incstack = 0
  4412                           ;PedalCurrentAcq@dir stored from wreg
  4413  0011A2  0100               	movlb	0	; () banked
  4414  0011A4  6FB6               	movwf	PedalCurrentAcq@dir& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;app.c: 491: if(dir == 0)
  4418  0011A6  0100               	movlb	0	; () banked
  4419  0011A8  51B6               	movf	PedalCurrentAcq@dir& (0+255),w,b
  4420  0011AA  0100               	movlb	0	; () banked
  4421  0011AC  A4D8               	btfss	status,2,c
  4422  0011AE  D008               	goto	l2985
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;app.c: 492: {
  4426                           ;app.c: 493: if(sta == 1)
  4427  0011B0  0100               	movlb	0	; () banked
  4428  0011B2  05B5               	decf	PedalCurrentAcq@sta& (0+255),w,b
  4429  0011B4  A4D8               	btfss	status,2,c
  4430  0011B6  D002               	goto	l2983
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;app.c: 494: {
  4434                           ;app.c: 495: SysRunData.CurrentAcqSta |= (1<<0);
  4435  0011B8  801C               	bsf	_SysRunData+24,0,c
  4436                           
  4437                           ;app.c: 496: }
  4438  0011BA  0012               	return	
  4439  0011BC                     l2983:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;app.c: 497: else
  4443                           ;app.c: 498: {
  4444                           ;app.c: 499: SysRunData.CurrentAcqSta &= ~(1<<0);
  4445  0011BC  901C               	bcf	_SysRunData+24,0,c
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;app.c: 500: }
  4449                           ;app.c: 501: }
  4450  0011BE  0012               	return	
  4451  0011C0                     l2985:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;app.c: 502: else if(dir == 1)
  4455  0011C0  0100               	movlb	0	; () banked
  4456  0011C2  05B6               	decf	PedalCurrentAcq@dir& (0+255),w,b
  4457  0011C4  A4D8               	btfss	status,2,c
  4458  0011C6  0012               	return	
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;app.c: 503: {
  4462                           ;app.c: 504: if(sta == 1)
  4463  0011C8  0100               	movlb	0	; () banked
  4464  0011CA  05B5               	decf	PedalCurrentAcq@sta& (0+255),w,b
  4465  0011CC  A4D8               	btfss	status,2,c
  4466  0011CE  D002               	goto	l2991
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;app.c: 505: {
  4470                           ;app.c: 506: SysRunData.CurrentAcqSta |= (1<<1);
  4471  0011D0  821C               	bsf	_SysRunData+24,1,c
  4472                           
  4473                           ;app.c: 507: }
  4474  0011D2  0012               	return	
  4475  0011D4                     l2991:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;app.c: 508: else
  4479                           ;app.c: 509: {
  4480                           ;app.c: 510: SysRunData.CurrentAcqSta &= ~(1<<1);
  4481  0011D4  921C               	bcf	_SysRunData+24,1,c
  4482                           
  4483                           ; BSR set to: 0
  4484                           
  4485                           ; BSR set to: 0
  4486  0011D6  0012               	return	
  4487                           
  4488                           ; BSR set to: 0
  4489                           
  4490                           ; BSR set to: 0
  4491  0011D8  0012               	return		;funcret
  4492  0011DA                     __end_of_PedalCurrentAcq:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           intcon	equ	0xFF2
  4501                           intcon2	equ	0xFF1
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           indf2	equ	0xFDF
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function _AdcPro *****************
  4512 ;; Defined at:
  4513 ;;		line 625 in file "source/app.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  sum             2   21[BANK0 ] unsigned int 
  4518 ;;  i               1   23[BANK0 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;		None               void
  4521 ;; Registers used:
  4522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;Total ram usage:        3 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    5
  4535 ;; This function calls:
  4536 ;;		_ADC_GetConversionValue
  4537 ;;		_ADC_StartConversion
  4538 ;;		___lwdiv
  4539 ;; This function is called by:
  4540 ;;		_AppTask_PollHandler
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text23
  4545  00074A                     __ptext23:
  4546                           	opt stack 0
  4547  00074A                     _AdcPro:
  4548                           	opt stack 24
  4549                           
  4550                           ;app.c: 627: static uint16_t buf[5][4];
  4551                           ;app.c: 628: static uint8_t write;
  4552                           ;app.c: 629: static uint8_t index = 0x01;
  4553                           ;app.c: 630: uint16_t sum;
  4554                           ;app.c: 631: uint8_t i;
  4555                           ;app.c: 633: if(index == 0x01)
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;incstack = 0
  4559  00074A  0445               	decf	AdcPro@index,w,c
  4560  00074C  A4D8               	btfss	status,2,c
  4561  00074E  D05B               	goto	l3169
  4562                           
  4563                           ;app.c: 634: {
  4564                           ;app.c: 635: buf[write][0x01] = ADC_GetConversionValue();
  4565  000750  ECED  F008         	call	_ADC_GetConversionValue	;wreg free
  4566  000754  5001               	movf	AdcPro@write,w,c
  4567  000756  0D08               	mullw	8
  4568  000758  0E02               	movlw	2
  4569  00075A  26F3               	addwf	prodl,f,c
  4570  00075C  0E00               	movlw	0
  4571  00075E  22F4               	addwfc	prodh,f,c
  4572  000760  0E60               	movlw	low AdcPro@buf
  4573  000762  24F3               	addwf	prodl,w,c
  4574  000764  6ED9               	movwf	fsr2l,c
  4575  000766  0E00               	movlw	high AdcPro@buf
  4576  000768  20F4               	addwfc	prodh,w,c
  4577  00076A  6EDA               	movwf	fsr2h,c
  4578  00076C  0100               	movlb	0	; () banked
  4579  00076E  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4580  000772  0100               	movlb	0	; () banked
  4581  000774  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;app.c: 640: sum = 0;
  4585  000778  0E00               	movlw	0
  4586  00077A  0100               	movlb	0	; () banked
  4587  00077C  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4588  00077E  0E00               	movlw	0
  4589  000780  6FBC               	movwf	AdcPro@sum& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;app.c: 641: for (i = 0; i < 5; i++)
  4593  000782  0E00               	movlw	0
  4594  000784  0100               	movlb	0	; () banked
  4595  000786  6FBE               	movwf	AdcPro@i& (0+255),b
  4596  000788                     l3145:
  4597                           
  4598                           ; BSR set to: 0
  4599  000788  0E04               	movlw	4
  4600  00078A  0100               	movlb	0	; () banked
  4601  00078C  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4602  00078E  D001               	goto	l3149
  4603                           
  4604                           ; BSR set to: 0
  4605  000790  D016               	goto	l3155
  4606  000792                     l3149:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;app.c: 642: {
  4610                           ;app.c: 643: sum += buf[i][0x01];
  4611  000792  0100               	movlb	0	; () banked
  4612  000794  51BE               	movf	AdcPro@i& (0+255),w,b
  4613  000796  0D08               	mullw	8
  4614  000798  0E02               	movlw	2
  4615  00079A  26F3               	addwf	prodl,f,c
  4616  00079C  0E00               	movlw	0
  4617  00079E  22F4               	addwfc	prodh,f,c
  4618  0007A0  0E60               	movlw	low AdcPro@buf
  4619  0007A2  24F3               	addwf	prodl,w,c
  4620  0007A4  6ED9               	movwf	fsr2l,c
  4621  0007A6  0E00               	movlw	high AdcPro@buf
  4622  0007A8  20F4               	addwfc	prodh,w,c
  4623  0007AA  6EDA               	movwf	fsr2h,c
  4624  0007AC  50DE               	movf	postinc2,w,c
  4625  0007AE  0100               	movlb	0	; () banked
  4626  0007B0  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4627  0007B2  50DD               	movf	postdec2,w,c
  4628  0007B4  0100               	movlb	0	; () banked
  4629  0007B6  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 0
  4632  0007B8  0100               	movlb	0	; () banked
  4633  0007BA  2BBE               	incf	AdcPro@i& (0+255),f,b
  4634  0007BC  D7E5               	goto	l3145
  4635  0007BE                     l3155:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;app.c: 644: }
  4639                           ;app.c: 645: SysRunData.ADC_Buf[0x01] = sum / 5;
  4640  0007BE  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4641  0007C2  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4642  0007C6  0E00               	movlw	0
  4643  0007C8  0100               	movlb	0	; () banked
  4644  0007CA  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4645  0007CC  0E05               	movlw	5
  4646  0007CE  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4647  0007D0  EC1F  F007         	call	___lwdiv	;wreg free
  4648  0007D4  C0B5  F015         	movff	?___lwdiv,_SysRunData+17
  4649  0007D8  C0B6  F016         	movff	?___lwdiv+1,_SysRunData+18
  4650                           
  4651                           ;app.c: 646: if(SysRunData.CurrentAcqSta == 0)
  4652  0007DC  501C               	movf	_SysRunData+24,w,c
  4653  0007DE  A4D8               	btfss	status,2,c
  4654  0007E0  D00C               	goto	l3165
  4655                           
  4656                           ;app.c: 647: {
  4657                           ;app.c: 648: if (++write >= 5)
  4658  0007E2  2A01               	incf	AdcPro@write,f,c
  4659  0007E4  0E04               	movlw	4
  4660  0007E6  6401               	cpfsgt	AdcPro@write,c
  4661  0007E8  D002               	goto	l271
  4662                           
  4663                           ;app.c: 649: {
  4664                           ;app.c: 650: write = 0;
  4665  0007EA  0E00               	movlw	0
  4666  0007EC  6E01               	movwf	AdcPro@write,c
  4667  0007EE                     l271:
  4668                           
  4669                           ;app.c: 651: }
  4670                           ;app.c: 652: index = 0x01;
  4671  0007EE  0E01               	movlw	1
  4672  0007F0  6E45               	movwf	AdcPro@index,c
  4673                           
  4674                           ;app.c: 653: ADC_StartConversion(0x01);
  4675  0007F2  0E01               	movlw	1
  4676  0007F4  EC92  F009         	call	_ADC_StartConversion
  4677                           
  4678                           ;app.c: 654: }
  4679  0007F8  D0BB               	goto	l3225
  4680  0007FA                     l3165:
  4681                           
  4682                           ;app.c: 655: else
  4683                           ;app.c: 656: {
  4684                           ;app.c: 657: index = 0x02;
  4685  0007FA  0E02               	movlw	2
  4686  0007FC  6E45               	movwf	AdcPro@index,c
  4687                           
  4688                           ;app.c: 658: ADC_StartConversion(0x02);
  4689  0007FE  0E02               	movlw	2
  4690  000800  EC92  F009         	call	_ADC_StartConversion
  4691                           
  4692                           ;app.c: 659: }
  4693                           ;app.c: 661: }
  4694  000804  D0B5               	goto	l3225
  4695  000806                     l3169:
  4696                           
  4697                           ;app.c: 662: else if(index == 0x02)
  4698  000806  0E02               	movlw	2
  4699  000808  1845               	xorwf	AdcPro@index,w,c
  4700  00080A  A4D8               	btfss	status,2,c
  4701  00080C  D053               	goto	l3195
  4702                           
  4703                           ;app.c: 663: {
  4704                           ;app.c: 664: if(((SysRunData.CurrentAcqSta & (0x02u)) == (0x02u)))
  4705  00080E  A21C               	btfss	_SysRunData+24,1,c
  4706  000810  D047               	goto	l3191
  4707                           
  4708                           ;app.c: 665: {
  4709                           ;app.c: 666: buf[write][0x02] = ADC_GetConversionValue();
  4710  000812  ECED  F008         	call	_ADC_GetConversionValue	;wreg free
  4711  000816  5001               	movf	AdcPro@write,w,c
  4712  000818  0D08               	mullw	8
  4713  00081A  0E04               	movlw	4
  4714  00081C  26F3               	addwf	prodl,f,c
  4715  00081E  0E00               	movlw	0
  4716  000820  22F4               	addwfc	prodh,f,c
  4717  000822  0E60               	movlw	low AdcPro@buf
  4718  000824  24F3               	addwf	prodl,w,c
  4719  000826  6ED9               	movwf	fsr2l,c
  4720  000828  0E00               	movlw	high AdcPro@buf
  4721  00082A  20F4               	addwfc	prodh,w,c
  4722  00082C  6EDA               	movwf	fsr2h,c
  4723  00082E  0100               	movlb	0	; () banked
  4724  000830  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4725  000834  0100               	movlb	0	; () banked
  4726  000836  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;app.c: 671: sum = 0;
  4730  00083A  0E00               	movlw	0
  4731  00083C  0100               	movlb	0	; () banked
  4732  00083E  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4733  000840  0E00               	movlw	0
  4734  000842  6FBC               	movwf	AdcPro@sum& (0+255),b
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;app.c: 672: for (i = 0; i < 5; i++)
  4738  000844  0E00               	movlw	0
  4739  000846  0100               	movlb	0	; () banked
  4740  000848  6FBE               	movwf	AdcPro@i& (0+255),b
  4741  00084A                     l3179:
  4742                           
  4743                           ; BSR set to: 0
  4744  00084A  0E04               	movlw	4
  4745  00084C  0100               	movlb	0	; () banked
  4746  00084E  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4747  000850  D001               	goto	l3183
  4748                           
  4749                           ; BSR set to: 0
  4750  000852  D016               	goto	l3189
  4751  000854                     l3183:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;app.c: 673: {
  4755                           ;app.c: 674: sum += buf[i][0x02];
  4756  000854  0100               	movlb	0	; () banked
  4757  000856  51BE               	movf	AdcPro@i& (0+255),w,b
  4758  000858  0D08               	mullw	8
  4759  00085A  0E04               	movlw	4
  4760  00085C  26F3               	addwf	prodl,f,c
  4761  00085E  0E00               	movlw	0
  4762  000860  22F4               	addwfc	prodh,f,c
  4763  000862  0E60               	movlw	low AdcPro@buf
  4764  000864  24F3               	addwf	prodl,w,c
  4765  000866  6ED9               	movwf	fsr2l,c
  4766  000868  0E00               	movlw	high AdcPro@buf
  4767  00086A  20F4               	addwfc	prodh,w,c
  4768  00086C  6EDA               	movwf	fsr2h,c
  4769  00086E  50DE               	movf	postinc2,w,c
  4770  000870  0100               	movlb	0	; () banked
  4771  000872  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4772  000874  50DD               	movf	postdec2,w,c
  4773  000876  0100               	movlb	0	; () banked
  4774  000878  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4775                           
  4776                           ; BSR set to: 0
  4777  00087A  0100               	movlb	0	; () banked
  4778  00087C  2BBE               	incf	AdcPro@i& (0+255),f,b
  4779  00087E  D7E5               	goto	l3179
  4780  000880                     l3189:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;app.c: 675: }
  4784                           ;app.c: 676: SysRunData.ADC_Buf[0x02] = sum / 5;
  4785  000880  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4786  000884  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4787  000888  0E00               	movlw	0
  4788  00088A  0100               	movlb	0	; () banked
  4789  00088C  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4790  00088E  0E05               	movlw	5
  4791  000890  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4792  000892  EC1F  F007         	call	___lwdiv	;wreg free
  4793  000896  C0B5  F017         	movff	?___lwdiv,_SysRunData+19
  4794  00089A  C0B6  F018         	movff	?___lwdiv+1,_SysRunData+20
  4795                           
  4796                           ;app.c: 677: }
  4797  00089E  D004               	goto	l278
  4798  0008A0                     l3191:
  4799                           
  4800                           ;app.c: 678: else
  4801                           ;app.c: 679: {
  4802                           ;app.c: 680: SysRunData.ADC_Buf[0x02] = 0;
  4803  0008A0  0E00               	movlw	0
  4804  0008A2  6E18               	movwf	_SysRunData+20,c
  4805  0008A4  0E00               	movlw	0
  4806  0008A6  6E17               	movwf	_SysRunData+19,c
  4807  0008A8                     l278:
  4808                           
  4809                           ;app.c: 681: }
  4810                           ;app.c: 683: index = 0x03;
  4811  0008A8  0E03               	movlw	3
  4812  0008AA  6E45               	movwf	AdcPro@index,c
  4813                           
  4814                           ;app.c: 684: ADC_StartConversion(0x03);
  4815  0008AC  0E03               	movlw	3
  4816  0008AE  EC92  F009         	call	_ADC_StartConversion
  4817                           
  4818                           ;app.c: 685: }
  4819  0008B2  D05E               	goto	l3225
  4820  0008B4                     l3195:
  4821                           
  4822                           ;app.c: 686: else if(index == 0x03)
  4823  0008B4  0E03               	movlw	3
  4824  0008B6  1845               	xorwf	AdcPro@index,w,c
  4825  0008B8  A4D8               	btfss	status,2,c
  4826  0008BA  D05A               	goto	l3225
  4827                           
  4828                           ;app.c: 687: {
  4829                           ;app.c: 688: if(((SysRunData.CurrentAcqSta & (0x01u)) == (0x01u)))
  4830  0008BC  A01C               	btfss	_SysRunData+24,0,c
  4831  0008BE  D047               	goto	l3217
  4832                           
  4833                           ;app.c: 689: {
  4834                           ;app.c: 690: buf[write][0x03] = ADC_GetConversionValue();
  4835  0008C0  ECED  F008         	call	_ADC_GetConversionValue	;wreg free
  4836  0008C4  5001               	movf	AdcPro@write,w,c
  4837  0008C6  0D08               	mullw	8
  4838  0008C8  0E06               	movlw	6
  4839  0008CA  26F3               	addwf	prodl,f,c
  4840  0008CC  0E00               	movlw	0
  4841  0008CE  22F4               	addwfc	prodh,f,c
  4842  0008D0  0E60               	movlw	low AdcPro@buf
  4843  0008D2  24F3               	addwf	prodl,w,c
  4844  0008D4  6ED9               	movwf	fsr2l,c
  4845  0008D6  0E00               	movlw	high AdcPro@buf
  4846  0008D8  20F4               	addwfc	prodh,w,c
  4847  0008DA  6EDA               	movwf	fsr2h,c
  4848  0008DC  0100               	movlb	0	; () banked
  4849  0008DE  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4850  0008E2  0100               	movlb	0	; () banked
  4851  0008E4  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;app.c: 694: sum = 0;
  4855  0008E8  0E00               	movlw	0
  4856  0008EA  0100               	movlb	0	; () banked
  4857  0008EC  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4858  0008EE  0E00               	movlw	0
  4859  0008F0  6FBC               	movwf	AdcPro@sum& (0+255),b
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;app.c: 695: for (i = 0; i < 5; i++)
  4863  0008F2  0E00               	movlw	0
  4864  0008F4  0100               	movlb	0	; () banked
  4865  0008F6  6FBE               	movwf	AdcPro@i& (0+255),b
  4866  0008F8                     l3205:
  4867                           
  4868                           ; BSR set to: 0
  4869  0008F8  0E04               	movlw	4
  4870  0008FA  0100               	movlb	0	; () banked
  4871  0008FC  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4872  0008FE  D001               	goto	l3209
  4873                           
  4874                           ; BSR set to: 0
  4875  000900  D016               	goto	l3215
  4876  000902                     l3209:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;app.c: 696: {
  4880                           ;app.c: 699: sum += buf[i][0x03];
  4881  000902  0100               	movlb	0	; () banked
  4882  000904  51BE               	movf	AdcPro@i& (0+255),w,b
  4883  000906  0D08               	mullw	8
  4884  000908  0E06               	movlw	6
  4885  00090A  26F3               	addwf	prodl,f,c
  4886  00090C  0E00               	movlw	0
  4887  00090E  22F4               	addwfc	prodh,f,c
  4888  000910  0E60               	movlw	low AdcPro@buf
  4889  000912  24F3               	addwf	prodl,w,c
  4890  000914  6ED9               	movwf	fsr2l,c
  4891  000916  0E00               	movlw	high AdcPro@buf
  4892  000918  20F4               	addwfc	prodh,w,c
  4893  00091A  6EDA               	movwf	fsr2h,c
  4894  00091C  50DE               	movf	postinc2,w,c
  4895  00091E  0100               	movlb	0	; () banked
  4896  000920  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4897  000922  50DD               	movf	postdec2,w,c
  4898  000924  0100               	movlb	0	; () banked
  4899  000926  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4900                           
  4901                           ; BSR set to: 0
  4902  000928  0100               	movlb	0	; () banked
  4903  00092A  2BBE               	incf	AdcPro@i& (0+255),f,b
  4904  00092C  D7E5               	goto	l3205
  4905  00092E                     l3215:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;app.c: 700: }
  4909                           ;app.c: 701: SysRunData.ADC_Buf[0x03] = sum / 5;
  4910  00092E  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4911  000932  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4912  000936  0E00               	movlw	0
  4913  000938  0100               	movlb	0	; () banked
  4914  00093A  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4915  00093C  0E05               	movlw	5
  4916  00093E  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4917  000940  EC1F  F007         	call	___lwdiv	;wreg free
  4918  000944  C0B5  F019         	movff	?___lwdiv,_SysRunData+21
  4919  000948  C0B6  F01A         	movff	?___lwdiv+1,_SysRunData+22
  4920                           
  4921                           ;app.c: 702: }
  4922  00094C  D005               	goto	l3219
  4923  00094E                     l3217:
  4924                           
  4925                           ;app.c: 703: else
  4926                           ;app.c: 704: {
  4927                           ;app.c: 705: SysRunData.ADC_Buf[0x03] = 0;
  4928  00094E  0E00               	movlw	0
  4929  000950  6E1A               	movwf	_SysRunData+22,c
  4930  000952  0E00               	movlw	0
  4931  000954  6E19               	movwf	_SysRunData+21,c
  4932  000956  D000               	goto	l3219
  4933  000958                     l3219:
  4934                           
  4935                           ;app.c: 706: }
  4936                           ;app.c: 707: if (++write >= 5)
  4937  000958  2A01               	incf	AdcPro@write,f,c
  4938  00095A  0E04               	movlw	4
  4939  00095C  6401               	cpfsgt	AdcPro@write,c
  4940  00095E  D002               	goto	l285
  4941                           
  4942                           ;app.c: 708: {
  4943                           ;app.c: 709: write = 0;
  4944  000960  0E00               	movlw	0
  4945  000962  6E01               	movwf	AdcPro@write,c
  4946  000964                     l285:
  4947                           
  4948                           ;app.c: 710: }
  4949                           ;app.c: 711: index = 0x01;
  4950  000964  0E01               	movlw	1
  4951  000966  6E45               	movwf	AdcPro@index,c
  4952                           
  4953                           ;app.c: 712: ADC_StartConversion(0x01);
  4954  000968  0E01               	movlw	1
  4955  00096A  EC92  F009         	call	_ADC_StartConversion
  4956  00096E  D000               	goto	l3225
  4957  000970                     l3225:
  4958                           
  4959                           ;app.c: 713: }
  4960                           ;app.c: 714: if(!((SysRunData.CurrentAcqSta & (0x02u)) == (0x02u)))
  4961  000970  B21C               	btfsc	_SysRunData+24,1,c
  4962  000972  D005               	goto	l3229
  4963                           
  4964                           ;app.c: 715: {
  4965                           ;app.c: 716: SysRunData.ADC_Buf[0x02] = 0;
  4966  000974  0E00               	movlw	0
  4967  000976  6E18               	movwf	_SysRunData+20,c
  4968  000978  0E00               	movlw	0
  4969  00097A  6E17               	movwf	_SysRunData+19,c
  4970  00097C  D000               	goto	l3229
  4971  00097E                     l3229:
  4972                           
  4973                           ;app.c: 717: }
  4974                           ;app.c: 718: if(!((SysRunData.CurrentAcqSta & (0x01u)) == (0x01u)))
  4975  00097E  B01C               	btfsc	_SysRunData+24,0,c
  4976  000980  0012               	return	
  4977                           
  4978                           ;app.c: 719: {
  4979                           ;app.c: 720: SysRunData.ADC_Buf[0x03] = 0;
  4980  000982  0E00               	movlw	0
  4981  000984  6E1A               	movwf	_SysRunData+22,c
  4982  000986  0E00               	movlw	0
  4983  000988  6E19               	movwf	_SysRunData+21,c
  4984  00098A  0012               	return	
  4985  00098C  0012               	return		;funcret
  4986  00098E                     __end_of_AdcPro:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           prodh	equ	0xFF4
  4993                           prodl	equ	0xFF3
  4994                           intcon	equ	0xFF2
  4995                           intcon2	equ	0xFF1
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           indf2	equ	0xFDF
  4999                           postinc2	equ	0xFDE
  5000                           postdec2	equ	0xFDD
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function ___lwdiv *****************
  5006 ;; Defined at:
  5007 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  dividend        2   14[BANK0 ] unsigned int 
  5010 ;;  divisor         2   16[BANK0 ] unsigned int 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  quotient        2   19[BANK0 ] unsigned int 
  5013 ;;  counter         1   18[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  2   14[BANK0 ] unsigned int 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;Total ram usage:        7 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_AdcPro
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text24
  5038  000E3E                     __ptext24:
  5039                           	opt stack 0
  5040  000E3E                     ___lwdiv:
  5041                           	opt stack 24
  5042                           
  5043                           ;incstack = 0
  5044  000E3E  0E00               	movlw	0
  5045  000E40  0100               	movlb	0	; () banked
  5046  000E42  6FBB               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5047  000E44  0E00               	movlw	0
  5048  000E46  6FBA               	movwf	___lwdiv@quotient& (0+255),b
  5049                           
  5050                           ; BSR set to: 0
  5051  000E48  0100               	movlb	0	; () banked
  5052  000E4A  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  5053  000E4C  0100               	movlb	0	; () banked
  5054  000E4E  11B8               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5055  000E50  B4D8               	btfsc	status,2,c
  5056  000E52  D031               	goto	l1150
  5057                           
  5058                           ; BSR set to: 0
  5059  000E54  0E01               	movlw	1
  5060  000E56  0100               	movlb	0	; () banked
  5061  000E58  6FB9               	movwf	___lwdiv@counter& (0+255),b
  5062  000E5A  D007               	goto	l3103
  5063  000E5C                     l3101:
  5064                           
  5065                           ; BSR set to: 0
  5066  000E5C  0100               	movlb	0	; () banked
  5067  000E5E  90D8               	bcf	status,0,c
  5068  000E60  37B7               	rlcf	___lwdiv@divisor& (0+255),f,b
  5069  000E62  37B8               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5070  000E64  0100               	movlb	0	; () banked
  5071  000E66  2BB9               	incf	___lwdiv@counter& (0+255),f,b
  5072  000E68  D000               	goto	l3103
  5073  000E6A                     l3103:
  5074                           
  5075                           ; BSR set to: 0
  5076  000E6A  0100               	movlb	0	; () banked
  5077  000E6C  BFB8               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  5078  000E6E  D002               	goto	l3105
  5079  000E70  D7F5               	goto	l3101
  5080                           
  5081                           ; BSR set to: 0
  5082  000E72  D000               	goto	l3105
  5083  000E74                     l3105:
  5084                           
  5085                           ; BSR set to: 0
  5086  000E74  0100               	movlb	0	; () banked
  5087  000E76  90D8               	bcf	status,0,c
  5088  000E78  37BA               	rlcf	___lwdiv@quotient& (0+255),f,b
  5089  000E7A  37BB               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5090                           
  5091                           ; BSR set to: 0
  5092  000E7C  0100               	movlb	0	; () banked
  5093  000E7E  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  5094  000E80  0100               	movlb	0	; () banked
  5095  000E82  5DB5               	subwf	___lwdiv@dividend& (0+255),w,b
  5096  000E84  0100               	movlb	0	; () banked
  5097  000E86  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5098  000E88  0100               	movlb	0	; () banked
  5099  000E8A  59B6               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5100  000E8C  A0D8               	btfss	status,0,c
  5101  000E8E  D00B               	goto	l3113
  5102                           
  5103                           ; BSR set to: 0
  5104  000E90  0100               	movlb	0	; () banked
  5105  000E92  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  5106  000E94  0100               	movlb	0	; () banked
  5107  000E96  5FB5               	subwf	___lwdiv@dividend& (0+255),f,b
  5108  000E98  0100               	movlb	0	; () banked
  5109  000E9A  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5110  000E9C  0100               	movlb	0	; () banked
  5111  000E9E  5BB6               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5112                           
  5113                           ; BSR set to: 0
  5114  000EA0  0100               	movlb	0	; () banked
  5115  000EA2  81BA               	bsf	___lwdiv@quotient& (0+255),0,b
  5116  000EA4  D000               	goto	l3113
  5117  000EA6                     l3113:
  5118                           
  5119                           ; BSR set to: 0
  5120  000EA6  0100               	movlb	0	; () banked
  5121  000EA8  90D8               	bcf	status,0,c
  5122  000EAA  33B8               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5123  000EAC  33B7               	rrcf	___lwdiv@divisor& (0+255),f,b
  5124                           
  5125                           ; BSR set to: 0
  5126  000EAE  0100               	movlb	0	; () banked
  5127  000EB0  2FB9               	decfsz	___lwdiv@counter& (0+255),f,b
  5128  000EB2  D7E0               	goto	l3105
  5129  000EB4  D000               	goto	l1150
  5130  000EB6                     l1150:
  5131                           
  5132                           ; BSR set to: 0
  5133  000EB6  C0BA  F0B5         	movff	___lwdiv@quotient,?___lwdiv
  5134  000EBA  C0BB  F0B6         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5135                           
  5136                           ; BSR set to: 0
  5137  000EBE  0012               	return		;funcret
  5138  000EC0                     __end_of___lwdiv:
  5139                           	opt stack 0
  5140                           tblptru	equ	0xFF8
  5141                           tblptrh	equ	0xFF7
  5142                           tblptrl	equ	0xFF6
  5143                           tablat	equ	0xFF5
  5144                           prodh	equ	0xFF4
  5145                           prodl	equ	0xFF3
  5146                           intcon	equ	0xFF2
  5147                           intcon2	equ	0xFF1
  5148                           postinc0	equ	0xFEE
  5149                           wreg	equ	0xFE8
  5150                           indf2	equ	0xFDF
  5151                           postinc2	equ	0xFDE
  5152                           postdec2	equ	0xFDD
  5153                           fsr2h	equ	0xFDA
  5154                           fsr2l	equ	0xFD9
  5155                           status	equ	0xFD8
  5156                           
  5157 ;; *************** function _ADC_StartConversion *****************
  5158 ;; Defined at:
  5159 ;;		line 74 in file "source/adc.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  channel         1    wreg     unsigned char 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  channel         1   15[BANK0 ] unsigned char 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;		None               void
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    4
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_ADC_Init
  5184 ;;		_AdcPro
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text25
  5189  001324                     __ptext25:
  5190                           	opt stack 0
  5191  001324                     _ADC_StartConversion:
  5192                           	opt stack 24
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;incstack = 0
  5196                           ;ADC_StartConversion@channel stored from wreg
  5197  001324  0100               	movlb	0	; () banked
  5198  001326  6FB6               	movwf	ADC_StartConversion@channel& (0+255),b
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;adc.c: 77: ADCON0bits.CHS = channel;
  5202  001328  C0B6  F0B5         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  5203  00132C  0100               	movlb	0	; () banked
  5204  00132E  47B5               	rlncf	??_ADC_StartConversion& (0+255),f,b
  5205  001330  47B5               	rlncf	??_ADC_StartConversion& (0+255),f,b
  5206  001332  50C2               	movf	4034,w,c	;volatile
  5207  001334  0100               	movlb	0	; () banked
  5208  001336  19B5               	xorwf	??_ADC_StartConversion& (0+255),w,b
  5209  001338  0B83               	andlw	-125
  5210  00133A  19B5               	xorwf	??_ADC_StartConversion& (0+255),w,b
  5211  00133C  6EC2               	movwf	4034,c	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;adc.c: 79: ADCON0bits.ADON = 1;
  5215  00133E  80C2               	bsf	4034,0,c	;volatile
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;adc.c: 84: ADCON0bits.GO_NOT_DONE = 1;
  5219  001340  82C2               	bsf	4034,1,c	;volatile
  5220                           
  5221                           ; BSR set to: 0
  5222  001342  0012               	return		;funcret
  5223  001344                     __end_of_ADC_StartConversion:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           intcon2	equ	0xFF1
  5233                           postinc0	equ	0xFEE
  5234                           wreg	equ	0xFE8
  5235                           indf2	equ	0xFDF
  5236                           postinc2	equ	0xFDE
  5237                           postdec2	equ	0xFDD
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _ADC_GetConversionValue *****************
  5243 ;; Defined at:
  5244 ;;		line 57 in file "source/adc.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  ADC_Result      2   19[BANK0 ] unsigned int 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  2   14[BANK0 ] unsigned int 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;Total ram usage:        7 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    4
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_AdcPro
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text26
  5273  0011DA                     __ptext26:
  5274                           	opt stack 0
  5275  0011DA                     _ADC_GetConversionValue:
  5276                           	opt stack 24
  5277                           
  5278                           ;adc.c: 59: uint16_t ADC_Result = 0;
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;incstack = 0
  5282  0011DA  0E00               	movlw	0
  5283  0011DC  0100               	movlb	0	; () banked
  5284  0011DE  6FBB               	movwf	(ADC_GetConversionValue@ADC_Result+1)& (0+255),b
  5285  0011E0  0E00               	movlw	0
  5286  0011E2  6FBA               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;adc.c: 62: ADC_Result = (uint16_t)ADRESH << 8|(ADRESL&0xE0);
  5290  0011E4  CFC3 F0B7          	movff	4035,??_ADC_GetConversionValue	;volatile
  5291  0011E8  0EE0               	movlw	224
  5292  0011EA  0100               	movlb	0	; () banked
  5293  0011EC  17B7               	andwf	??_ADC_GetConversionValue& (0+255),f,b
  5294  0011EE  50C4               	movf	4036,w,c	;volatile
  5295  0011F0  0100               	movlb	0	; () banked
  5296  0011F2  6FB8               	movwf	(??_ADC_GetConversionValue+1)& (0+255),b
  5297  0011F4  0100               	movlb	0	; () banked
  5298  0011F6  51B7               	movf	??_ADC_GetConversionValue& (0+255),w,b
  5299  0011F8  0100               	movlb	0	; () banked
  5300  0011FA  6FBA               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  5301  0011FC  C0B8  F0BB         	movff	??_ADC_GetConversionValue+1,ADC_GetConversionValue@ADC_Result+1
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;adc.c: 64: return ADC_Result;
  5305  001200  C0BA  F0B5         	movff	ADC_GetConversionValue@ADC_Result,?_ADC_GetConversionValue
  5306  001204  C0BB  F0B6         	movff	ADC_GetConversionValue@ADC_Result+1,?_ADC_GetConversionValue+1
  5307  001208  0012               	return	
  5308                           
  5309                           ; BSR set to: 0
  5310                           
  5311                           ; BSR set to: 0
  5312  00120A  0012               	return		;funcret
  5313  00120C                     __end_of_ADC_GetConversionValue:
  5314                           	opt stack 0
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           intcon2	equ	0xFF1
  5323                           postinc0	equ	0xFEE
  5324                           wreg	equ	0xFE8
  5325                           indf2	equ	0xFDF
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function _Lows_ISR *****************
  5333 ;; Defined at:
  5334 ;;		line 171 in file "source/timer.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  i               1   21[COMRAM] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;		None               void
  5341 ;; Registers used:
  5342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;Total ram usage:       18 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    3
  5355 ;; This function calls:
  5356 ;;		_bsp_SoftTimerDec
  5357 ;; This function is called by:
  5358 ;;		Interrupt level 1
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	intcodelo
  5363  000018                     __pintcodelo:
  5364                           	opt stack 0
  5365  000018                     _Lows_ISR:
  5366                           	opt stack 21
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;incstack = 0
  5370  000018  CFD8 F02D          	movff	status,??_Lows_ISR
  5371  00001C  CFE8 F02E          	movff	wreg,??_Lows_ISR+1
  5372  000020  CFE0 F02F          	movff	bsr,??_Lows_ISR+2
  5373  000024  CFFA F030          	movff	pclath,??_Lows_ISR+3
  5374  000028  CFFB F031          	movff	pclatu,??_Lows_ISR+4
  5375  00002C  CFE9 F032          	movff	fsr0l,??_Lows_ISR+5
  5376  000030  CFEA F033          	movff	fsr0h,??_Lows_ISR+6
  5377  000034  CFE1 F034          	movff	fsr1l,??_Lows_ISR+7
  5378  000038  CFE2 F035          	movff	fsr1h,??_Lows_ISR+8
  5379  00003C  CFD9 F036          	movff	fsr2l,??_Lows_ISR+9
  5380  000040  CFDA F037          	movff	fsr2h,??_Lows_ISR+10
  5381  000044  CFF3 F038          	movff	prodl,??_Lows_ISR+11
  5382  000048  CFF4 F039          	movff	prodh,??_Lows_ISR+12
  5383  00004C  CFF6 F03A          	movff	tblptrl,??_Lows_ISR+13
  5384  000050  CFF7 F03B          	movff	tblptrh,??_Lows_ISR+14
  5385  000054  CFF8 F03C          	movff	tblptru,??_Lows_ISR+15
  5386  000058  CFF5 F03D          	movff	tablat,??_Lows_ISR+16
  5387                           
  5388                           ;timer.c: 173: uint8_t i;
  5389                           ;timer.c: 175: if(INTCONbits.T0IF == 1)
  5390  00005C  A4F2               	btfss	intcon,2,c	;volatile
  5391  00005E  D018               	goto	i1l552
  5392                           
  5393                           ;timer.c: 176: {
  5394                           ;timer.c: 177: INTCONbits.T0IF = 0;
  5395  000060  94F2               	bcf	intcon,2,c	;volatile
  5396                           
  5397                           ;timer.c: 178: TMR0H = T0RH;
  5398  000062  C002  FFD7         	movff	_T0RH,4055	;volatile
  5399                           
  5400                           ;timer.c: 179: TMR0L = T0RL;
  5401  000066  C003  FFD6         	movff	_T0RL,4054	;volatile
  5402                           
  5403                           ;timer.c: 181: for (i = 0; i < 2; i++)
  5404  00006A  0E00               	movlw	0
  5405  00006C  6E3E               	movwf	Lows_ISR@i,c
  5406  00006E                     i1l2859:
  5407  00006E  0E01               	movlw	1
  5408  000070  643E               	cpfsgt	Lows_ISR@i,c
  5409  000072  D001               	goto	i1l2863
  5410  000074  D00D               	goto	i1l552
  5411  000076                     i1l2863:
  5412                           
  5413                           ;timer.c: 182: {
  5414                           ;timer.c: 183: bsp_SoftTimerDec(&s_tTmr[i]);
  5415  000076  503E               	movf	Lows_ISR@i,w,c
  5416  000078  0D06               	mullw	6
  5417  00007A  0E1D               	movlw	low _s_tTmr
  5418  00007C  24F3               	addwf	prodl,w,c
  5419  00007E  6E29               	movwf	bsp_SoftTimerDec@_tmr,c
  5420  000080  0E00               	movlw	high _s_tTmr
  5421  000082  20F4               	addwfc	prodh,w,c
  5422  000084  6E2A               	movwf	bsp_SoftTimerDec@_tmr+1,c
  5423  000086  ECD7  F007         	call	_bsp_SoftTimerDec	;wreg free
  5424  00008A  2A3E               	incf	Lows_ISR@i,f,c
  5425  00008C  D7F0               	goto	i1l2859
  5426  00008E  D000               	goto	i1l552
  5427  000090                     i1l552:
  5428  000090  C03D  FFF5         	movff	??_Lows_ISR+16,tablat
  5429  000094  C03C  FFF8         	movff	??_Lows_ISR+15,tblptru
  5430  000098  C03B  FFF7         	movff	??_Lows_ISR+14,tblptrh
  5431  00009C  C03A  FFF6         	movff	??_Lows_ISR+13,tblptrl
  5432  0000A0  C039  FFF4         	movff	??_Lows_ISR+12,prodh
  5433  0000A4  C038  FFF3         	movff	??_Lows_ISR+11,prodl
  5434  0000A8  C037  FFDA         	movff	??_Lows_ISR+10,fsr2h
  5435  0000AC  C036  FFD9         	movff	??_Lows_ISR+9,fsr2l
  5436  0000B0  C035  FFE2         	movff	??_Lows_ISR+8,fsr1h
  5437  0000B4  C034  FFE1         	movff	??_Lows_ISR+7,fsr1l
  5438  0000B8  C033  FFEA         	movff	??_Lows_ISR+6,fsr0h
  5439  0000BC  C032  FFE9         	movff	??_Lows_ISR+5,fsr0l
  5440  0000C0  C031  FFFB         	movff	??_Lows_ISR+4,pclatu
  5441  0000C4  C030  FFFA         	movff	??_Lows_ISR+3,pclath
  5442  0000C8  C02F  FFE0         	movff	??_Lows_ISR+2,bsr
  5443  0000CC  C02E  FFE8         	movff	??_Lows_ISR+1,wreg
  5444  0000D0  C02D  FFD8         	movff	??_Lows_ISR,status
  5445  0000D4  0010               	retfie	
  5446  0000D6                     __end_of_Lows_ISR:
  5447                           	opt stack 0
  5448                           pclatu	equ	0xFFB
  5449                           pclath	equ	0xFFA
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           prodh	equ	0xFF4
  5455                           prodl	equ	0xFF3
  5456                           intcon	equ	0xFF2
  5457                           intcon2	equ	0xFF1
  5458                           postinc0	equ	0xFEE
  5459                           fsr0h	equ	0xFEA
  5460                           fsr0l	equ	0xFE9
  5461                           wreg	equ	0xFE8
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           bsr	equ	0xFE0
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _bsp_SoftTimerDec *****************
  5473 ;; Defined at:
  5474 ;;		line 42 in file "source/timer.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  _tmr            2    0[COMRAM] PTR volatile struct .
  5477 ;;		 -> s_tTmr(12), 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;Total ram usage:        4 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    2
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_Lows_ISR
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text28
  5504  000FAE                     __ptext28:
  5505                           	opt stack 0
  5506  000FAE                     _bsp_SoftTimerDec:
  5507                           	opt stack 21
  5508                           
  5509                           ;timer.c: 44: if (_tmr->Count > 0)
  5510                           
  5511                           ;incstack = 0
  5512  000FAE  EE20 F002          	lfsr	2,2
  5513  000FB2  5029               	movf	bsp_SoftTimerDec@_tmr,w,c
  5514  000FB4  26D9               	addwf	fsr2l,f,c
  5515  000FB6  502A               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5516  000FB8  22DA               	addwfc	fsr2h,f,c
  5517  000FBA  50DE               	movf	postinc2,w,c
  5518  000FBC  10DE               	iorwf	postinc2,w,c
  5519  000FBE  B4D8               	btfsc	status,2,c
  5520  000FC0  0012               	return	
  5521                           
  5522                           ;timer.c: 45: {
  5523                           ;timer.c: 47: if (--_tmr->Count == 0)
  5524  000FC2  EE20 F002          	lfsr	2,2
  5525  000FC6  5029               	movf	bsp_SoftTimerDec@_tmr,w,c
  5526  000FC8  26D9               	addwf	fsr2l,f,c
  5527  000FCA  502A               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5528  000FCC  22DA               	addwfc	fsr2h,f,c
  5529  000FCE  06DE               	decf	postinc2,f,c
  5530  000FD0  0E00               	movlw	0
  5531  000FD2  5ADD               	subwfb	postdec2,f,c
  5532  000FD4  50DE               	movf	postinc2,w,c
  5533  000FD6  10DE               	iorwf	postinc2,w,c
  5534  000FD8  A4D8               	btfss	status,2,c
  5535  000FDA  0012               	return	
  5536                           
  5537                           ;timer.c: 48: {
  5538                           ;timer.c: 49: _tmr->Flag = 1;
  5539  000FDC  EE20 F001          	lfsr	2,1
  5540  000FE0  5029               	movf	bsp_SoftTimerDec@_tmr,w,c
  5541  000FE2  26D9               	addwf	fsr2l,f,c
  5542  000FE4  502A               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5543  000FE6  22DA               	addwfc	fsr2h,f,c
  5544  000FE8  0E01               	movlw	1
  5545  000FEA  6EDF               	movwf	indf2,c
  5546                           
  5547                           ;timer.c: 52: if(_tmr->Mode == TMR_AUTO_MODE)
  5548  000FEC  C029  FFD9         	movff	bsp_SoftTimerDec@_tmr,fsr2l
  5549  000FF0  C02A  FFDA         	movff	bsp_SoftTimerDec@_tmr+1,fsr2h
  5550  000FF4  04DE               	decf	postinc2,w,c
  5551  000FF6  A4D8               	btfss	status,2,c
  5552  000FF8  0012               	return	
  5553                           
  5554                           ;timer.c: 53: {
  5555                           ;timer.c: 54: _tmr->Count = _tmr->PreLoad;
  5556  000FFA  EE20 F004          	lfsr	2,4
  5557  000FFE  5029               	movf	bsp_SoftTimerDec@_tmr,w,c
  5558  001000  26D9               	addwf	fsr2l,f,c
  5559  001002  502A               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5560  001004  22DA               	addwfc	fsr2h,f,c
  5561  001006  EE10 F002          	lfsr	1,2
  5562  00100A  5029               	movf	bsp_SoftTimerDec@_tmr,w,c
  5563  00100C  26E1               	addwf	fsr1l,f,c
  5564  00100E  502A               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5565  001010  22E2               	addwfc	fsr1h,f,c
  5566  001012  CFDE FFE6          	movff	postinc2,postinc1
  5567  001016  CFDD FFE5          	movff	postdec2,postdec1
  5568  00101A  0012               	return	
  5569  00101C  0012               	return		;funcret
  5570  00101E                     __end_of_bsp_SoftTimerDec:
  5571                           	opt stack 0
  5572                           pclatu	equ	0xFFB
  5573                           pclath	equ	0xFFA
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           prodh	equ	0xFF4
  5579                           prodl	equ	0xFF3
  5580                           intcon	equ	0xFF2
  5581                           intcon2	equ	0xFF1
  5582                           postinc0	equ	0xFEE
  5583                           fsr0h	equ	0xFEA
  5584                           fsr0l	equ	0xFE9
  5585                           wreg	equ	0xFE8
  5586                           postinc1	equ	0xFE6
  5587                           postdec1	equ	0xFE5
  5588                           fsr1h	equ	0xFE2
  5589                           fsr1l	equ	0xFE1
  5590                           bsr	equ	0xFE0
  5591                           indf2	equ	0xFDF
  5592                           postinc2	equ	0xFDE
  5593                           postdec2	equ	0xFDD
  5594                           fsr2h	equ	0xFDA
  5595                           fsr2l	equ	0xFD9
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function _High_ISR *****************
  5599 ;; Defined at:
  5600 ;;		line 282 in file "source/ecan.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;		None               void
  5607 ;; Registers used:
  5608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;Total ram usage:       14 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    1
  5621 ;; This function calls:
  5622 ;;		_ECAN_Receive
  5623 ;; This function is called by:
  5624 ;;		Interrupt level 2
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	intcode
  5629  000008                     __pintcode:
  5630                           	opt stack 0
  5631  000008                     _High_ISR:
  5632                           	opt stack 21
  5633                           
  5634                           ;incstack = 0
  5635  000008  CFFA F0A7          	movff	pclath,??_High_ISR
  5636  00000C  CFFB F0A8          	movff	pclatu,??_High_ISR+1
  5637  000010  CFE9 F0A9          	movff	fsr0l,??_High_ISR+2
  5638  000014  EF25  F006         	goto	int_func
  5639                           pclatu	equ	0xFFB
  5640                           pclath	equ	0xFFA
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodh	equ	0xFF4
  5646                           prodl	equ	0xFF3
  5647                           intcon	equ	0xFF2
  5648                           intcon2	equ	0xFF1
  5649                           postinc0	equ	0xFEE
  5650                           fsr0h	equ	0xFEA
  5651                           fsr0l	equ	0xFE9
  5652                           wreg	equ	0xFE8
  5653                           postinc1	equ	0xFE6
  5654                           postdec1	equ	0xFE5
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           bsr	equ	0xFE0
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665                           	psect	intcode_body
  5666  000C4A                     __pintcode_body:
  5667                           	opt stack 21
  5668  000C4A                     int_func:
  5669                           	opt stack 21
  5670  000C4A  CFEA F0AA          	movff	fsr0h,??_High_ISR+3
  5671  000C4E  CFE1 F0AB          	movff	fsr1l,??_High_ISR+4
  5672  000C52  CFE2 F0AC          	movff	fsr1h,??_High_ISR+5
  5673  000C56  CFD9 F0AD          	movff	fsr2l,??_High_ISR+6
  5674  000C5A  CFDA F0AE          	movff	fsr2h,??_High_ISR+7
  5675  000C5E  CFF3 F0AF          	movff	prodl,??_High_ISR+8
  5676  000C62  CFF4 F0B0          	movff	prodh,??_High_ISR+9
  5677  000C66  CFF6 F0B1          	movff	tblptrl,??_High_ISR+10
  5678  000C6A  CFF7 F0B2          	movff	tblptrh,??_High_ISR+11
  5679  000C6E  CFF8 F0B3          	movff	tblptru,??_High_ISR+12
  5680  000C72  CFF5 F0B4          	movff	tablat,??_High_ISR+13
  5681                           
  5682                           ;ecan.c: 284: if(PIR5bits.WAKIF==1)
  5683  000C76  BC77               	btfsc	3959,6,c	;volatile
  5684                           
  5685                           ;ecan.c: 285: {
  5686                           ;ecan.c: 286: PIR5bits.WAKIF = 0;
  5687  000C78  9C77               	bcf	3959,6,c	;volatile
  5688                           
  5689                           ;ecan.c: 287: }
  5690                           ;ecan.c: 288: if(PIR5bits.RXB0IF==1)
  5691  000C7A  A077               	btfss	3959,0,c	;volatile
  5692  000C7C  D02C               	goto	i2l492
  5693                           
  5694                           ;ecan.c: 289: {
  5695                           ;ecan.c: 290: PIR5bits.RXB0IF=0;
  5696  000C7E  9077               	bcf	3959,0,c	;volatile
  5697                           
  5698                           ;ecan.c: 291: ECAN_Receive(&g_tCanRxMsg);
  5699  000C80  0E88               	movlw	low _g_tCanRxMsg
  5700  000C82  6E3F               	movwf	ECAN_Receive@RxMessage,c
  5701  000C84  0E00               	movlw	high _g_tCanRxMsg
  5702  000C86  6E40               	movwf	ECAN_Receive@RxMessage+1,c
  5703  000C88  ECC7  F004         	call	_ECAN_Receive	;wreg free
  5704                           
  5705                           ;ecan.c: 295: if ((g_tCanRxMsg.StdId == 0X110) && (g_tCanRxMsg.IDE == 0X00) && (g_tCanRx
      +                          Msg.DLC == 0x08))
  5706  000C8C  0E10               	movlw	16
  5707  000C8E  0100               	movlb	0	; () banked
  5708  000C90  1988               	xorwf	_g_tCanRxMsg& (0+255),w,b
  5709  000C92  E121               	bnz	i2l492
  5710  000C94  0100               	movlb	0	; () banked
  5711  000C96  0589               	decf	(_g_tCanRxMsg+1)& (0+255),w,b
  5712  000C98  A4D8               	btfss	status,2,c
  5713  000C9A  D01D               	goto	i2l492
  5714                           
  5715                           ; BSR set to: 0
  5716  000C9C  0100               	movlb	0	; () banked
  5717  000C9E  518C               	movf	(_g_tCanRxMsg+4)& (0+255),w,b
  5718  000CA0  A4D8               	btfss	status,2,c
  5719  000CA2  D019               	goto	i2l492
  5720                           
  5721                           ; BSR set to: 0
  5722  000CA4  0E08               	movlw	8
  5723  000CA6  0100               	movlb	0	; () banked
  5724  000CA8  198E               	xorwf	(_g_tCanRxMsg+6)& (0+255),w,b
  5725  000CAA  A4D8               	btfss	status,2,c
  5726  000CAC  D014               	goto	i2l492
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;ecan.c: 296: {
  5730                           ;ecan.c: 298: if(((g_tCanRxMsg.Data[5]&(0x01u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x04u)) 
      +                          == 0))
  5731  000CAE  0100               	movlb	0	; () banked
  5732  000CB0  A194               	btfss	(_g_tCanRxMsg+12)& (0+255),0,b
  5733  000CB2  D003               	goto	i2l3623
  5734                           
  5735                           ; BSR set to: 0
  5736  000CB4  0100               	movlb	0	; () banked
  5737  000CB6  B594               	btfsc	(_g_tCanRxMsg+12)& (0+255),2,b
  5738  000CB8  D002               	goto	i2l3625
  5739  000CBA                     i2l3623:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;ecan.c: 299: {
  5743                           ;ecan.c: 300: SysRunData.PedalRunFlag |= (1<<1);
  5744  000CBA  821B               	bsf	_SysRunData+23,1,c
  5745                           
  5746                           ;ecan.c: 301: }
  5747  000CBC  D002               	goto	i2l3627
  5748  000CBE                     i2l3625:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;ecan.c: 302: else
  5752                           ;ecan.c: 303: {
  5753                           ;ecan.c: 304: SysRunData.PedalRunFlag &= ~(1<<1);
  5754  000CBE  921B               	bcf	_SysRunData+23,1,c
  5755  000CC0  D000               	goto	i2l3627
  5756  000CC2                     i2l3627:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;ecan.c: 305: }
  5760                           ;ecan.c: 308: if(((g_tCanRxMsg.Data[5]&(0x02u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x08u)) 
      +                          == 0))
  5761  000CC2  0100               	movlb	0	; () banked
  5762  000CC4  A394               	btfss	(_g_tCanRxMsg+12)& (0+255),1,b
  5763  000CC6  D003               	goto	i2l3631
  5764                           
  5765                           ; BSR set to: 0
  5766  000CC8  0100               	movlb	0	; () banked
  5767  000CCA  B794               	btfsc	(_g_tCanRxMsg+12)& (0+255),3,b
  5768  000CCC  D002               	goto	i2l3633
  5769  000CCE                     i2l3631:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;ecan.c: 309: {
  5773                           ;ecan.c: 310: SysRunData.PedalRunFlag |= (1<<0);
  5774  000CCE  801B               	bsf	_SysRunData+23,0,c
  5775                           
  5776                           ;ecan.c: 311: }
  5777  000CD0  D002               	goto	i2l492
  5778  000CD2                     i2l3633:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;ecan.c: 312: else
  5782                           ;ecan.c: 313: {
  5783                           ;ecan.c: 314: SysRunData.PedalRunFlag &= ~(1<<0);
  5784  000CD2  901B               	bcf	_SysRunData+23,0,c
  5785                           
  5786                           ; BSR set to: 0
  5787                           
  5788                           ; BSR set to: 0
  5789  000CD4  D000               	goto	i2l492
  5790  000CD6                     i2l492:
  5791  000CD6  C0B4  FFF5         	movff	??_High_ISR+13,tablat
  5792  000CDA  C0B3  FFF8         	movff	??_High_ISR+12,tblptru
  5793  000CDE  C0B2  FFF7         	movff	??_High_ISR+11,tblptrh
  5794  000CE2  C0B1  FFF6         	movff	??_High_ISR+10,tblptrl
  5795  000CE6  C0B0  FFF4         	movff	??_High_ISR+9,prodh
  5796  000CEA  C0AF  FFF3         	movff	??_High_ISR+8,prodl
  5797  000CEE  C0AE  FFDA         	movff	??_High_ISR+7,fsr2h
  5798  000CF2  C0AD  FFD9         	movff	??_High_ISR+6,fsr2l
  5799  000CF6  C0AC  FFE2         	movff	??_High_ISR+5,fsr1h
  5800  000CFA  C0AB  FFE1         	movff	??_High_ISR+4,fsr1l
  5801  000CFE  C0AA  FFEA         	movff	??_High_ISR+3,fsr0h
  5802  000D02  C0A9  FFE9         	movff	??_High_ISR+2,fsr0l
  5803  000D06  C0A8  FFFB         	movff	??_High_ISR+1,pclatu
  5804  000D0A  C0A7  FFFA         	movff	??_High_ISR,pclath
  5805  000D0E  0011               	retfie		f
  5806  000D10                     __end_of_High_ISR:
  5807                           	opt stack 0
  5808                           pclatu	equ	0xFFB
  5809                           pclath	equ	0xFFA
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           intcon	equ	0xFF2
  5817                           intcon2	equ	0xFF1
  5818                           postinc0	equ	0xFEE
  5819                           fsr0h	equ	0xFEA
  5820                           fsr0l	equ	0xFE9
  5821                           wreg	equ	0xFE8
  5822                           postinc1	equ	0xFE6
  5823                           postdec1	equ	0xFE5
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           bsr	equ	0xFE0
  5827                           indf2	equ	0xFDF
  5828                           postinc2	equ	0xFDE
  5829                           postdec2	equ	0xFDD
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _ECAN_Receive *****************
  5835 ;; Defined at:
  5836 ;;		line 160 in file "source/ecan.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  RxMessage       2   22[COMRAM] PTR struct .
  5839 ;;		 -> g_tCanRxMsg(16), 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;Total ram usage:        6 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_High_ISR
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text30
  5865  00098E                     __ptext30:
  5866                           	opt stack 0
  5867  00098E                     _ECAN_Receive:
  5868                           	opt stack 21
  5869                           
  5870                           ;ecan.c: 162: if (RXB0CONbits.RXFUL)
  5871                           
  5872                           ;incstack = 0
  5873  00098E  AE60               	btfss	3936,7,c	;volatile
  5874  000990  0012               	return	
  5875                           
  5876                           ;ecan.c: 165: {
  5877                           ;ecan.c: 167: RxMessage->IDE = RXB0SIDLbits.EXID;
  5878  000992  EE20 F004          	lfsr	2,4
  5879  000996  503F               	movf	ECAN_Receive@RxMessage,w,c
  5880  000998  26D9               	addwf	fsr2l,f,c
  5881  00099A  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5882  00099C  22DA               	addwfc	fsr2h,f,c
  5883  00099E  A662               	btfss	3938,3,c	;volatile
  5884  0009A0  D002               	goto	i2u188_40
  5885  0009A2  0E01               	movlw	1
  5886  0009A4  D001               	goto	i2u188_46
  5887  0009A6                     i2u188_40:
  5888  0009A6  0E00               	movlw	0
  5889  0009A8                     i2u188_46:
  5890  0009A8  6EDF               	movwf	indf2,c
  5891                           
  5892                           ;ecan.c: 168: if (RxMessage->IDE == 0X00)
  5893  0009AA  EE20 F004          	lfsr	2,4
  5894  0009AE  503F               	movf	ECAN_Receive@RxMessage,w,c
  5895  0009B0  26D9               	addwf	fsr2l,f,c
  5896  0009B2  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5897  0009B4  22DA               	addwfc	fsr2h,f,c
  5898  0009B6  50DF               	movf	indf2,w,c
  5899  0009B8  A4D8               	btfss	status,2,c
  5900  0009BA  D021               	goto	i2l2765
  5901                           
  5902                           ;ecan.c: 169: {
  5903                           ;ecan.c: 170: RxMessage->StdId = (uint16_t)RXB0SIDH<<3 | (RXB0SIDL>>5);
  5904  0009BC  CF62 F041          	movff	3938,??_ECAN_Receive	;volatile
  5905  0009C0  0E05               	movlw	5
  5906  0009C2  6E42               	movwf	(??_ECAN_Receive+1)& (0+255),c
  5907  0009C4                     i2u190_45:
  5908  0009C4  90D8               	bcf	status,0,c
  5909  0009C6  3241               	rrcf	??_ECAN_Receive,f,c
  5910  0009C8  2E42               	decfsz	(??_ECAN_Receive+1)& (0+255),f,c
  5911  0009CA  D7FC               	goto	i2u190_45
  5912  0009CC  5041               	movf	??_ECAN_Receive,w,c
  5913  0009CE  CF61 F043          	movff	3937,??_ECAN_Receive+2	;volatile
  5914  0009D2  6A44               	clrf	(??_ECAN_Receive+3)& (0+255),c
  5915  0009D4  90D8               	bcf	status,0,c
  5916  0009D6  3643               	rlcf	??_ECAN_Receive+2,f,c
  5917  0009D8  3644               	rlcf	??_ECAN_Receive+3,f,c
  5918  0009DA  90D8               	bcf	status,0,c
  5919  0009DC  3643               	rlcf	??_ECAN_Receive+2,f,c
  5920  0009DE  3644               	rlcf	??_ECAN_Receive+3,f,c
  5921  0009E0  90D8               	bcf	status,0,c
  5922  0009E2  3643               	rlcf	??_ECAN_Receive+2,f,c
  5923  0009E4  3644               	rlcf	??_ECAN_Receive+3,f,c
  5924  0009E6  1243               	iorwf	??_ECAN_Receive+2,f,c
  5925  0009E8  0E00               	movlw	0
  5926  0009EA  1244               	iorwf	??_ECAN_Receive+3,f,c
  5927  0009EC  C03F  FFD9         	movff	ECAN_Receive@RxMessage,fsr2l
  5928  0009F0  C040  FFDA         	movff	ECAN_Receive@RxMessage+1,fsr2h
  5929  0009F4  C043  FFDE         	movff	??_ECAN_Receive+2,postinc2
  5930  0009F8  C044  FFDD         	movff	??_ECAN_Receive+3,postdec2
  5931                           
  5932                           ;ecan.c: 171: }
  5933  0009FC  D000               	goto	i2l2765
  5934  0009FE                     i2l2765:
  5935                           
  5936                           ;ecan.c: 175: }
  5937                           ;ecan.c: 177: RxMessage->RTR = RXB0DLCbits.RXRTR;
  5938  0009FE  EE20 F005          	lfsr	2,5
  5939  000A02  503F               	movf	ECAN_Receive@RxMessage,w,c
  5940  000A04  26D9               	addwf	fsr2l,f,c
  5941  000A06  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5942  000A08  22DA               	addwfc	fsr2h,f,c
  5943  000A0A  AC65               	btfss	3941,6,c	;volatile
  5944  000A0C  D002               	goto	i2u191_40
  5945  000A0E  0E01               	movlw	1
  5946  000A10  D001               	goto	i2u191_46
  5947  000A12                     i2u191_40:
  5948  000A12  0E00               	movlw	0
  5949  000A14                     i2u191_46:
  5950  000A14  6EDF               	movwf	indf2,c
  5951                           
  5952                           ;ecan.c: 179: RxMessage->DLC = RXB0DLC&0x0F;
  5953  000A16  EE20 F006          	lfsr	2,6
  5954  000A1A  503F               	movf	ECAN_Receive@RxMessage,w,c
  5955  000A1C  26D9               	addwf	fsr2l,f,c
  5956  000A1E  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5957  000A20  22DA               	addwfc	fsr2h,f,c
  5958  000A22  5065               	movf	3941,w,c	;volatile
  5959  000A24  0B0F               	andlw	15
  5960  000A26  6EDF               	movwf	indf2,c
  5961                           
  5962                           ;ecan.c: 183: RxMessage->Data[0] = RXB0D0;
  5963  000A28  EE20 F007          	lfsr	2,7
  5964  000A2C  503F               	movf	ECAN_Receive@RxMessage,w,c
  5965  000A2E  26D9               	addwf	fsr2l,f,c
  5966  000A30  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5967  000A32  22DA               	addwfc	fsr2h,f,c
  5968  000A34  CF66 FFDF          	movff	3942,indf2	;volatile
  5969                           
  5970                           ;ecan.c: 184: RxMessage->Data[1] = RXB0D1;
  5971  000A38  EE20 F008          	lfsr	2,8
  5972  000A3C  503F               	movf	ECAN_Receive@RxMessage,w,c
  5973  000A3E  26D9               	addwf	fsr2l,f,c
  5974  000A40  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5975  000A42  22DA               	addwfc	fsr2h,f,c
  5976  000A44  CF67 FFDF          	movff	3943,indf2	;volatile
  5977                           
  5978                           ;ecan.c: 185: RxMessage->Data[2] = RXB0D2;
  5979  000A48  EE20 F009          	lfsr	2,9
  5980  000A4C  503F               	movf	ECAN_Receive@RxMessage,w,c
  5981  000A4E  26D9               	addwf	fsr2l,f,c
  5982  000A50  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5983  000A52  22DA               	addwfc	fsr2h,f,c
  5984  000A54  CF68 FFDF          	movff	3944,indf2	;volatile
  5985                           
  5986                           ;ecan.c: 186: RxMessage->Data[3] = RXB0D3;
  5987  000A58  EE20 F00A          	lfsr	2,10
  5988  000A5C  503F               	movf	ECAN_Receive@RxMessage,w,c
  5989  000A5E  26D9               	addwf	fsr2l,f,c
  5990  000A60  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5991  000A62  22DA               	addwfc	fsr2h,f,c
  5992  000A64  CF69 FFDF          	movff	3945,indf2	;volatile
  5993                           
  5994                           ;ecan.c: 187: RxMessage->Data[4] = RXB0D4;
  5995  000A68  EE20 F00B          	lfsr	2,11
  5996  000A6C  503F               	movf	ECAN_Receive@RxMessage,w,c
  5997  000A6E  26D9               	addwf	fsr2l,f,c
  5998  000A70  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  5999  000A72  22DA               	addwfc	fsr2h,f,c
  6000  000A74  CF6A FFDF          	movff	3946,indf2	;volatile
  6001                           
  6002                           ;ecan.c: 188: RxMessage->Data[5] = RXB0D5;
  6003  000A78  EE20 F00C          	lfsr	2,12
  6004  000A7C  503F               	movf	ECAN_Receive@RxMessage,w,c
  6005  000A7E  26D9               	addwf	fsr2l,f,c
  6006  000A80  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  6007  000A82  22DA               	addwfc	fsr2h,f,c
  6008  000A84  CF6B FFDF          	movff	3947,indf2	;volatile
  6009                           
  6010                           ;ecan.c: 189: RxMessage->Data[6] = RXB0D6;
  6011  000A88  EE20 F00D          	lfsr	2,13
  6012  000A8C  503F               	movf	ECAN_Receive@RxMessage,w,c
  6013  000A8E  26D9               	addwf	fsr2l,f,c
  6014  000A90  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  6015  000A92  22DA               	addwfc	fsr2h,f,c
  6016  000A94  CF6C FFDF          	movff	3948,indf2	;volatile
  6017                           
  6018                           ;ecan.c: 190: RxMessage->Data[7] = RXB0D7;
  6019  000A98  EE20 F00E          	lfsr	2,14
  6020  000A9C  503F               	movf	ECAN_Receive@RxMessage,w,c
  6021  000A9E  26D9               	addwf	fsr2l,f,c
  6022  000AA0  5040               	movf	ECAN_Receive@RxMessage+1,w,c
  6023  000AA2  22DA               	addwfc	fsr2h,f,c
  6024  000AA4  CF6D FFDF          	movff	3949,indf2	;volatile
  6025                           
  6026                           ;ecan.c: 191: RXB0CONbits.RXFUL = 0;
  6027  000AA8  9E60               	bcf	3936,7,c	;volatile
  6028  000AAA  0012               	return	
  6029  000AAC  0012               	return		;funcret
  6030  000AAE                     __end_of_ECAN_Receive:
  6031                           	opt stack 0
  6032  0000                     pclatu	equ	0xFFB
  6033                           pclath	equ	0xFFA
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           intcon	equ	0xFF2
  6041                           intcon2	equ	0xFF1
  6042                           postinc0	equ	0xFEE
  6043                           fsr0h	equ	0xFEA
  6044                           fsr0l	equ	0xFE9
  6045                           wreg	equ	0xFE8
  6046                           postinc1	equ	0xFE6
  6047                           postdec1	equ	0xFE5
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           bsr	equ	0xFE0
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           pclatu	equ	0xFFB
  6058                           pclath	equ	0xFFA
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           intcon	equ	0xFF2
  6066                           intcon2	equ	0xFF1
  6067                           postinc0	equ	0xFEE
  6068                           fsr0h	equ	0xFEA
  6069                           fsr0l	equ	0xFE9
  6070                           wreg	equ	0xFE8
  6071                           postinc1	equ	0xFE6
  6072                           postdec1	equ	0xFE5
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           bsr	equ	0xFE0
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083                           	psect	rparam
  6084  0000                     pclatu	equ	0xFFB
  6085                           pclath	equ	0xFFA
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           prodh	equ	0xFF4
  6091                           prodl	equ	0xFF3
  6092                           intcon	equ	0xFF2
  6093                           intcon2	equ	0xFF1
  6094                           postinc0	equ	0xFEE
  6095                           fsr0h	equ	0xFEA
  6096                           fsr0l	equ	0xFE9
  6097                           wreg	equ	0xFE8
  6098                           postinc1	equ	0xFE6
  6099                           postdec1	equ	0xFE5
  6100                           fsr1h	equ	0xFE2
  6101                           fsr1l	equ	0xFE1
  6102                           bsr	equ	0xFE0
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      70
    BANK0           160     49     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    bsp_SoftTimerDec@_tmr	PTR volatile struct . size(2) Largest target is 12
		 -> s_tTmr(COMRAM[12]), 

    ECAN_Receive@RxMessage	PTR struct . size(2) Largest target is 16
		 -> g_tCanRxMsg(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _High_ISR in COMRAM

    _High_ISR->_ECAN_Receive

Critical Paths under _Lows_ISR in COMRAM

    _Lows_ISR->_bsp_SoftTimerDec

Critical Paths under _main in BANK0

    _SysEnterSleep->_ADC_Cmd
    _SysEnterSleep->_PedalCurrentAcq
    _App_System_Init->_ConfigTimer0
    _ConfigTimer0->___lldiv
    ___lldiv->___lmul
    _ADC_Init->_ADC_StartConversion
    _PedalCurrentAcqDelay->_PedalCurrentAcq
    _AdcPro->_ADC_GetConversionValue
    _AdcPro->___lwdiv

Critical Paths under _High_ISR in BANK0

    None.

Critical Paths under _Lows_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_ISR in BANK1

    None.

Critical Paths under _Lows_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_ISR in BANK2

    None.

Critical Paths under _Lows_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _High_ISR in BANK3

    None.

Critical Paths under _Lows_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _High_ISR in BANK4

    None.

Critical Paths under _Lows_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _High_ISR in BANK5

    None.

Critical Paths under _Lows_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _High_ISR in BANK6

    None.

Critical Paths under _Lows_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _High_ISR in BANK7

    None.

Critical Paths under _Lows_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _High_ISR in BANK8

    None.

Critical Paths under _Lows_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _High_ISR in BANK9

    None.

Critical Paths under _Lows_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _High_ISR in BANK10

    None.

Critical Paths under _Lows_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _High_ISR in BANK11

    None.

Critical Paths under _Lows_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _High_ISR in BANK12

    None.

Critical Paths under _Lows_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _High_ISR in BANK13

    None.

Critical Paths under _Lows_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _High_ISR in BANK14

    None.

Critical Paths under _Lows_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15751
                _AppTask_PollHandler
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _AppTask_PollHandler                                  0     0      0   11029
                             _AdcPro
                      _Pedal_Process
                     _bsp_CheckTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_CheckTimer                                       2     2      0      66
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Pedal_Process                                        0     0      0    9784
                    _PedalCurrentAcq
               _PedalCurrentAcqDelay
                         _Pedal_Back
                          _Pedal_Out
                         _Pedal_Stop
                 _SysNormalWaitSleep
 ---------------------------------------------------------------------------------
 (3) _SysNormalWaitSleep                                   0     0      0    4722
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _SysEnterSleep                                        0     0      0    2857
                            _ADC_Cmd
                        _CAN_SetMode
                    _PedalCurrentAcq
 ---------------------------------------------------------------------------------
 (1) _App_System_Init                                      0     0      0    1865
                            _ADC_Cmd
                           _ADC_Init
                        _CAN_SetMode
                       _ConfigTimer0
                          _ECAN_Init
                          _PORT_Init
                           _RLY_Init
                        _SetSysClock
                 _bsp_StartAutoTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_StartAutoTimer                                   3     1      2     371
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SetSysClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RLY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigTimer0                                        10     8      2    1040
                                             39 BANK0     10     8      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     395
                                             26 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CAN_SetMode                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0      31
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Cmd                                              2     1      1     401
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _Pedal_Stop                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Out                                            1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Back                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _PedalCurrentAcqDelay                                 1     1      0    2496
                                             16 BANK0      1     1      0
                    _PedalCurrentAcq
 ---------------------------------------------------------------------------------
 (2) _PedalCurrentAcq                                      2     1      1    2434
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _AdcPro                                               3     3      0    1179
                                             21 BANK0      3     3      0
             _ADC_GetConversionValue
                _ADC_StartConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  2     2      0      31
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversionValue                               7     5      2      37
                                             14 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lows_ISR                                            18    18      0     264
                                              4 COMRAM    18    18      0
                   _bsp_SoftTimerDec
 ---------------------------------------------------------------------------------
 (8) _bsp_SoftTimerDec                                     4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _High_ISR                                            14    14      0     350
                                              0 BANK0     14    14      0
                       _ECAN_Receive
 ---------------------------------------------------------------------------------
 (10) _ECAN_Receive                                        6     4      2     350
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppTask_PollHandler
     _AdcPro
       _ADC_GetConversionValue
       _ADC_StartConversion
       ___lwdiv
     _Pedal_Process
       _PedalCurrentAcq
       _PedalCurrentAcqDelay
         _PedalCurrentAcq
       _Pedal_Back
       _Pedal_Out
       _Pedal_Stop
       _SysNormalWaitSleep
         _App_System_Init
           _ADC_Cmd
           _ADC_Init
             _ADC_StartConversion
           _CAN_SetMode
           _ConfigTimer0
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _ECAN_Init
           _PORT_Init
           _RLY_Init
           _SetSysClock
           _bsp_StartAutoTimer
         _SysEnterSleep
           _ADC_Cmd
           _CAN_SetMode
           _PedalCurrentAcq
     _bsp_CheckTimer
   _App_System_Init
     _ADC_Cmd
     _ADC_Init
       _ADC_StartConversion
     _CAN_SetMode
     _ConfigTimer0
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _ECAN_Init
     _PORT_Init
     _RLY_Init
     _SetSysClock
     _bsp_StartAutoTimer
   _SysEnterSleep
     _ADC_Cmd
     _CAN_SetMode
     _PedalCurrentAcq

 _Lows_ISR (ROOT)
   _bsp_SoftTimerDec

 _High_ISR (ROOT)
   _ECAN_Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      78       5       75.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      46       1       73.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE       6        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Aug 18 09:05:00 2017

                                l52 1226                                  l29 12E0  
                                l59 1236            __size_of_App_System_Init 0068  
               _AppTask_PollHandler 123C                                  bsr 000FE0  
                       __CFG_BORV$3 000000                  __size_of_ECAN_Init 009E  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                               l158 0402                                 l271 07EE  
                               l440 0D54                                 l432 0D14  
                               l434 0D18                                 l531 0DBA  
                               l285 0964                                 l613 12D6  
                               l621 1276                                 l278 08A8  
                               l607 12C6                                 l456 136E  
                               l529 0DBC                                 l627 1286  
                               l581 1316                                 l573 1306  
                               l583 131A                                 l575 130A  
                               l593 129E                                 l585 131E  
                               l577 130E                                 l579 1312  
                               l599 12AE                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                     __end_of_ADC_Cmd 123C  
                               prod 000FF3                                 wreg 000FE8  
                     _SysEnterSleep 0F3A                                l1150 0EB6  
                              l3101 0E5C                                l3103 0E6A  
                              l1087 0C38                                l3113 0EA6  
                              l3105 0E74                                l3051 12A2  
                              l3123 1096                                l3205 08F8  
                              l3061 1106                                l3037 0F94  
                              l3133 10D8                                l3215 092E  
                              l3071 127A                                l3209 0902  
                              l3217 094E                                l3225 0970  
                              l3145 0788                                l3305 0206  
                              l3313 0220                                l3401 03DA  
                              l3219 0958                                l3155 07BE  
                              l3075 12CA                                l3091 115C  
                              l3315 023E                                l3229 097E  
                              l3165 07FA                                l3149 0792  
                              l3405 040A                                l3341 02C2  
                              l3237 00E2                                l3183 0854  
                              l3191 08A0                                l3319 0262  
                              l3169 0806                                l3441 04AC  
                              l3425 0464                                l3273 0184  
                              l3257 013C                                l3179 084A  
                              l3195 08B4                                l3523 0638  
                              l3435 048C                                l3355 0310  
                              l3267 0164                                l3603 1352  
                              l3189 0880                                l3541 0696  
                              l3533 066A                                l3509 05EA  
                              l3517 0618                                l3461 0508  
                              l3381 038C                                l3373 036E  
                              l3365 0342                                l3349 02F0  
                              l3293 01E0                                l2903 0C24  
                              l3543 069C                                l3455 04EE  
                              l3391 03B0                                l3375 0374  
                              l3287 01C6                                l2921 0D22  
                              l3561 06E2                                l3473 052E  
                              l3481 0548                                l3393 03BA  
                              l2915 122A                                l3547 06B0  
                              l3483 0566                                l3571 072A  
                              l3379 0388                                l3549 06B4  
                              l2935 0D9A                                l2919 0D1C  
                              l3559 06D8                                l3487 058A  
                              l2881 0EFC                                l2929 0D3A  
                              l3577 0742                                l3569 0702  
                              l2891 0BB2                                l2893 0BC4  
                              l2877 0ED4                                l2991 11D4  
                              l2983 11BC                                l2895 0BCE  
                              l2985 11C0  SysNormalWaitSleep@tempPedalRunFlag 0046  
                              _T0RH 0002                                _T0RL 0003  
                              u3057 0FA6                                u2710 029E  
                              u2800 04CE                                u2640 011E  
                              u2820 0576                                u2660 01A6  
                              u2680 024E                                u2850 05C6  
                              u2780 0446                ?_AppTask_PollHandler 0029  
                              _PIR5 000F77                     ConfigTimer0@tmp 00D4  
                _bsp_StartAutoTimer 0DAE                                _main 1344  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                    __end_of_ADC_Init 1302  
                              pclat 000FFA                _PedalCurrentAcqDelay 10DE  
                              prodh 000FF4                                prodl 000FF3  
                              start 00D6                       __CFG_IESO$OFF 000000  
                     __CFG_FOSC$HS1 000000                 ?_bsp_StartAutoTimer 00B5  
                     __CFG_MCLRE$ON 000000                        ___param_bank 000010  
                     _Pedal_Process 00DA                               ?_main 0029  
                   __end_of___lldiv 0C4A                               _T0CON 000FD5  
                             _LATC0 007C58                               _LATC1 007C59  
                             _LATB5 007C55                               _LATC4 007C5C  
                             _LATB6 007C56                               _LATB7 007C57  
                             _LATC7 007C5F                     __end_of___lwdiv 0EC0  
                             i1l552 0090                               i2l492 0CD6  
                             _TMR0H 000FD7                               _TMR0L 000FD6  
                             _TRISA 000F92                ??_bsp_StartAutoTimer 00B7  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                 ___lmul@multiplicand 00B9  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                      ?_SysEnterSleep 0029  
              __size_of_CAN_SetMode 0018                      __CFG_EBTRB$OFF 000000  
                __size_of_PORT_Init 0002               ??_AppTask_PollHandler 00D8  
                  __end_of_RLY_Init 1324                      __CFG_BOREN$OFF 000000  
                             tablat 000FF5                   __end_of_ECAN_Init 0DAE  
                             status 000FD8               ?_PedalCurrentAcqDelay 0029  
             __size_of_ECAN_Receive 0120                    __end_of_High_ISR 0D10  
                        _Pedal_Back 12B4                     __initialization 1168  
                        _Pedal_Stop 1264                      ?_Pedal_Process 0029  
              __end_of_ConfigTimer0 0B84                        __end_of_main 135C  
                         ??_ADC_Cmd 00B6                              ??_main 00D8  
                     __activetblptr 000002          ADC_StartConversion@channel 00B6  
                  __end_of_Lows_ISR 00D6                     CAN_SetMode@mode 00B5  
                    __CFG_RETEN$OFF 000000                   ??_App_System_Init 00D8  
                PedalCurrentAcq@dir 00B6                  PedalCurrentAcq@sta 00B5  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _CANCON 000F6F  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _ANCON0 000F5D                       ??_SetSysClock 00B5  
                      _ECAN_Receive 098E                     __CFG_BBSIZ$BB2K 000000  
                            i1l2863 0076                              i1l2859 006E  
                    __CFG_WDTEN$OFF 000000                              i2l3631 0CCE  
                            i2l3623 0CBA                              i2l3633 0CD2  
                            i2l3625 0CBE                              i2l3627 0CC2  
                            i2l2765 09FE                              _RXB0D0 000F66  
                            _RXB0D1 000F67                              _RXB0D2 000F68  
                            _RXB0D3 000F69                              _RXB0D4 000F6A  
                            _RXB0D5 000F6B                              _RXB0D6 000F6C  
                            _RXB0D7 000F6D                      __CFG_WDTPS$256 000000  
                            _TXB0D0 000F26                              _TXB0D1 000F27  
                            _TXB0D2 000F28                              _TXB0D3 000F29  
                            _TXB0D4 000F2A                              _TXB0D5 000F2B  
                            _TXB0D6 000F2C                              _TXB0D7 000F2D  
                __size_of_Pedal_Out 0028                              _TRISC0 007CA0  
                            _TRISB2 007C9A                              _TRISC1 007CA1  
                            _TRISB3 007C9B                              _TRISB5 007C9D  
                            _TRISC4 007CA4                              _TRISB6 007C9E  
                            _TRISB7 007C9F                              _TRISC7 007CA7  
                            _AdcPro 074A                    _bsp_SoftTimerDec 0FAE  
                    __CFG_XINST$OFF 000000         __size_of_SysNormalWaitSleep 003E  
                            ___lmul 0EC0                        Pedal_Out@dir 00B5  
                         ??___lldiv 00C9                           ??___lwdiv 00B9  
                 __end_of_PORT_Init 137C                              _s_tTmr 001D  
                            clear_0 116E                              clear_1 117A  
                   _PedalCurrentAcq 11A2                        __pdataCOMRAM 0045  
                   ??_SysEnterSleep 00B7                           ?_ADC_Init 0029  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                   bsp_CheckTimer@_id 00B6  
            ??_PedalCurrentAcqDelay 00B7                     __CFG_BORPWR$LOW 000000  
                        __accesstop 0060             __end_of__initialization 1198  
                     ___rparam_used 000001                 __end_of_SetSysClock 1378  
                   ??_Pedal_Process 00D8                         ?_Pedal_Back 0029  
                        _SysRunData 0004                         ?_Pedal_Stop 0029  
      __size_of_ADC_StartConversion 0020                      __pcstackCOMRAM 0029  
                         ?_RLY_Init 0029                   __end_of_Pedal_Out 12B4  
  ADC_GetConversionValue@ADC_Result 00BA                          ??_ADC_Init 00B7  
                         ?_High_ISR 0029                          __pbssBANK0 0060  
                   __CFG_PLLCFG$OFF 000000                             ?_AdcPro 0029  
             __size_of_ConfigTimer0 00D6                           ?_Lows_ISR 0029  
           __end_of_PedalCurrentAcq 11DA                             ?___lmul 00B5  
                        ADC_Cmd@sta 00B5                             AdcPro@i 00BE  
                           _ECANCON 000F72                             _ADC_Cmd 120C  
                    ___lmul@product 00BD                             _CANSTAT 000F6E  
                        ??_RLY_Init 00B5                             _BRGCON1 000E43  
                           _BRGCON2 000E44                             _BRGCON3 000E45  
                  __CFG_CANMX$PORTB 000000                       Pedal_Back@dir 00B5  
                           _RXB0DLC 000F65                             _RXB0CON 000F60  
               __size_of_Pedal_Back 0028                             _TXB0DLC 000F25  
                           _TXB0CON 000F20                          ??_High_ISR 00A7  
                           _RXFCON0 000E46                             _RXFCON1 000E47  
               __size_of_Pedal_Stop 0028                        _ConfigTimer0 0AAE  
                       _SetSysClock 1374                           AdcPro@buf 0060  
                         AdcPro@sum 00BC                     __size_of_AdcPro 0244  
                   __CFG_PWRTEN$OFF 000000                      ADC_Cmd@channel 00B6  
                           __Hparam 0000                          ??_Lows_ISR 002D  
                         _ECAN_Init 0D10                             __Lparam 0000  
                   _App_System_Init 101E                     __size_of___lmul 007A  
                           ___lldiv 0B84                             ___lwdiv 0E3E  
          ??_ADC_GetConversionValue 00B7                     __CFG_STVREN$OFF 000000  
                           __pcinit 1168                             __ramtop 0F00  
                           __ptext0 1344                             __ptext1 123C  
                           __ptext2 1086                             __ptext3 00DA  
                           __ptext4 112A                             __ptext5 0F3A  
                           __ptext6 101E                             __ptext7 0DAE  
                           __ptext8 1374                             __ptext9 1302  
                         _T0CONbits 000FD5             __size_of_bsp_CheckTimer 0058  
                     Pedal_Stop@dir 00B5                       ??_CAN_SetMode 00B5  
          __end_of_bsp_SoftTimerDec 101E         __end_of_AppTask_PollHandler 1264  
       __size_of_bsp_StartAutoTimer 0090                   __CFG_MSSPMSK$MSK7 000000  
                    __pintcode_body 0C4A                  __CFG_INTOSCSEL$LOW 000000  
              end_of_initialization 1198                       __Lmediumconst 0000  
                           int_func 0C4A                     ___lldiv@divisor 00C5  
                        ?_ECAN_Init 0029                     ___lldiv@counter 00CD  
           PedalCurrentAcqDelay@dir 00B7                             postdec1 000FE5  
                           postdec2 000FDD                    ?_PedalCurrentAcq 00B5  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                           _PORT_Init 137A  
               _ADC_StartConversion 1324                   __size_of_ADC_Init 0026  
               __end_of_CAN_SetMode 1374                         AdcPro@index 0045  
                    ConfigTimer0@ms 00CE                         AdcPro@write 0001  
           __end_of_App_System_Init 1086          __end_of_SysNormalWaitSleep 1168  
                    __end_of_AdcPro 098E                        ??_Pedal_Back 00B5  
                      ??_Pedal_Stop 00B5                ?_ADC_StartConversion 0029  
                    __end_of___lmul 0F3A     __size_of_ADC_GetConversionValue 0032  
                     __pidataCOMRAM 1378                          ?_PORT_Init 0029  
                 __size_of_RLY_Init 0022                 start_initialization 1168  
                         _Pedal_Out 128C               __end_of_SysEnterSleep 0FAE  
                __end_of_Pedal_Back 12DC                  __end_of_Pedal_Stop 128C  
                         Lows_ISR@i 003E                         _CANSTATbits 000F6E  
                 __size_of_High_ISR 0D08                            ??_AdcPro 00BC  
     __size_of_PedalCurrentAcqDelay 004C                         ??_ECAN_Init 00B5  
             ??_ADC_StartConversion 00B5               __end_of_Pedal_Process 074A  
                          ??___lmul 00BD                   __size_of_Lows_ISR 00BE  
                       _g_tCanRxMsg 0088                         _g_tCanTxMsg 0098  
                          ?_ADC_Cmd 00B5                      _bsp_CheckTimer 1086  
                       _CAN_SetMode 135C                         __pbssCOMRAM 0001  
                     __pcstackBANK0 00A7                          ?_Pedal_Out 0029  
                      ?_SetSysClock 0029              _ADC_GetConversionValue 11DA  
                  ?_App_System_Init 0029                    ___lwdiv@dividend 00B5  
                         __pintcode 0008                            ?___lldiv 00C1  
                          ?___lwdiv 00B5              __end_of_bsp_CheckTimer 10DE  
                       __pintcodelo 0018                         ??_PORT_Init 00B5  
                          _ADC_Init 12DC                   ?_bsp_SoftTimerDec 0029  
                  ___lwdiv@quotient 00BA                  ??_bsp_SoftTimerDec 002B  
                     ?_ECAN_Receive 003F                            _IPR5bits 000F78  
                          _PIE5bits 000F76                            i2u190_45 09C4  
                          i2u191_40 0A12                            i2u191_46 0A14  
                          i2u188_40 09A6                            i2u188_46 09A8  
                          _PIR5bits 000F77                            _RCONbits 000FD0  
                          _RXB0SIDH 000F61                            _RXB0SIDL 000F62  
                          _RXF0EIDH 000EE2                            _RXF0EIDL 000EE3  
                          _RXF0SIDH 000EE0                            _RXF0SIDL 000EE1  
                          _RXM0EIDH 000EFA                            _RXM0EIDL 000EFB  
                          _TXB0SIDH 000F21                            _TXB0SIDL 000F22  
                          _RXM0SIDH 000EF8                            _RXM0SIDL 000EF9  
                   ?_bsp_CheckTimer 0029                bsp_SoftTimerDec@_tmr 0029  
                  __size_of_ADC_Cmd 0030                            _RLY_Init 1302  
                        _ADCON0bits 000FC2                    __CFG_SOSCSEL$DIG 000000  
        __end_of_bsp_StartAutoTimer 0E3E                         ??_Pedal_Out 00B5  
                          _High_ISR 0008                      ??_ECAN_Receive 0041  
                 ___lmul@multiplier 00B5                         _INTCON2bits 000FF1  
      __size_of_AppTask_PollHandler 0028                            __Hrparam 0000  
                      _RXB0SIDLbits 000F62                            _Lows_ISR 0018  
                          __Lrparam 0000                    __size_of___lldiv 00C6  
                  __size_of___lwdiv 0082                  _SysNormalWaitSleep 112A  
             ECAN_Receive@RxMessage 003F            __size_of_PedalCurrentAcq 0038  
               ?_SysNormalWaitSleep 0029                     ___lwdiv@divisor 00B7  
                   ___lwdiv@counter 00B9                            __ptext10 137A  
                          __ptext11 0D10                            __ptext20 12B4  
                          __ptext12 0AAE                            __ptext21 10DE  
                          __ptext13 0EC0                            __ptext30 098E  
                          __ptext22 11A2                            __ptext14 0B84  
                          __ptext23 074A                            __ptext15 135C  
                          __ptext24 0E3E                            __ptext16 12DC  
                          __ptext25 1324                            __ptext17 120C  
                          __ptext26 11DA                            __ptext18 1264  
                          __ptext19 128C                            __ptext28 0FAE  
              __size_of_SetSysClock 0004                       __size_of_main 0018  
                      _TXB0SIDLbits 000F22                ??_SysNormalWaitSleep 00D8  
      __end_of_PedalCurrentAcqDelay 112A                         _RXB0DLCbits 000F65  
                       _RXB0CONbits 000F60                        ?_CAN_SetMode 0029  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
             bsp_StartAutoTimer@_id 00B7             ?_ADC_GetConversionValue 00B5  
                     ?_ConfigTimer0 00CE                            intlevel1 0000  
                          intlevel2 0000         __end_of_ADC_StartConversion 1344  
                  ___lldiv@dividend 00C1                         _TXB0DLCbits 000F25  
                       _TXB0CONbits 000F20                          _OSCCONbits 000FD3  
            __size_of_SysEnterSleep 0074                __end_of_ECAN_Receive 0AAE  
                  ___lldiv@quotient 00C9      __end_of_ADC_GetConversionValue 120C  
                    ??_ConfigTimer0 00D0           bsp_StartAutoTimer@_period 00B5  
            __size_of_Pedal_Process 0670                   ??_PedalCurrentAcq 00B6  
         __size_of_bsp_SoftTimerDec 0070                    ??_bsp_CheckTimer 00B5  
