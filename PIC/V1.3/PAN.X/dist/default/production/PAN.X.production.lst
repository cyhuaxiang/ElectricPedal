

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 28 16:44:54 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  0017E8                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for SysNormalWaitSleep@tempPedalRunFlag
    56  0017E8  AA                 	db	170
    57                           
    58                           	psect	idataBANK0
    59  0017E9                     __pidataBANK0:
    60                           	opt stack 0
    61                           
    62                           ;initializer for AdcPro@index
    63  0017E9  01                 	db	1
    64  0000                     _BRGCON1	set	3651
    65  0000                     _BRGCON2	set	3652
    66  0000                     _BRGCON3	set	3653
    67  0000                     _RXF0EIDH	set	3810
    68  0000                     _RXF0EIDL	set	3811
    69  0000                     _RXF0SIDH	set	3808
    70  0000                     _RXF0SIDL	set	3809
    71  0000                     _RXFCON0	set	3654
    72  0000                     _RXFCON1	set	3655
    73  0000                     _RXM0EIDH	set	3834
    74  0000                     _RXM0EIDL	set	3835
    75  0000                     _RXM0SIDH	set	3832
    76  0000                     _RXM0SIDL	set	3833
    77  0000                     _ANCON0	set	3933
    78  0000                     _ANCON1bits	set	3932
    79  0000                     _IOCBbits	set	3930
    80  0000                     _TXB0CON	set	3872
    81  0000                     _TXB0CONbits	set	3872
    82  0000                     _TXB0D0	set	3878
    83  0000                     _TXB0D1	set	3879
    84  0000                     _TXB0D2	set	3880
    85  0000                     _TXB0D3	set	3881
    86  0000                     _TXB0D4	set	3882
    87  0000                     _TXB0D5	set	3883
    88  0000                     _TXB0D6	set	3884
    89  0000                     _TXB0D7	set	3885
    90  0000                     _TXB0DLC	set	3877
    91  0000                     _TXB0DLCbits	set	3877
    92  0000                     _TXB0SIDH	set	3873
    93  0000                     _TXB0SIDL	set	3874
    94  0000                     _TXB0SIDLbits	set	3874
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _CANCON	set	3951
   101  0000                     _CANSTATbits	set	3950
   102  0000                     _ECANCON	set	3954
   103  0000                     _INTCON2bits	set	4081
   104  0000                     _INTCONbits	set	4082
   105  0000                     _IPR5bits	set	3960
   106  0000                     _OSCCONbits	set	4051
   107  0000                     _OSCTUNEbits	set	3995
   108  0000                     _PIE5bits	set	3958
   109  0000                     _PIR5	set	3959
   110  0000                     _PIR5bits	set	3959
   111  0000                     _PORTB	set	3969
   112  0000                     _PORTBbits	set	3969
   113  0000                     _RCONbits	set	4048
   114  0000                     _RXB0CON	set	3936
   115  0000                     _RXB0CONbits	set	3936
   116  0000                     _RXB0D0	set	3942
   117  0000                     _RXB0D1	set	3943
   118  0000                     _RXB0D2	set	3944
   119  0000                     _RXB0D3	set	3945
   120  0000                     _RXB0D4	set	3946
   121  0000                     _RXB0D5	set	3947
   122  0000                     _RXB0D6	set	3948
   123  0000                     _RXB0D7	set	3949
   124  0000                     _RXB0DLC	set	3941
   125  0000                     _RXB0DLCbits	set	3941
   126  0000                     _RXB0SIDH	set	3937
   127  0000                     _RXB0SIDL	set	3938
   128  0000                     _RXB0SIDLbits	set	3938
   129  0000                     _T0CON	set	4053
   130  0000                     _T0CONbits	set	4053
   131  0000                     _TMR0H	set	4055
   132  0000                     _TMR0L	set	4054
   133  0000                     _TRISAbits	set	3986
   134  0000                     _LATB5	set	31829
   135  0000                     _LATB6	set	31830
   136  0000                     _LATB7	set	31831
   137  0000                     _LATC0	set	31832
   138  0000                     _LATC1	set	31833
   139  0000                     _LATC4	set	31836
   140  0000                     _LATC7	set	31839
   141  0000                     _TRISB2	set	31898
   142  0000                     _TRISB3	set	31899
   143  0000                     _TRISB4	set	31900
   144  0000                     _TRISB5	set	31901
   145  0000                     _TRISB6	set	31902
   146  0000                     _TRISB7	set	31903
   147  0000                     _TRISC0	set	31904
   148  0000                     _TRISC1	set	31905
   149  0000                     _TRISC4	set	31908
   150  0000                     _TRISC7	set	31911
   151                           
   152                           ; #config settings
   153  0000                     
   154                           	psect	cinit
   155  001588                     __pcinit:
   156                           	opt stack 0
   157  001588                     start_initialization:
   158                           	opt stack 0
   159  001588                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to BANK0 (82 bytes)
   163  001588  EE00  F060         	lfsr	0,__pbssBANK0
   164  00158C  0E52               	movlw	82
   165  00158E                     clear_0:
   166  00158E  6AEE               	clrf	postinc0,c
   167  001590  06E8               	decf	wreg,f,c
   168  001592  E1FD               	bnz	clear_0
   169                           
   170                           ; Clear objects allocated to COMRAM (38 bytes)
   171  001594  EE00  F001         	lfsr	0,__pbssCOMRAM
   172  001598  0E26               	movlw	38
   173  00159A                     clear_1:
   174  00159A  6AEE               	clrf	postinc0,c
   175  00159C  06E8               	decf	wreg,f,c
   176  00159E  E1FD               	bnz	clear_1
   177                           
   178                           ; Initialize objects allocated to BANK0 (1 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180  0015A0  0EE9               	movlw	low __pidataBANK0
   181  0015A2  6EF6               	movwf	tblptrl,c
   182  0015A4  0E17               	movlw	high __pidataBANK0
   183  0015A6  6EF7               	movwf	tblptrh,c
   184  0015A8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185  0015AA  6EF8               	movwf	tblptru,c
   186  0015AC  0009               	tblrd		*+	;fetch initializer
   187  0015AE  CFF5 F0E3          	movff	tablat,__pdataBANK0
   188                           
   189                           ; Initialize objects allocated to COMRAM (1 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  0015B2  0EE8               	movlw	low __pidataCOMRAM
   192  0015B4  6EF6               	movwf	tblptrl,c
   193  0015B6  0E17               	movlw	high __pidataCOMRAM
   194  0015B8  6EF7               	movwf	tblptrh,c
   195  0015BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  0015BC  6EF8               	movwf	tblptru,c
   197  0015BE  0009               	tblrd		*+	;fetch initializer
   198  0015C0  CFF5 F044          	movff	tablat,__pdataCOMRAM
   199  0015C4                     end_of_initialization:
   200                           	opt stack 0
   201  0015C4                     __end_of__initialization:
   202                           	opt stack 0
   203  0015C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204  0015C6  6EF8               	movwf	tblptru,c
   205  0015C8  0100               	movlb	0
   206  0015CA  EFDA  F00B         	goto	_main	;jump to C main() function
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	bssCOMRAM
   215  000001                     __pbssCOMRAM:
   216                           	opt stack 0
   217  000001                     Lows_ISR@s_count:
   218                           	opt stack 0
   219  000001                     	ds	1
   220  000002                     _SysRunData:
   221                           	opt stack 0
   222  000002                     	ds	25
   223  00001B                     _s_tTmr:
   224                           	opt stack 0
   225  00001B                     	ds	12
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	dataCOMRAM
   234  000044                     __pdataCOMRAM:
   235                           	opt stack 0
   236  000044                     SysNormalWaitSleep@tempPedalRunFlag:
   237                           	opt stack 0
   238  000044                     	ds	1
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssBANK0
   247  000060                     __pbssBANK0:
   248                           	opt stack 0
   249  000060                     AdcPro@buf:
   250                           	opt stack 0
   251  000060                     	ds	40
   252  000088                     AdcPro@write:
   253                           	opt stack 0
   254  000088                     	ds	1
   255  000089                     _T0RH:
   256                           	opt stack 0
   257  000089                     	ds	1
   258  00008A                     _T0RL:
   259                           	opt stack 0
   260  00008A                     	ds	1
   261  00008B                     _g_tCanRxMsg:
   262                           	opt stack 0
   263  00008B                     	ds	16
   264  00009B                     _g_tCanTxMsg:
   265                           	opt stack 0
   266  00009B                     	ds	15
   267  0000AA                     _s_tBtn:
   268                           	opt stack 0
   269  0000AA                     	ds	8
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           
   277                           	psect	dataBANK0
   278  0000E3                     __pdataBANK0:
   279                           	opt stack 0
   280  0000E3                     AdcPro@index:
   281                           	opt stack 0
   282  0000E3                     	ds	1
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	cstackBANK0
   291  0000B2                     __pcstackBANK0:
   292                           	opt stack 0
   293  0000B2                     ??_High_ISR:
   294                           
   295                           ; 0 bytes @ 0x0
   296  0000B2                     	ds	14
   297  0000C0                     ??_ADC_StartConversion:
   298  0000C0                     ?_ADC_GetConversionValue:
   299                           	opt stack 0
   300  0000C0                     ?___lwdiv:
   301                           	opt stack 0
   302  0000C0                     ?___lmul:
   303                           	opt stack 0
   304  0000C0                     ADC_Cmd@sta:
   305                           	opt stack 0
   306  0000C0                     CAN_SetMode@mode:
   307                           	opt stack 0
   308  0000C0                     Pedal_Out@dir:
   309                           	opt stack 0
   310  0000C0                     Pedal_Back@dir:
   311                           	opt stack 0
   312  0000C0                     Pedal_Stop@dir:
   313                           	opt stack 0
   314  0000C0                     ECAN_Transmit@TxMessage:
   315                           	opt stack 0
   316  0000C0                     bsp_StartAutoTimer@_period:
   317                           	opt stack 0
   318  0000C0                     ___lwdiv@dividend:
   319                           	opt stack 0
   320  0000C0                     ___lmul@multiplier:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0xE
   324  0000C0                     	ds	1
   325  0000C1                     ADC_StartConversion@channel:
   326                           	opt stack 0
   327  0000C1                     ADC_Cmd@channel:
   328                           	opt stack 0
   329  0000C1                     bsp_CheckTimer@_id:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xF
   333  0000C1                     	ds	1
   334  0000C2                     ??_ADC_GetConversionValue:
   335  0000C2                     ??_ECAN_Transmit:
   336  0000C2                     bsp_StartAutoTimer@_id:
   337                           	opt stack 0
   338  0000C2                     ___lwdiv@divisor:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  0000C2                     	ds	2
   343  0000C4                     CAN_TX_TestInfo@TestInfoID:
   344                           	opt stack 0
   345  0000C4                     ___lwdiv@counter:
   346                           	opt stack 0
   347  0000C4                     bsp_DetectKey@pBtn:
   348                           	opt stack 0
   349  0000C4                     ___lmul@multiplicand:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x12
   353  0000C4                     	ds	1
   354  0000C5                     ADC_GetConversionValue@ADC_Result:
   355                           	opt stack 0
   356  0000C5                     ___lwdiv@quotient:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x13
   360  0000C5                     	ds	1
   361  0000C6                     
   362                           ; 0 bytes @ 0x14
   363  0000C6                     	ds	1
   364  0000C7                     AdcPro@sum:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x15
   368  0000C7                     	ds	1
   369  0000C8                     ___lmul@product:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x16
   373  0000C8                     	ds	1
   374  0000C9                     AdcPro@i:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x17
   378  0000C9                     	ds	3
   379  0000CC                     ?___lldiv:
   380                           	opt stack 0
   381  0000CC                     ___lldiv@dividend:
   382                           	opt stack 0
   383                           
   384                           ; 4 bytes @ 0x1A
   385  0000CC                     	ds	4
   386  0000D0                     ___lldiv@divisor:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x1E
   390  0000D0                     	ds	4
   391  0000D4                     ___lldiv@quotient:
   392                           	opt stack 0
   393                           
   394                           ; 4 bytes @ 0x22
   395  0000D4                     	ds	4
   396  0000D8                     ___lldiv@counter:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x26
   400  0000D8                     	ds	1
   401  0000D9                     ConfigTimer0@ms:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x27
   405  0000D9                     	ds	2
   406  0000DB                     ??_ConfigTimer0:
   407                           
   408                           ; 0 bytes @ 0x29
   409  0000DB                     	ds	4
   410  0000DF                     ConfigTimer0@tmp:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x2D
   414  0000DF                     	ds	4
   415  0000E3                     tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           
   422                           ; 0 bytes @ 0x31
   423                           
   424                           	psect	cstackCOMRAM
   425  000027                     __pcstackCOMRAM:
   426                           	opt stack 0
   427  000027                     bsp_SoftTimerDec@_tmr:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000027                     	ds	2
   432  000029                     
   433                           ; 0 bytes @ 0x2
   434  000029                     	ds	2
   435  00002B                     ??_Lows_ISR:
   436                           
   437                           ; 0 bytes @ 0x4
   438  00002B                     	ds	17
   439  00003C                     Lows_ISR@i:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x15
   443  00003C                     	ds	1
   444  00003D                     ECAN_Receive@RxMessage:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x16
   448  00003D                     	ds	2
   449  00003F                     ??_ECAN_Receive:
   450                           
   451                           ; 0 bytes @ 0x18
   452  00003F                     	ds	4
   453  000043                     High_ISR@LastKnowNPORTB:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x1C
   457  000043                     	ds	1
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 57 in file "source/main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  2  314[None  ] int 
   477 ;; Registers used:
   478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels required when called:   10
   490 ;; This function calls:
   491 ;;		_AppTask_PollHandler
   492 ;;		_App_System_Init
   493 ;;		_SysEnterSleep
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text0
   500  0017B4                     __ptext0:
   501                           	opt stack 0
   502  0017B4                     _main:
   503                           	opt stack 21
   504                           
   505                           ;main.c: 59: App_System_Init();
   506                           
   507                           ;incstack = 0
   508  0017B4  EC36  F00A         	call	_App_System_Init	;wreg free
   509                           
   510                           ;main.c: 61: SysEnterSleep();
   511  0017B8  EC6A  F00A         	call	_SysEnterSleep	;wreg free
   512                           
   513                           ;main.c: 62: App_System_Init();
   514  0017BC  EC36  F00A         	call	_App_System_Init	;wreg free
   515  0017C0  D000               	goto	l4101
   516  0017C2                     l4101:
   517                           
   518                           ;main.c: 64: {
   519                           ;main.c: 66: AppTask_PollHandler();
   520  0017C2  EC51  F00B         	call	_AppTask_PollHandler	;wreg free
   521  0017C6  D7FD               	goto	l4101
   522  0017C8  EF71  F000         	goto	start
   523  0017CC                     __end_of_main:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           
   532 ;; *************** function _AppTask_PollHandler *****************
   533 ;; Defined at:
   534 ;;		line 79 in file "source/app.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    9
   555 ;; This function calls:
   556 ;;		_AdcPro
   557 ;;		_Pedal_Process
   558 ;;		_RemoteCtrl_Process
   559 ;;		_bsp_CheckTimer
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text1
   566  0016A2                     __ptext1:
   567                           	opt stack 0
   568  0016A2                     _AppTask_PollHandler:
   569                           	opt stack 21
   570                           
   571                           ;app.c: 81: if (bsp_CheckTimer(0))
   572                           
   573                           ;incstack = 0
   574  0016A2  0E00               	movlw	0
   575  0016A4  EC98  F00A         	call	_bsp_CheckTimer
   576  0016A8  0900               	iorlw	0
   577  0016AA  A4D8               	btfss	status,2,c
   578                           
   579                           ;app.c: 82: {
   580                           ;app.c: 83: AdcPro();
   581  0016AC  ECCD  F003         	call	_AdcPro	;wreg free
   582                           
   583                           ;app.c: 85: }
   584                           ;app.c: 86: if (bsp_CheckTimer(1))
   585  0016B0  0E01               	movlw	1
   586  0016B2  EC98  F00A         	call	_bsp_CheckTimer
   587  0016B6  0900               	iorlw	0
   588  0016B8  B4D8               	btfsc	status,2,c
   589  0016BA  0012               	return	
   590                           
   591                           ;app.c: 87: {
   592                           ;app.c: 88: if(SysRunData.SysSta == SYS_NORMAL)
   593  0016BC  5004               	movf	_SysRunData+2,w,c
   594  0016BE  A4D8               	btfss	status,2,c
   595  0016C0  0012               	return	
   596                           
   597                           ;app.c: 89: {
   598                           ;app.c: 90: RemoteCtrl_Process();
   599  0016C2  EC02  F00A         	call	_RemoteCtrl_Process	;wreg free
   600                           
   601                           ;app.c: 91: Pedal_Process();
   602  0016C6  EC73  F000         	call	_Pedal_Process	;wreg free
   603                           
   604                           ;app.c: 93: else
   605                           ;app.c: 94: {
   606                           
   607                           ;app.c: 92: }
   608  0016CA  0012               	return	
   609  0016CC  0012               	return		;funcret
   610  0016CE                     __end_of_AppTask_PollHandler:
   611                           	opt stack 0
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           status	equ	0xFD8
   619                           
   620 ;; *************** function _bsp_CheckTimer *****************
   621 ;; Defined at:
   622 ;;		line 152 in file "source/timer.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  _id             1    wreg     unsigned char 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  _id             1   15[BANK0 ] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      unsigned char 
   629 ;; Registers used:
   630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   640 ;;Total ram usage:        2 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    4
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_AppTask_PollHandler
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text2
   651  001530                     __ptext2:
   652                           	opt stack 0
   653  001530                     _bsp_CheckTimer:
   654                           	opt stack 25
   655                           
   656                           ;incstack = 0
   657                           ;bsp_CheckTimer@_id stored from wreg
   658  001530  0100               	movlb	0	; () banked
   659  001532  6FC1               	movwf	bsp_CheckTimer@_id& (0+255),b
   660                           
   661                           ; BSR set to: 0
   662                           ;timer.c: 154: if (_id >= 2)
   663  001534  0E01               	movlw	1
   664  001536  0100               	movlb	0	; () banked
   665  001538  65C1               	cpfsgt	bsp_CheckTimer@_id& (0+255),b
   666  00153A  D002               	goto	l3545
   667                           
   668                           ; BSR set to: 0
   669                           ;timer.c: 155: {
   670                           ;timer.c: 156: return 0;
   671  00153C  0E00               	movlw	0
   672                           
   673                           ; BSR set to: 0
   674  00153E  0012               	return	
   675  001540                     l3545:
   676                           
   677                           ; BSR set to: 0
   678                           ;timer.c: 157: }
   679                           ;timer.c: 159: if (s_tTmr[_id].Flag == 1)
   680  001540  0100               	movlb	0	; () banked
   681  001542  51C1               	movf	bsp_CheckTimer@_id& (0+255),w,b
   682  001544  0D06               	mullw	6
   683  001546  0E01               	movlw	1
   684  001548  26F3               	addwf	prodl,f,c
   685  00154A  0E00               	movlw	0
   686  00154C  22F4               	addwfc	prodh,f,c
   687  00154E  0E1B               	movlw	low _s_tTmr
   688  001550  24F3               	addwf	prodl,w,c
   689  001552  6ED9               	movwf	fsr2l,c
   690  001554  0E00               	movlw	high _s_tTmr
   691  001556  20F4               	addwfc	prodh,w,c
   692  001558  6EDA               	movwf	fsr2h,c
   693  00155A  04DE               	decf	postinc2,w,c
   694  00155C  A4D8               	btfss	status,2,c
   695  00155E  D011               	goto	l3555
   696                           
   697                           ; BSR set to: 0
   698                           ;timer.c: 160: {
   699                           ;timer.c: 161: s_tTmr[_id].Flag = 0;
   700  001560  0100               	movlb	0	; () banked
   701  001562  51C1               	movf	bsp_CheckTimer@_id& (0+255),w,b
   702  001564  0D06               	mullw	6
   703  001566  0E01               	movlw	1
   704  001568  26F3               	addwf	prodl,f,c
   705  00156A  0E00               	movlw	0
   706  00156C  22F4               	addwfc	prodh,f,c
   707  00156E  0E1B               	movlw	low _s_tTmr
   708  001570  24F3               	addwf	prodl,w,c
   709  001572  6ED9               	movwf	fsr2l,c
   710  001574  0E00               	movlw	high _s_tTmr
   711  001576  20F4               	addwfc	prodh,w,c
   712  001578  6EDA               	movwf	fsr2h,c
   713  00157A  0E00               	movlw	0
   714  00157C  6EDF               	movwf	indf2,c
   715                           
   716                           ; BSR set to: 0
   717                           ;timer.c: 162: return 1;
   718  00157E  0E01               	movlw	1
   719                           
   720                           ; BSR set to: 0
   721                           ;timer.c: 163: }
   722                           
   723                           ; BSR set to: 0
   724  001580  0012               	return	
   725  001582                     l3555:
   726                           
   727                           ; BSR set to: 0
   728                           ;timer.c: 164: else
   729                           ;timer.c: 165: {
   730                           ;timer.c: 166: return 0;
   731  001582  0E00               	movlw	0
   732                           
   733                           ; BSR set to: 0
   734  001584  0012               	return	
   735                           
   736                           ; BSR set to: 0
   737                           
   738                           ; BSR set to: 0
   739  001586  0012               	return		;funcret
   740  001588                     __end_of_bsp_CheckTimer:
   741                           	opt stack 0
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           prodh	equ	0xFF4
   747                           prodl	equ	0xFF3
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           indf2	equ	0xFDF
   751                           postinc2	equ	0xFDE
   752                           fsr2h	equ	0xFDA
   753                           fsr2l	equ	0xFD9
   754                           status	equ	0xFD8
   755                           
   756 ;; *************** function _RemoteCtrl_Process *****************
   757 ;; Defined at:
   758 ;;		line 107 in file "source/app.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;		None               void
   765 ;; Registers used:
   766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    5
   779 ;; This function calls:
   780 ;;		_bsp_DetectKey
   781 ;; This function is called by:
   782 ;;		_AppTask_PollHandler
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text3
   787  001404                     __ptext3:
   788                           	opt stack 0
   789  001404                     _RemoteCtrl_Process:
   790                           	opt stack 24
   791                           
   792                           ;app.c: 109: bsp_DetectKey();
   793                           
   794                           ; BSR set to: 0
   795                           ;incstack = 0
   796  001404  ECCF  F004         	call	_bsp_DetectKey	;wreg free
   797                           
   798                           ;app.c: 110: if(SysRunData.RemoteCtrlSta == UNLOCK)
   799  001408  0405               	decf	_SysRunData+3,w,c
   800  00140A  A4D8               	btfss	status,2,c
   801  00140C  D029               	goto	l3659
   802                           
   803                           ;app.c: 111: {
   804                           ;app.c: 112: if(++SysRunData.UnlockWaitCnt > 1500)
   805  00140E  4A10               	infsnz	_SysRunData+14,f,c
   806  001410  2A11               	incf	_SysRunData+15,f,c
   807  001412  0EDD               	movlw	221
   808  001414  5C10               	subwf	_SysRunData+14,w,c
   809  001416  0E05               	movlw	5
   810  001418  5811               	subwfb	_SysRunData+15,w,c
   811  00141A  A0D8               	btfss	status,0,c
   812  00141C  0012               	return	
   813                           
   814                           ;app.c: 113: {
   815                           ;app.c: 114: SysRunData.UnlockWaitCnt = 0;
   816  00141E  0E00               	movlw	0
   817  001420  6E11               	movwf	_SysRunData+15,c
   818  001422  0E00               	movlw	0
   819  001424  6E10               	movwf	_SysRunData+14,c
   820                           
   821                           ;app.c: 115: if((SysRunData.PedalSta[0] == PEDAL_NORMAL_WAIT_BACK) && (SysRunData.PedalS
      +                          ta[1] == PEDAL_NORMAL_WAIT_BACK))
   822  001426  0E02               	movlw	2
   823  001428  1802               	xorwf	_SysRunData,w,c
   824  00142A  A4D8               	btfss	status,2,c
   825  00142C  D007               	goto	l3647
   826  00142E  0E02               	movlw	2
   827  001430  1803               	xorwf	_SysRunData+1,w,c
   828  001432  A4D8               	btfss	status,2,c
   829  001434  D003               	goto	l3647
   830                           
   831                           ;app.c: 116: {
   832                           ;app.c: 117: SysRunData.PedalRunFlag &= ~(1<<0);
   833  001436  901A               	bcf	_SysRunData+24,0,c
   834                           
   835                           ;app.c: 118: SysRunData.PedalRunFlag &= ~(1<<1);
   836  001438  921A               	bcf	_SysRunData+24,1,c
   837                           
   838                           ;app.c: 119: }
   839  00143A  0012               	return	
   840  00143C                     l3647:
   841                           
   842                           ;app.c: 120: else if((SysRunData.PedalSta[0] == PEDAL_UP_LIMIT) && (SysRunData.PedalSta[
      +                          1] == PEDAL_NORMAL_WAIT_BACK))
   843  00143C  5002               	movf	_SysRunData,w,c
   844  00143E  A4D8               	btfss	status,2,c
   845  001440  D006               	goto	l3653
   846  001442  0E02               	movlw	2
   847  001444  1803               	xorwf	_SysRunData+1,w,c
   848  001446  A4D8               	btfss	status,2,c
   849  001448  D002               	goto	l3653
   850                           
   851                           ;app.c: 121: {
   852                           ;app.c: 122: SysRunData.PedalRunFlag &= ~(1<<1);
   853  00144A  921A               	bcf	_SysRunData+24,1,c
   854                           
   855                           ;app.c: 123: }
   856  00144C  0012               	return	
   857  00144E                     l3653:
   858                           
   859                           ;app.c: 124: else if((SysRunData.PedalSta[0] == PEDAL_NORMAL_WAIT_BACK) && (SysRunData.P
      +                          edalSta[1] == PEDAL_UP_LIMIT))
   860  00144E  0E02               	movlw	2
   861  001450  1802               	xorwf	_SysRunData,w,c
   862  001452  A4D8               	btfss	status,2,c
   863  001454  0012               	return	
   864  001456  5003               	movf	_SysRunData+1,w,c
   865  001458  A4D8               	btfss	status,2,c
   866  00145A  0012               	return	
   867                           
   868                           ;app.c: 125: {
   869                           ;app.c: 126: SysRunData.PedalRunFlag &= ~(1<<0);
   870  00145C  901A               	bcf	_SysRunData+24,0,c
   871                           
   872                           ;app.c: 127: }
   873                           ;app.c: 128: }
   874                           ;app.c: 129: }
   875  00145E  0012               	return	
   876  001460                     l3659:
   877                           
   878                           ;app.c: 130: else
   879                           ;app.c: 131: {
   880                           ;app.c: 132: SysRunData.UnlockWaitCnt = 0;
   881  001460  0E00               	movlw	0
   882  001462  6E11               	movwf	_SysRunData+15,c
   883  001464  0E00               	movlw	0
   884  001466  6E10               	movwf	_SysRunData+14,c
   885  001468  0012               	return	
   886  00146A  0012               	return		;funcret
   887  00146C                     __end_of_RemoteCtrl_Process:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           prodh	equ	0xFF4
   894                           prodl	equ	0xFF3
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           indf2	equ	0xFDF
   898                           postinc2	equ	0xFDE
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _bsp_DetectKey *****************
   904 ;; Defined at:
   905 ;;		line 41 in file "source/remote_ctrl.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  pBtn            2   18[BANK0 ] PTR struct .
   910 ;;		 -> s_tBtn(8), 
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    4
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_RemoteCtrl_Process
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text4
   935  00099E                     __ptext4:
   936                           	opt stack 0
   937  00099E                     _bsp_DetectKey:
   938                           	opt stack 24
   939                           
   940                           ;remote_ctrl.c: 44: KEY_T *pBtn;
   941                           ;remote_ctrl.c: 46: pBtn = &s_tBtn;
   942                           
   943                           ;incstack = 0
   944  00099E  0EAA               	movlw	low _s_tBtn
   945  0009A0  0100               	movlb	0	; () banked
   946  0009A2  6FC4               	movwf	bsp_DetectKey@pBtn& (0+255),b
   947  0009A4  0E00               	movlw	high _s_tBtn
   948  0009A6  0100               	movlb	0	; () banked
   949  0009A8  6FC5               	movwf	(bsp_DetectKey@pBtn+1)& (0+255),b
   950                           
   951                           ; BSR set to: 0
   952                           ;remote_ctrl.c: 47: if (PORTBbits.RB4 == 0)
   953  0009AA  B881               	btfsc	3969,4,c	;volatile
   954  0009AC  D07F               	goto	l3419
   955                           
   956                           ; BSR set to: 0
   957                           ;remote_ctrl.c: 48: {
   958                           ;remote_ctrl.c: 49: if (pBtn->Count < 2)
   959  0009AE  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
   960  0009B2  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
   961  0009B6  0E02               	movlw	2
   962  0009B8  60DF               	cpfslt	indf2,c
   963  0009BA  D007               	goto	l3401
   964                           
   965                           ; BSR set to: 0
   966                           ;remote_ctrl.c: 50: {
   967                           ;remote_ctrl.c: 51: pBtn->Count = 2;
   968  0009BC  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
   969  0009C0  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
   970  0009C4  0E02               	movlw	2
   971  0009C6  6EDF               	movwf	indf2,c
   972                           
   973                           ;remote_ctrl.c: 52: }
   974  0009C8  0012               	return	
   975  0009CA                     l3401:
   976                           
   977                           ; BSR set to: 0
   978                           ;remote_ctrl.c: 53: else if(pBtn->Count < 2 * 2)
   979  0009CA  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
   980  0009CE  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
   981  0009D2  0E04               	movlw	4
   982  0009D4  60DF               	cpfslt	indf2,c
   983  0009D6  D006               	goto	l3405
   984                           
   985                           ; BSR set to: 0
   986                           ;remote_ctrl.c: 54: {
   987                           ;remote_ctrl.c: 55: pBtn->Count++;
   988  0009D8  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
   989  0009DC  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
   990  0009E0  2ADF               	incf	indf2,f,c
   991                           
   992                           ;remote_ctrl.c: 56: }
   993  0009E2  0012               	return	
   994  0009E4                     l3405:
   995                           
   996                           ; BSR set to: 0
   997                           ;remote_ctrl.c: 57: else
   998                           ;remote_ctrl.c: 58: {
   999                           ;remote_ctrl.c: 59: if (pBtn->State == 0)
  1000  0009E4  0100               	movlb	0	; () banked
  1001  0009E6  EE20 F005          	lfsr	2,5
  1002  0009EA  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1003  0009EC  26D9               	addwf	fsr2l,f,c
  1004  0009EE  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1005  0009F0  22DA               	addwfc	fsr2h,f,c
  1006  0009F2  50DF               	movf	indf2,w,c
  1007  0009F4  A4D8               	btfss	status,2,c
  1008  0009F6  D009               	goto	l688
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;remote_ctrl.c: 60: {
  1012                           ;remote_ctrl.c: 61: pBtn->State = 1;
  1013  0009F8  0100               	movlb	0	; () banked
  1014  0009FA  EE20 F005          	lfsr	2,5
  1015  0009FE  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1016  000A00  26D9               	addwf	fsr2l,f,c
  1017  000A02  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1018  000A04  22DA               	addwfc	fsr2h,f,c
  1019  000A06  0E01               	movlw	1
  1020  000A08  6EDF               	movwf	indf2,c
  1021  000A0A                     l688:
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;remote_ctrl.c: 65: }
  1025                           ;remote_ctrl.c: 67: if (pBtn->LongTime > 0)
  1026  000A0A  0100               	movlb	0	; () banked
  1027  000A0C  EE20 F003          	lfsr	2,3
  1028  000A10  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1029  000A12  26D9               	addwf	fsr2l,f,c
  1030  000A14  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1031  000A16  22DA               	addwfc	fsr2h,f,c
  1032  000A18  50DE               	movf	postinc2,w,c
  1033  000A1A  10DE               	iorwf	postinc2,w,c
  1034  000A1C  B4D8               	btfsc	status,2,c
  1035  000A1E  0012               	return	
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;remote_ctrl.c: 68: {
  1039                           ;remote_ctrl.c: 69: if (pBtn->LongCount < pBtn->LongTime)
  1040  000A20  0100               	movlb	0	; () banked
  1041  000A22  EE20 F003          	lfsr	2,3
  1042  000A26  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1043  000A28  26D9               	addwf	fsr2l,f,c
  1044  000A2A  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1045  000A2C  22DA               	addwfc	fsr2h,f,c
  1046  000A2E  0100               	movlb	0	; () banked
  1047  000A30  EE10 F001          	lfsr	1,1
  1048  000A34  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1049  000A36  26E1               	addwf	fsr1l,f,c
  1050  000A38  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1051  000A3A  22E2               	addwfc	fsr1h,f,c
  1052  000A3C  50DE               	movf	postinc2,w,c
  1053  000A3E  5CE6               	subwf	postinc1,w,c
  1054  000A40  50DE               	movf	postinc2,w,c
  1055  000A42  58E6               	subwfb	postinc1,w,c
  1056  000A44  B0D8               	btfsc	status,0,c
  1057  000A46  D00B               	goto	l3413
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;remote_ctrl.c: 70: {
  1061                           ;remote_ctrl.c: 72: if (++pBtn->LongCount == pBtn->LongTime)
  1062  000A48  0100               	movlb	0	; () banked
  1063  000A4A  EE20 F001          	lfsr	2,1
  1064  000A4E  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1065  000A50  26D9               	addwf	fsr2l,f,c
  1066  000A52  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1067  000A54  22DA               	addwfc	fsr2h,f,c
  1068  000A56  2ADE               	incf	postinc2,f,c
  1069  000A58  0E00               	movlw	0
  1070  000A5A  22DD               	addwfc	postdec2,f,c
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;remote_ctrl.c: 76: }
  1074                           ;remote_ctrl.c: 77: }
  1075                           
  1076                           ;remote_ctrl.c: 73: {
  1077  000A5C  0012               	return	
  1078  000A5E                     l3413:
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;remote_ctrl.c: 78: else
  1082                           ;remote_ctrl.c: 79: {
  1083                           ;remote_ctrl.c: 80: if (pBtn->RepeatSpeed > 0)
  1084  000A5E  0100               	movlb	0	; () banked
  1085  000A60  EE20 F006          	lfsr	2,6
  1086  000A64  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1087  000A66  26D9               	addwf	fsr2l,f,c
  1088  000A68  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1089  000A6A  22DA               	addwfc	fsr2h,f,c
  1090  000A6C  50DF               	movf	indf2,w,c
  1091  000A6E  B4D8               	btfsc	status,2,c
  1092  000A70  0012               	return	
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;remote_ctrl.c: 81: {
  1096                           ;remote_ctrl.c: 82: if (++pBtn->RepeatCount >= pBtn->RepeatSpeed)
  1097  000A72  0100               	movlb	0	; () banked
  1098  000A74  EE20 F006          	lfsr	2,6
  1099  000A78  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1100  000A7A  26D9               	addwf	fsr2l,f,c
  1101  000A7C  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1102  000A7E  22DA               	addwfc	fsr2h,f,c
  1103  000A80  0100               	movlb	0	; () banked
  1104  000A82  EE10 F007          	lfsr	1,7
  1105  000A86  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1106  000A88  26E1               	addwf	fsr1l,f,c
  1107  000A8A  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1108  000A8C  22E2               	addwfc	fsr1h,f,c
  1109  000A8E  2AE7               	incf	indf1,f,c
  1110  000A90  50DE               	movf	postinc2,w,c
  1111  000A92  5CE6               	subwf	postinc1,w,c
  1112  000A94  A0D8               	btfss	status,0,c
  1113  000A96  0012               	return	
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;remote_ctrl.c: 83: {
  1117                           ;remote_ctrl.c: 84: pBtn->RepeatCount = 0;
  1118  000A98  0100               	movlb	0	; () banked
  1119  000A9A  EE20 F007          	lfsr	2,7
  1120  000A9E  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1121  000AA0  26D9               	addwf	fsr2l,f,c
  1122  000AA2  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1123  000AA4  22DA               	addwfc	fsr2h,f,c
  1124  000AA6  0E00               	movlw	0
  1125  000AA8  6EDF               	movwf	indf2,c
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;remote_ctrl.c: 87: }
  1129                           ;remote_ctrl.c: 88: }
  1130                           ;remote_ctrl.c: 89: }
  1131                           ;remote_ctrl.c: 90: }
  1132                           ;remote_ctrl.c: 91: }
  1133                           ;remote_ctrl.c: 92: }
  1134                           
  1135                           ; BSR set to: 0
  1136                           
  1137                           ; BSR set to: 0
  1138                           
  1139                           ; BSR set to: 0
  1140                           
  1141                           ; BSR set to: 0
  1142                           
  1143                           ; BSR set to: 0
  1144  000AAA  0012               	return	
  1145  000AAC                     l3419:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;remote_ctrl.c: 93: else
  1149                           ;remote_ctrl.c: 94: {
  1150                           ;remote_ctrl.c: 95: if(pBtn->Count > 2)
  1151  000AAC  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
  1152  000AB0  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
  1153  000AB4  0E02               	movlw	2
  1154  000AB6  64DF               	cpfsgt	indf2,c
  1155  000AB8  D007               	goto	l3423
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;remote_ctrl.c: 96: {
  1159                           ;remote_ctrl.c: 97: pBtn->Count = 2;
  1160  000ABA  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
  1161  000ABE  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
  1162  000AC2  0E02               	movlw	2
  1163  000AC4  6EDF               	movwf	indf2,c
  1164                           
  1165                           ;remote_ctrl.c: 98: }
  1166  000AC6  D04E               	goto	l697
  1167  000AC8                     l3423:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;remote_ctrl.c: 99: else if(pBtn->Count != 0)
  1171  000AC8  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
  1172  000ACC  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
  1173  000AD0  50DF               	movf	indf2,w,c
  1174  000AD2  B4D8               	btfsc	status,2,c
  1175  000AD4  D006               	goto	l3427
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;remote_ctrl.c: 100: {
  1179                           ;remote_ctrl.c: 101: pBtn->Count--;
  1180  000AD6  C0C4  FFD9         	movff	bsp_DetectKey@pBtn,fsr2l
  1181  000ADA  C0C5  FFDA         	movff	bsp_DetectKey@pBtn+1,fsr2h
  1182  000ADE  06DF               	decf	indf2,f,c
  1183                           
  1184                           ;remote_ctrl.c: 102: }
  1185  000AE0  D041               	goto	l697
  1186  000AE2                     l3427:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;remote_ctrl.c: 103: else
  1190                           ;remote_ctrl.c: 104: {
  1191                           ;remote_ctrl.c: 105: if (pBtn->State == 1)
  1192  000AE2  0100               	movlb	0	; () banked
  1193  000AE4  EE20 F005          	lfsr	2,5
  1194  000AE8  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1195  000AEA  26D9               	addwf	fsr2l,f,c
  1196  000AEC  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1197  000AEE  22DA               	addwfc	fsr2h,f,c
  1198  000AF0  04DE               	decf	postinc2,w,c
  1199  000AF2  A4D8               	btfss	status,2,c
  1200  000AF4  D037               	goto	l697
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;remote_ctrl.c: 106: {
  1204                           ;remote_ctrl.c: 107: pBtn->State = 0;
  1205  000AF6  0100               	movlb	0	; () banked
  1206  000AF8  EE20 F005          	lfsr	2,5
  1207  000AFC  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1208  000AFE  26D9               	addwf	fsr2l,f,c
  1209  000B00  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1210  000B02  22DA               	addwfc	fsr2h,f,c
  1211  000B04  0E00               	movlw	0
  1212  000B06  6EDF               	movwf	indf2,c
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;remote_ctrl.c: 108: if (pBtn->LongCount < pBtn->LongTime)
  1216  000B08  0100               	movlb	0	; () banked
  1217  000B0A  EE20 F003          	lfsr	2,3
  1218  000B0E  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1219  000B10  26D9               	addwf	fsr2l,f,c
  1220  000B12  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1221  000B14  22DA               	addwfc	fsr2h,f,c
  1222  000B16  0100               	movlb	0	; () banked
  1223  000B18  EE10 F001          	lfsr	1,1
  1224  000B1C  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1225  000B1E  26E1               	addwf	fsr1l,f,c
  1226  000B20  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1227  000B22  22E2               	addwfc	fsr1h,f,c
  1228  000B24  50DE               	movf	postinc2,w,c
  1229  000B26  5CE6               	subwf	postinc1,w,c
  1230  000B28  50DE               	movf	postinc2,w,c
  1231  000B2A  58E6               	subwfb	postinc1,w,c
  1232  000B2C  B0D8               	btfsc	status,0,c
  1233  000B2E  D00E               	goto	l3449
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;remote_ctrl.c: 109: {
  1237                           ;remote_ctrl.c: 110: if(SysRunData.RemoteCtrlSta == LOCK)
  1238  000B30  5005               	movf	_SysRunData+3,w,c
  1239  000B32  A4D8               	btfss	status,2,c
  1240  000B34  D005               	goto	l3441
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;remote_ctrl.c: 111: {
  1244                           ;remote_ctrl.c: 112: SysRunData.RemoteCtrlSta = UNLOCK;
  1245  000B36  0E01               	movlw	1
  1246  000B38  6E05               	movwf	_SysRunData+3,c
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;remote_ctrl.c: 113: SysRunData.PedalRunFlag |= (1<<0);
  1250  000B3A  801A               	bsf	_SysRunData+24,0,c
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;remote_ctrl.c: 114: SysRunData.PedalRunFlag |= (1<<1);
  1254  000B3C  821A               	bsf	_SysRunData+24,1,c
  1255                           
  1256                           ;remote_ctrl.c: 115: }
  1257  000B3E  D006               	goto	l3449
  1258  000B40                     l3441:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;remote_ctrl.c: 116: else
  1262                           ;remote_ctrl.c: 117: {
  1263                           ;remote_ctrl.c: 118: SysRunData.RemoteCtrlSta = LOCK;
  1264  000B40  0E00               	movlw	0
  1265  000B42  6E05               	movwf	_SysRunData+3,c
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;remote_ctrl.c: 119: SysRunData.PedalRunFlag &= ~(1<<0);
  1269  000B44  901A               	bcf	_SysRunData+24,0,c
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;remote_ctrl.c: 120: SysRunData.PedalRunFlag &= ~(1<<1);
  1273  000B46  921A               	bcf	_SysRunData+24,1,c
  1274  000B48  D001               	goto	l3449
  1275                           
  1276                           ; BSR set to: 0
  1277  000B4A  D000               	goto	l3449
  1278  000B4C                     l3449:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;remote_ctrl.c: 124: else
  1282                           ;remote_ctrl.c: 125: {
  1283                           ;remote_ctrl.c: 126: pBtn->LongCount = 0;
  1284  000B4C  0100               	movlb	0	; () banked
  1285  000B4E  EE20 F001          	lfsr	2,1
  1286  000B52  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1287  000B54  26D9               	addwf	fsr2l,f,c
  1288  000B56  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1289  000B58  22DA               	addwfc	fsr2h,f,c
  1290  000B5A  0E00               	movlw	0
  1291  000B5C  6EDE               	movwf	postinc2,c
  1292  000B5E  0E00               	movlw	0
  1293  000B60  6EDD               	movwf	postdec2,c
  1294                           
  1295                           ; BSR set to: 0
  1296                           
  1297                           ; BSR set to: 0
  1298  000B62  D000               	goto	l697
  1299  000B64                     l697:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;remote_ctrl.c: 127: }
  1303                           ;remote_ctrl.c: 128: }
  1304                           ;remote_ctrl.c: 129: }
  1305                           ;remote_ctrl.c: 132: pBtn->RepeatCount = 0;
  1306  000B64  0100               	movlb	0	; () banked
  1307  000B66  EE20 F007          	lfsr	2,7
  1308  000B6A  51C4               	movf	bsp_DetectKey@pBtn& (0+255),w,b
  1309  000B6C  26D9               	addwf	fsr2l,f,c
  1310  000B6E  51C5               	movf	(bsp_DetectKey@pBtn+1)& (0+255),w,b
  1311  000B70  22DA               	addwfc	fsr2h,f,c
  1312  000B72  0E00               	movlw	0
  1313  000B74  6EDF               	movwf	indf2,c
  1314  000B76  0012               	return	
  1315                           
  1316                           ; BSR set to: 0
  1317                           
  1318                           ; BSR set to: 0
  1319  000B78  0012               	return		;funcret
  1320  000B7A                     __end_of_bsp_DetectKey:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           prodh	equ	0xFF4
  1327                           prodl	equ	0xFF3
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           indf1	equ	0xFE7
  1331                           postinc1	equ	0xFE6
  1332                           fsr1h	equ	0xFE2
  1333                           fsr1l	equ	0xFE1
  1334                           indf2	equ	0xFDF
  1335                           postinc2	equ	0xFDE
  1336                           postdec2	equ	0xFDD
  1337                           fsr2h	equ	0xFDA
  1338                           fsr2l	equ	0xFD9
  1339                           status	equ	0xFD8
  1340                           
  1341 ;; *************** function _Pedal_Process *****************
  1342 ;; Defined at:
  1343 ;;		line 143 in file "source/app.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;		None               void
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    8
  1364 ;; This function calls:
  1365 ;;		_CAN_TX_TestInfo
  1366 ;;		_Pedal_Back
  1367 ;;		_Pedal_Out
  1368 ;;		_Pedal_Stop
  1369 ;;		_SysNormalWaitSleep
  1370 ;; This function is called by:
  1371 ;;		_AppTask_PollHandler
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text5
  1376  0000E6                     __ptext5:
  1377                           	opt stack 0
  1378  0000E6                     _Pedal_Process:
  1379                           	opt stack 21
  1380                           
  1381                           ;app.c: 147: if((SysRunData.PedalRunFlag & (0x01u)) == (0x01u))
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;incstack = 0
  1385  0000E6  B01A               	btfsc	_SysRunData+24,0,c
  1386  0000E8  D0A5               	goto	l3755
  1387  0000EA  D186               	goto	l3863
  1388                           
  1389                           ;app.c: 148: {
  1390                           ;app.c: 149: switch(SysRunData.PedalSta[0])
  1391  0000EC  D0A3               	goto	l3755
  1392  0000EE                     l3665:
  1393                           
  1394                           ;app.c: 152: if(SysRunData.PedalRunCnt[0] > 10)
  1395  0000EE  5007               	movf	_SysRunData+5,w,c
  1396  0000F0  E104               	bnz	u3480
  1397  0000F2  0E0B               	movlw	11
  1398  0000F4  5C06               	subwf	_SysRunData+4,w,c
  1399  0000F6  A0D8               	btfss	status,0,c
  1400  0000F8  D199               	goto	l175
  1401  0000FA                     u3480:
  1402                           
  1403                           ;app.c: 153: {
  1404                           ;app.c: 154: if(SysRunData.ADC_Buf[0x03] > 985)
  1405  0000FA  0EDA               	movlw	218
  1406  0000FC  5C18               	subwf	_SysRunData+22,w,c
  1407  0000FE  0E03               	movlw	3
  1408  000100  5819               	subwfb	_SysRunData+23,w,c
  1409  000102  A0D8               	btfss	status,0,c
  1410  000104  D193               	goto	l175
  1411                           
  1412                           ;app.c: 155: {
  1413                           ;app.c: 156: Pedal_Stop(0);
  1414  000106  0E00               	movlw	0
  1415  000108  EC7D  F00B         	call	_Pedal_Stop
  1416                           
  1417                           ;app.c: 157: SysRunData.PedalRunCnt[0] = 0;
  1418  00010C  0E00               	movlw	0
  1419  00010E  6E07               	movwf	_SysRunData+5,c
  1420  000110  0E00               	movlw	0
  1421  000112  6E06               	movwf	_SysRunData+4,c
  1422                           
  1423                           ;app.c: 158: SysRunData.PedalWaitSleepCnt = 0;
  1424  000114  0E00               	movlw	0
  1425  000116  6E0B               	movwf	_SysRunData+9,c
  1426  000118  0E00               	movlw	0
  1427  00011A  6E0A               	movwf	_SysRunData+8,c
  1428                           
  1429                           ;app.c: 159: SysRunData.PedalRunCnt[0] = 0;
  1430  00011C  0E00               	movlw	0
  1431  00011E  6E07               	movwf	_SysRunData+5,c
  1432  000120  0E00               	movlw	0
  1433  000122  6E06               	movwf	_SysRunData+4,c
  1434                           
  1435                           ;app.c: 160: SysRunData.PedalSta[0] = PEDAL_ERROR_FAST_OUT;
  1436  000124  0E07               	movlw	7
  1437  000126  D071               	goto	L5
  1438                           
  1439                           ;app.c: 161: }
  1440                           ;app.c: 162: }
  1441                           ;app.c: 163: break;
  1442  000128  D181               	goto	l175
  1443  00012A                     l3679:
  1444                           
  1445                           ;app.c: 165: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1446  00012A  0E01               	movlw	1
  1447  00012C  D06E               	goto	L5
  1448  00012E                     l3681:
  1449                           
  1450                           ;app.c: 168: if(SysRunData.PedalRunCnt[0] < 350)
  1451  00012E  0E5E               	movlw	94
  1452  000130  5C06               	subwf	_SysRunData+4,w,c
  1453  000132  0E01               	movlw	1
  1454  000134  5807               	subwfb	_SysRunData+5,w,c
  1455  000136  B0D8               	btfsc	status,0,c
  1456  000138  D045               	goto	l3719
  1457                           
  1458                           ;app.c: 169: {
  1459                           ;app.c: 170: Pedal_Out(0);
  1460  00013A  0E00               	movlw	0
  1461  00013C  EC91  F00B         	call	_Pedal_Out
  1462                           
  1463                           ;app.c: 171: SysRunData.PedalRunCnt[0]++;
  1464  000140  4A06               	infsnz	_SysRunData+4,f,c
  1465  000142  2A07               	incf	_SysRunData+5,f,c
  1466                           
  1467                           ;app.c: 172: SysRunData.PedalWaitSleepCnt = 0;
  1468  000144  0E00               	movlw	0
  1469  000146  6E0B               	movwf	_SysRunData+9,c
  1470  000148  0E00               	movlw	0
  1471  00014A  6E0A               	movwf	_SysRunData+8,c
  1472                           
  1473                           ;app.c: 174: if(SysRunData.PedalRunCnt[0] > 50)
  1474  00014C  5007               	movf	_SysRunData+5,w,c
  1475  00014E  E104               	bnz	u3510
  1476  000150  0E33               	movlw	51
  1477  000152  5C06               	subwf	_SysRunData+4,w,c
  1478  000154  A0D8               	btfss	status,0,c
  1479  000156  D16A               	goto	l175
  1480  000158                     u3510:
  1481                           
  1482                           ;app.c: 175: {
  1483                           ;app.c: 176: if(SysRunData.ADC_Buf[0x03] > 985)
  1484  000158  0EDA               	movlw	218
  1485  00015A  5C18               	subwf	_SysRunData+22,w,c
  1486  00015C  0E03               	movlw	3
  1487  00015E  5819               	subwfb	_SysRunData+23,w,c
  1488  000160  A0D8               	btfss	status,0,c
  1489  000162  D164               	goto	l175
  1490                           
  1491                           ;app.c: 177: {
  1492                           ;app.c: 178: if(SysRunData.PedalRunCnt[0] > 120)
  1493  000164  5007               	movf	_SysRunData+5,w,c
  1494  000166  E104               	bnz	u3530
  1495  000168  0E79               	movlw	121
  1496  00016A  5C06               	subwf	_SysRunData+4,w,c
  1497  00016C  A0D8               	btfss	status,0,c
  1498  00016E  D00D               	goto	l3703
  1499  000170                     u3530:
  1500                           
  1501                           ;app.c: 179: {
  1502                           ;app.c: 180: Pedal_Stop(0);
  1503  000170  0E00               	movlw	0
  1504  000172  EC7D  F00B         	call	_Pedal_Stop
  1505                           
  1506                           ;app.c: 181: SysRunData.PedalRunCnt[0] = 0;
  1507  000176  0E00               	movlw	0
  1508  000178  6E07               	movwf	_SysRunData+5,c
  1509  00017A  0E00               	movlw	0
  1510  00017C  6E06               	movwf	_SysRunData+4,c
  1511                           
  1512                           ;app.c: 182: SysRunData.PedalSta[0] = PEDAL_NORMAL_WAIT_BACK;
  1513  00017E  0E02               	movlw	2
  1514  000180  6E02               	movwf	_SysRunData,c
  1515                           
  1516                           ;app.c: 183: CAN_TX_TestInfo(INFO_ID_LEFT_PEDAL_OUT_NORMAL);
  1517  000182  0E00               	movlw	0
  1518  000184  ECE8  F007         	call	_CAN_TX_TestInfo
  1519                           
  1520                           ;app.c: 184: }
  1521  000188  D151               	goto	l175
  1522  00018A                     l3703:
  1523                           
  1524                           ;app.c: 185: else
  1525                           ;app.c: 186: {
  1526                           ;app.c: 187: if(SysRunData.PedalRunCnt[0] < (50 + 10))
  1527  00018A  5007               	movf	_SysRunData+5,w,c
  1528  00018C  E10D               	bnz	l3711
  1529  00018E  0E3C               	movlw	60
  1530  000190  5C06               	subwf	_SysRunData+4,w,c
  1531  000192  B0D8               	btfsc	status,0,c
  1532  000194  D009               	goto	l3711
  1533                           
  1534                           ;app.c: 188: {
  1535                           ;app.c: 189: Pedal_Stop(0);
  1536  000196  0E00               	movlw	0
  1537  000198  EC7D  F00B         	call	_Pedal_Stop
  1538                           
  1539                           ;app.c: 190: SysRunData.PedalRunCnt[0] = 0;
  1540  00019C  0E00               	movlw	0
  1541  00019E  6E07               	movwf	_SysRunData+5,c
  1542  0001A0  0E00               	movlw	0
  1543  0001A2  6E06               	movwf	_SysRunData+4,c
  1544                           
  1545                           ;app.c: 191: SysRunData.PedalSta[0] = PEDAL_NORMAL_WAIT_BACK;
  1546  0001A4  0E02               	movlw	2
  1547  0001A6  D031               	goto	L5
  1548  0001A8                     l3711:
  1549                           
  1550                           ;app.c: 193: else
  1551                           ;app.c: 194: {
  1552                           ;app.c: 195: Pedal_Stop(0);
  1553  0001A8  0E00               	movlw	0
  1554  0001AA  EC7D  F00B         	call	_Pedal_Stop
  1555                           
  1556                           ;app.c: 196: SysRunData.PedalRunCnt[0] = 0;
  1557  0001AE  0E00               	movlw	0
  1558  0001B0  6E07               	movwf	_SysRunData+5,c
  1559  0001B2  0E00               	movlw	0
  1560  0001B4  6E06               	movwf	_SysRunData+4,c
  1561                           
  1562                           ;app.c: 197: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
  1563  0001B6  0E04               	movlw	4
  1564  0001B8  6E02               	movwf	_SysRunData,c
  1565                           
  1566                           ;app.c: 198: Pedal_Back(0);
  1567  0001BA  0E00               	movlw	0
  1568  0001BC  ECA5  F00B         	call	_Pedal_Back
  1569  0001C0  D10C               	goto	l3853
  1570                           
  1571                           ;app.c: 200: }
  1572                           ;app.c: 201: }
  1573                           ;app.c: 202: }
  1574                           ;app.c: 203: }
  1575                           ;app.c: 204: }
  1576                           
  1577                           ;app.c: 199: SysRunData.PedalWaitSleepCnt = 0;
  1578  0001C2  D134               	goto	l175
  1579  0001C4                     l3719:
  1580                           
  1581                           ;app.c: 205: else
  1582                           ;app.c: 206: {
  1583                           ;app.c: 207: Pedal_Stop(0);
  1584  0001C4  0E00               	movlw	0
  1585  0001C6  EC7D  F00B         	call	_Pedal_Stop
  1586                           
  1587                           ;app.c: 208: SysRunData.PedalRunCnt[0] = 0;
  1588  0001CA  0E00               	movlw	0
  1589  0001CC  6E07               	movwf	_SysRunData+5,c
  1590  0001CE  0E00               	movlw	0
  1591  0001D0  6E06               	movwf	_SysRunData+4,c
  1592                           
  1593                           ;app.c: 209: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
  1594  0001D2  0E08               	movlw	8
  1595  0001D4  D01A               	goto	L5
  1596                           
  1597                           ;app.c: 210: }
  1598                           ;app.c: 211: break;
  1599  0001D6  D12A               	goto	l175
  1600  0001D8                     l3725:
  1601                           
  1602                           ;app.c: 214: SysRunData.PedalRunCnt[0]++;
  1603  0001D8  4A06               	infsnz	_SysRunData+4,f,c
  1604  0001DA  2A07               	incf	_SysRunData+5,f,c
  1605                           
  1606                           ;app.c: 215: if(SysRunData.PedalRunCnt[0] > 50)
  1607  0001DC  5007               	movf	_SysRunData+5,w,c
  1608  0001DE  E104               	bnz	u3550
  1609  0001E0  0E33               	movlw	51
  1610  0001E2  5C06               	subwf	_SysRunData+4,w,c
  1611  0001E4  A0D8               	btfss	status,0,c
  1612  0001E6  D122               	goto	l175
  1613  0001E8                     u3550:
  1614                           
  1615                           ;app.c: 216: {
  1616                           ;app.c: 217: if(SysRunData.ADC_Buf[0x03] > 985)
  1617  0001E8  0EDA               	movlw	218
  1618  0001EA  5C18               	subwf	_SysRunData+22,w,c
  1619  0001EC  0E03               	movlw	3
  1620  0001EE  5819               	subwfb	_SysRunData+23,w,c
  1621  0001F0  A0D8               	btfss	status,0,c
  1622  0001F2  D11C               	goto	l175
  1623                           
  1624                           ;app.c: 218: {
  1625                           ;app.c: 219: Pedal_Stop(0);
  1626  0001F4  0E00               	movlw	0
  1627  0001F6  EC7D  F00B         	call	_Pedal_Stop
  1628                           
  1629                           ;app.c: 220: SysRunData.PedalRunCnt[0] = 0;
  1630  0001FA  0E00               	movlw	0
  1631  0001FC  6E07               	movwf	_SysRunData+5,c
  1632  0001FE  0E00               	movlw	0
  1633  000200  6E06               	movwf	_SysRunData+4,c
  1634                           
  1635                           ;app.c: 221: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
  1636  000202  0E04               	movlw	4
  1637  000204  D002               	goto	L5
  1638                           
  1639                           ;app.c: 222: }
  1640                           ;app.c: 223: }
  1641                           ;app.c: 224: break;
  1642  000206  D112               	goto	l175
  1643                           
  1644                           ;app.c: 225: case PEDAL_STALL_WAIT_BACK:
  1645  000208  D0CE               	goto	L13
  1646  00020A                     L5:
  1647  00020A  6E02               	movwf	_SysRunData,c
  1648                           
  1649                           ;app.c: 229: break;
  1650  00020C  D10F               	goto	l175
  1651  00020E                     l3739:
  1652                           
  1653                           ;app.c: 231: if(SysRunData.PedalRunCnt[0] < 350)
  1654  00020E  0E5E               	movlw	94
  1655  000210  5C06               	subwf	_SysRunData+4,w,c
  1656  000212  0E01               	movlw	1
  1657  000214  5807               	subwfb	_SysRunData+5,w,c
  1658  000216  B0D8               	btfsc	status,0,c
  1659  000218  D006               	goto	l3747
  1660                           
  1661                           ;app.c: 232: {
  1662                           ;app.c: 233: Pedal_Out(0);
  1663  00021A  0E00               	movlw	0
  1664  00021C  EC91  F00B         	call	_Pedal_Out
  1665                           
  1666                           ;app.c: 234: SysRunData.PedalRunCnt[0]++;
  1667  000220  4A06               	infsnz	_SysRunData+4,f,c
  1668  000222  2A07               	incf	_SysRunData+5,f,c
  1669  000224  D0DA               	goto	l3853
  1670  000226                     l3747:
  1671                           
  1672                           ;app.c: 237: else
  1673                           ;app.c: 238: {
  1674                           ;app.c: 239: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
  1675  000226  0E08               	movlw	8
  1676  000228  6E02               	movwf	_SysRunData,c
  1677                           
  1678                           ;app.c: 240: Pedal_Stop(0);
  1679  00022A  0E00               	movlw	0
  1680  00022C  EC7D  F00B         	call	_Pedal_Stop
  1681  000230  D0DE               	goto	l3859
  1682                           
  1683                           ;app.c: 246: }
  1684                           
  1685                           ;app.c: 245: break;
  1686                           
  1687                           ;app.c: 244: default:
  1688                           
  1689                           ;app.c: 242: }
  1690                           ;app.c: 243: break;
  1691                           
  1692                           ;app.c: 241: SysRunData.PedalRunCnt[0] = 0;
  1693  000232  D0FC               	goto	l175
  1694  000234                     l3755:
  1695  000234  5002               	movf	_SysRunData,w,c
  1696                           
  1697                           ; Switch size 1, requested type "space"
  1698                           ; Number of cases is 6, Range of values is 0 to 9
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte           19    10 (average)
  1702                           ;	Chosen strategy is simple_byte
  1703  000236  0A00               	xorlw	0	; case 0
  1704  000238  B4D8               	btfsc	status,2,c
  1705  00023A  D779               	goto	l3681
  1706  00023C  0A01               	xorlw	1	; case 1
  1707  00023E  B4D8               	btfsc	status,2,c
  1708  000240  D756               	goto	l3665
  1709  000242  0A02               	xorlw	2	; case 3
  1710  000244  B4D8               	btfsc	status,2,c
  1711  000246  D0AF               	goto	L13
  1712  000248  0A07               	xorlw	7	; case 4
  1713  00024A  B4D8               	btfsc	status,2,c
  1714  00024C  D7C5               	goto	l3725
  1715  00024E  0A02               	xorlw	2	; case 6
  1716  000250  B4D8               	btfsc	status,2,c
  1717  000252  D76B               	goto	l3679
  1718  000254  0A0F               	xorlw	15	; case 9
  1719  000256  B4D8               	btfsc	status,2,c
  1720  000258  D7DA               	goto	l3739
  1721                           
  1722                           ;app.c: 247: }
  1723  00025A  D0E8               	goto	l175
  1724                           
  1725                           ;app.c: 248: else
  1726                           ;app.c: 249: {
  1727                           ;app.c: 250: switch(SysRunData.PedalSta[0])
  1728  00025C  D0CD               	goto	l3863
  1729  00025E                     l3757:
  1730                           
  1731                           ;app.c: 253: if(++SysRunData.PedalWaitBackCnt[0] >= 0)
  1732  00025E  4A0C               	infsnz	_SysRunData+10,f,c
  1733  000260  2A0D               	incf	_SysRunData+11,f,c
  1734                           
  1735                           ;app.c: 254: {
  1736                           ;app.c: 255: SysRunData.PedalWaitBackCnt[0] = 0;
  1737  000262  0E00               	movlw	0
  1738  000264  6E0D               	movwf	_SysRunData+11,c
  1739  000266  0E00               	movlw	0
  1740  000268  6E0C               	movwf	_SysRunData+10,c
  1741                           
  1742                           ;app.c: 256: SysRunData.PedalWaitSleepCnt = 0;
  1743  00026A  0E00               	movlw	0
  1744  00026C  6E0B               	movwf	_SysRunData+9,c
  1745  00026E  0E00               	movlw	0
  1746  000270  6E0A               	movwf	_SysRunData+8,c
  1747  000272  D75B               	goto	l3679
  1748                           
  1749                           ;app.c: 258: }
  1750                           ;app.c: 259: break;
  1751                           
  1752                           ;app.c: 257: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1753  000274  D0DB               	goto	l175
  1754  000276                     l3765:
  1755                           
  1756                           ;app.c: 261: if(SysRunData.PedalRunCnt[0] > 10)
  1757  000276  5007               	movf	_SysRunData+5,w,c
  1758  000278  E104               	bnz	u3580
  1759  00027A  0E0B               	movlw	11
  1760  00027C  5C06               	subwf	_SysRunData+4,w,c
  1761  00027E  A0D8               	btfss	status,0,c
  1762  000280  D0D5               	goto	l175
  1763  000282                     u3580:
  1764                           
  1765                           ;app.c: 262: {
  1766                           ;app.c: 263: if(SysRunData.ADC_Buf[0x03] > 985)
  1767  000282  0EDA               	movlw	218
  1768  000284  5C18               	subwf	_SysRunData+22,w,c
  1769  000286  0E03               	movlw	3
  1770  000288  5819               	subwfb	_SysRunData+23,w,c
  1771  00028A  A0D8               	btfss	status,0,c
  1772  00028C  D0CF               	goto	l175
  1773                           
  1774                           ;app.c: 264: {
  1775                           ;app.c: 265: Pedal_Stop(0);
  1776  00028E  0E00               	movlw	0
  1777  000290  EC7D  F00B         	call	_Pedal_Stop
  1778                           
  1779                           ;app.c: 266: SysRunData.PedalRunCnt[0] = 0;
  1780  000294  0E00               	movlw	0
  1781  000296  6E07               	movwf	_SysRunData+5,c
  1782  000298  0E00               	movlw	0
  1783  00029A  6E06               	movwf	_SysRunData+4,c
  1784                           
  1785                           ;app.c: 267: SysRunData.PedalWaitSleepCnt = 0;
  1786  00029C  0E00               	movlw	0
  1787  00029E  6E0B               	movwf	_SysRunData+9,c
  1788  0002A0  0E00               	movlw	0
  1789  0002A2  6E0A               	movwf	_SysRunData+8,c
  1790                           
  1791                           ;app.c: 268: SysRunData.PedalRunCnt[0] = 0;
  1792  0002A4  0E00               	movlw	0
  1793  0002A6  6E07               	movwf	_SysRunData+5,c
  1794  0002A8  0E00               	movlw	0
  1795  0002AA  6E06               	movwf	_SysRunData+4,c
  1796                           
  1797                           ;app.c: 269: SysRunData.PedalSta[0] = PEDAL_ERROR_FAST_BACK;
  1798  0002AC  0E06               	movlw	6
  1799  0002AE  D7AD               	goto	L5
  1800                           
  1801                           ;app.c: 270: }
  1802                           ;app.c: 271: }
  1803                           ;app.c: 272: break;
  1804  0002B0  D0BD               	goto	l175
  1805                           
  1806                           ;app.c: 273: case PEDAL_ERROR_FAST_OUT:
  1807  0002B2  D03C               	goto	l3811
  1808  0002B4                     l3781:
  1809                           
  1810                           ;app.c: 277: if(SysRunData.PedalRunCnt[0] < 350)
  1811  0002B4  0E5E               	movlw	94
  1812  0002B6  5C06               	subwf	_SysRunData+4,w,c
  1813  0002B8  0E01               	movlw	1
  1814  0002BA  5807               	subwfb	_SysRunData+5,w,c
  1815  0002BC  B0D8               	btfsc	status,0,c
  1816  0002BE  D045               	goto	l3819
  1817                           
  1818                           ;app.c: 278: {
  1819                           ;app.c: 279: Pedal_Back(0);
  1820  0002C0  0E00               	movlw	0
  1821  0002C2  ECA5  F00B         	call	_Pedal_Back
  1822                           
  1823                           ;app.c: 280: SysRunData.PedalRunCnt[0]++;
  1824  0002C6  4A06               	infsnz	_SysRunData+4,f,c
  1825  0002C8  2A07               	incf	_SysRunData+5,f,c
  1826                           
  1827                           ;app.c: 281: SysRunData.PedalWaitSleepCnt = 0;
  1828  0002CA  0E00               	movlw	0
  1829  0002CC  6E0B               	movwf	_SysRunData+9,c
  1830  0002CE  0E00               	movlw	0
  1831  0002D0  6E0A               	movwf	_SysRunData+8,c
  1832                           
  1833                           ;app.c: 283: if(SysRunData.PedalRunCnt[0] > 50)
  1834  0002D2  5007               	movf	_SysRunData+5,w,c
  1835  0002D4  E104               	bnz	u3610
  1836  0002D6  0E33               	movlw	51
  1837  0002D8  5C06               	subwf	_SysRunData+4,w,c
  1838  0002DA  A0D8               	btfss	status,0,c
  1839  0002DC  D0A7               	goto	l175
  1840  0002DE                     u3610:
  1841                           
  1842                           ;app.c: 284: {
  1843                           ;app.c: 285: if(SysRunData.ADC_Buf[0x03] > 985)
  1844  0002DE  0EDA               	movlw	218
  1845  0002E0  5C18               	subwf	_SysRunData+22,w,c
  1846  0002E2  0E03               	movlw	3
  1847  0002E4  5819               	subwfb	_SysRunData+23,w,c
  1848  0002E6  A0D8               	btfss	status,0,c
  1849  0002E8  D0A1               	goto	l175
  1850                           
  1851                           ;app.c: 286: {
  1852                           ;app.c: 287: if(SysRunData.PedalRunCnt[0] > 120)
  1853  0002EA  5007               	movf	_SysRunData+5,w,c
  1854  0002EC  E104               	bnz	u3630
  1855  0002EE  0E79               	movlw	121
  1856  0002F0  5C06               	subwf	_SysRunData+4,w,c
  1857  0002F2  A0D8               	btfss	status,0,c
  1858  0002F4  D011               	goto	l3805
  1859  0002F6                     u3630:
  1860                           
  1861                           ;app.c: 288: {
  1862                           ;app.c: 289: Pedal_Stop(0);
  1863  0002F6  0E00               	movlw	0
  1864  0002F8  EC7D  F00B         	call	_Pedal_Stop
  1865                           
  1866                           ;app.c: 290: SysRunData.PedalRunCnt[0] = 0;
  1867  0002FC  0E00               	movlw	0
  1868  0002FE  6E07               	movwf	_SysRunData+5,c
  1869  000300  0E00               	movlw	0
  1870  000302  6E06               	movwf	_SysRunData+4,c
  1871                           
  1872                           ;app.c: 291: SysRunData.PedalWaitSleepCnt = 0;
  1873  000304  0E00               	movlw	0
  1874  000306  6E0B               	movwf	_SysRunData+9,c
  1875  000308  0E00               	movlw	0
  1876  00030A  6E0A               	movwf	_SysRunData+8,c
  1877                           
  1878                           ;app.c: 292: SysRunData.PedalSta[0] = PEDAL_UP_LIMIT;
  1879  00030C  0E00               	movlw	0
  1880  00030E  6E02               	movwf	_SysRunData,c
  1881                           
  1882                           ;app.c: 293: CAN_TX_TestInfo(INFO_ID_LEFT_PEDAL_BACK_NORMAL);
  1883  000310  0E02               	movlw	2
  1884  000312  ECE8  F007         	call	_CAN_TX_TestInfo
  1885                           
  1886                           ;app.c: 294: }
  1887  000316  D08A               	goto	l175
  1888  000318                     l3805:
  1889                           
  1890                           ;app.c: 295: else
  1891                           ;app.c: 296: {
  1892                           ;app.c: 297: if(SysRunData.PedalRunCnt[0] < (50 + 10))
  1893  000318  5007               	movf	_SysRunData+5,w,c
  1894  00031A  E10A               	bnz	l3813
  1895  00031C  0E3C               	movlw	60
  1896  00031E  5C06               	subwf	_SysRunData+4,w,c
  1897  000320  B0D8               	btfsc	status,0,c
  1898  000322  D006               	goto	l3813
  1899                           
  1900                           ;app.c: 298: {
  1901                           ;app.c: 299: Pedal_Stop(0);
  1902  000324  0E00               	movlw	0
  1903  000326  EC7D  F00B         	call	_Pedal_Stop
  1904  00032A  D043               	goto	l3843
  1905  00032C                     l3811:
  1906                           
  1907                           ;app.c: 301: SysRunData.PedalSta[0] = PEDAL_UP_LIMIT;
  1908  00032C  0E00               	movlw	0
  1909  00032E  D76D               	goto	L5
  1910  000330                     l3813:
  1911                           
  1912                           ;app.c: 303: else
  1913                           ;app.c: 304: {
  1914                           ;app.c: 305: Pedal_Stop(0);
  1915  000330  0E00               	movlw	0
  1916  000332  EC7D  F00B         	call	_Pedal_Stop
  1917                           
  1918                           ;app.c: 306: SysRunData.PedalRunCnt[0] = 0;
  1919  000336  0E00               	movlw	0
  1920  000338  6E07               	movwf	_SysRunData+5,c
  1921  00033A  0E00               	movlw	0
  1922  00033C  6E06               	movwf	_SysRunData+4,c
  1923                           
  1924                           ;app.c: 307: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_OUT;
  1925  00033E  0E05               	movlw	5
  1926  000340  6E02               	movwf	_SysRunData,c
  1927                           
  1928                           ;app.c: 308: Pedal_Out(0);
  1929  000342  0E00               	movlw	0
  1930  000344  EC91  F00B         	call	_Pedal_Out
  1931                           
  1932                           ;app.c: 309: }
  1933                           ;app.c: 310: }
  1934                           ;app.c: 311: }
  1935                           ;app.c: 312: }
  1936                           ;app.c: 313: }
  1937  000348  D071               	goto	l175
  1938  00034A                     l3819:
  1939                           
  1940                           ;app.c: 314: else
  1941                           ;app.c: 315: {
  1942                           ;app.c: 316: Pedal_Stop(0);
  1943  00034A  0E00               	movlw	0
  1944  00034C  EC7D  F00B         	call	_Pedal_Stop
  1945                           
  1946                           ;app.c: 317: SysRunData.PedalRunCnt[0] = 0;
  1947  000350  0E00               	movlw	0
  1948  000352  6E07               	movwf	_SysRunData+5,c
  1949  000354  0E00               	movlw	0
  1950  000356  6E06               	movwf	_SysRunData+4,c
  1951                           
  1952                           ;app.c: 318: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  1953  000358  0E09               	movlw	9
  1954  00035A  D757               	goto	L5
  1955                           
  1956                           ;app.c: 319: }
  1957                           ;app.c: 320: break;
  1958  00035C  D067               	goto	l175
  1959  00035E                     l3825:
  1960                           
  1961                           ;app.c: 323: SysRunData.PedalRunCnt[0]++;
  1962  00035E  4A06               	infsnz	_SysRunData+4,f,c
  1963  000360  2A07               	incf	_SysRunData+5,f,c
  1964                           
  1965                           ;app.c: 324: if(SysRunData.PedalRunCnt[0] > 50)
  1966  000362  5007               	movf	_SysRunData+5,w,c
  1967  000364  E104               	bnz	u3650
  1968  000366  0E33               	movlw	51
  1969  000368  5C06               	subwf	_SysRunData+4,w,c
  1970  00036A  A0D8               	btfss	status,0,c
  1971  00036C  D05F               	goto	l175
  1972  00036E                     u3650:
  1973                           
  1974                           ;app.c: 325: {
  1975                           ;app.c: 326: if(SysRunData.ADC_Buf[0x03] > 985)
  1976  00036E  0EDA               	movlw	218
  1977  000370  5C18               	subwf	_SysRunData+22,w,c
  1978  000372  0E03               	movlw	3
  1979  000374  5819               	subwfb	_SysRunData+23,w,c
  1980  000376  A0D8               	btfss	status,0,c
  1981  000378  D059               	goto	l175
  1982                           
  1983                           ;app.c: 327: {
  1984                           ;app.c: 329: Pedal_Stop(0);
  1985  00037A  0E00               	movlw	0
  1986  00037C  EC7D  F00B         	call	_Pedal_Stop
  1987                           
  1988                           ;app.c: 330: SysRunData.PedalRunCnt[0] = 0;
  1989  000380  0E00               	movlw	0
  1990  000382  6E07               	movwf	_SysRunData+5,c
  1991  000384  0E00               	movlw	0
  1992  000386  6E06               	movwf	_SysRunData+4,c
  1993                           
  1994                           ;app.c: 331: SysRunData.PedalSta[0] = PEDAL_STALL_WAIT_BACK;
  1995  000388  0E03               	movlw	3
  1996  00038A  D73F               	goto	L5
  1997                           
  1998                           ;app.c: 332: }
  1999                           ;app.c: 333: }
  2000                           ;app.c: 334: break;
  2001  00038C  D04F               	goto	l175
  2002  00038E                     l3837:
  2003                           
  2004                           ;app.c: 336: SysRunData.PedalWaitSleepCnt = 0;
  2005  00038E  0E00               	movlw	0
  2006  000390  6E0B               	movwf	_SysRunData+9,c
  2007  000392  0E00               	movlw	0
  2008  000394  6E0A               	movwf	_SysRunData+8,c
  2009                           
  2010                           ;app.c: 337: if(++SysRunData.PedalWaitBackCnt[0] >= 1500)
  2011  000396  4A0C               	infsnz	_SysRunData+10,f,c
  2012  000398  2A0D               	incf	_SysRunData+11,f,c
  2013  00039A  0EDC               	movlw	220
  2014  00039C  5C0C               	subwf	_SysRunData+10,w,c
  2015  00039E  0E05               	movlw	5
  2016  0003A0  580D               	subwfb	_SysRunData+11,w,c
  2017  0003A2  A0D8               	btfss	status,0,c
  2018  0003A4  D043               	goto	l175
  2019  0003A6                     L13:
  2020                           
  2021                           ;app.c: 338: {
  2022                           ;app.c: 339: SysRunData.PedalWaitBackCnt[0] = 0;
  2023  0003A6  0E00               	movlw	0
  2024  0003A8  6E0D               	movwf	_SysRunData+11,c
  2025  0003AA  0E00               	movlw	0
  2026  0003AC  6E0C               	movwf	_SysRunData+10,c
  2027  0003AE  D6BD               	goto	l3679
  2028                           
  2029                           ;app.c: 341: }
  2030                           ;app.c: 342: break;
  2031                           
  2032                           ;app.c: 340: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  2033  0003B0  D03D               	goto	l175
  2034  0003B2                     l3843:
  2035                           
  2036                           ;app.c: 345: SysRunData.PedalRunCnt[0] = 0;
  2037  0003B2  0E00               	movlw	0
  2038  0003B4  6E07               	movwf	_SysRunData+5,c
  2039  0003B6  0E00               	movlw	0
  2040  0003B8  6E06               	movwf	_SysRunData+4,c
  2041  0003BA  D7B8               	goto	l3811
  2042  0003BC                     l3845:
  2043                           
  2044                           ;app.c: 349: if(SysRunData.PedalRunCnt[0] < 350)
  2045  0003BC  0E5E               	movlw	94
  2046  0003BE  5C06               	subwf	_SysRunData+4,w,c
  2047  0003C0  0E01               	movlw	1
  2048  0003C2  5807               	subwfb	_SysRunData+5,w,c
  2049  0003C4  B0D8               	btfsc	status,0,c
  2050  0003C6  D00E               	goto	l3855
  2051                           
  2052                           ;app.c: 350: {
  2053                           ;app.c: 351: Pedal_Back(0);
  2054  0003C8  0E00               	movlw	0
  2055  0003CA  ECA5  F00B         	call	_Pedal_Back
  2056                           
  2057                           ;app.c: 352: SysRunData.PedalRunCnt[0]++;
  2058  0003CE  4A06               	infsnz	_SysRunData+4,f,c
  2059  0003D0  2A07               	incf	_SysRunData+5,f,c
  2060                           
  2061                           ;app.c: 353: SysRunData.PedalWaitSleepCnt = 0;
  2062  0003D2  0E00               	movlw	0
  2063  0003D4  6E0B               	movwf	_SysRunData+9,c
  2064  0003D6  0E00               	movlw	0
  2065  0003D8  6E0A               	movwf	_SysRunData+8,c
  2066  0003DA                     l3853:
  2067                           
  2068                           ;app.c: 354: SysRunData.PedalWaitSleepCnt = 0;
  2069  0003DA  0E00               	movlw	0
  2070  0003DC  6E0B               	movwf	_SysRunData+9,c
  2071  0003DE  0E00               	movlw	0
  2072  0003E0  6E0A               	movwf	_SysRunData+8,c
  2073                           
  2074                           ;app.c: 355: }
  2075  0003E2  D024               	goto	l175
  2076  0003E4                     l3855:
  2077                           
  2078                           ;app.c: 356: else
  2079                           ;app.c: 357: {
  2080                           ;app.c: 358: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  2081  0003E4  0E09               	movlw	9
  2082  0003E6  6E02               	movwf	_SysRunData,c
  2083                           
  2084                           ;app.c: 359: Pedal_Stop(0);
  2085  0003E8  0E00               	movlw	0
  2086  0003EA  EC7D  F00B         	call	_Pedal_Stop
  2087  0003EE                     l3859:
  2088                           
  2089                           ;app.c: 360: SysRunData.PedalRunCnt[0] = 0;
  2090  0003EE  0E00               	movlw	0
  2091  0003F0  6E07               	movwf	_SysRunData+5,c
  2092  0003F2  0E00               	movlw	0
  2093  0003F4  6E06               	movwf	_SysRunData+4,c
  2094                           
  2095                           ;app.c: 365: }
  2096                           
  2097                           ;app.c: 364: break;
  2098                           
  2099                           ;app.c: 363: default:
  2100                           
  2101                           ;app.c: 361: }
  2102                           ;app.c: 362: break;
  2103  0003F6  D01A               	goto	l175
  2104  0003F8                     l3863:
  2105  0003F8  5002               	movf	_SysRunData,w,c
  2106                           
  2107                           ; Switch size 1, requested type "space"
  2108                           ; Number of cases is 8, Range of values is 0 to 8
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; simple_byte           25    13 (average)
  2112                           ;	Chosen strategy is simple_byte
  2113  0003FA  0A00               	xorlw	0	; case 0
  2114  0003FC  B4D8               	btfsc	status,2,c
  2115  0003FE  D73B               	goto	l3765
  2116  000400  0A01               	xorlw	1	; case 1
  2117  000402  B4D8               	btfsc	status,2,c
  2118  000404  D757               	goto	l3781
  2119  000406  0A03               	xorlw	3	; case 2
  2120  000408  B4D8               	btfsc	status,2,c
  2121  00040A  D729               	goto	l3757
  2122  00040C  0A01               	xorlw	1	; case 3
  2123  00040E  B4D8               	btfsc	status,2,c
  2124  000410  D7BE               	goto	l3837
  2125  000412  0A07               	xorlw	7	; case 4
  2126  000414  B4D8               	btfsc	status,2,c
  2127  000416  D7CD               	goto	l3843
  2128  000418  0A01               	xorlw	1	; case 5
  2129  00041A  B4D8               	btfsc	status,2,c
  2130  00041C  D7A0               	goto	l3825
  2131  00041E  0A02               	xorlw	2	; case 7
  2132  000420  B4D8               	btfsc	status,2,c
  2133  000422  D784               	goto	l3811
  2134  000424  0A0F               	xorlw	15	; case 8
  2135  000426  B4D8               	btfsc	status,2,c
  2136  000428  D7C9               	goto	l3845
  2137  00042A  D000               	goto	l175
  2138  00042C                     l175:
  2139                           
  2140                           ;app.c: 366: }
  2141                           ;app.c: 371: if((SysRunData.PedalRunFlag & (0x02u)) == (0x02u))
  2142  00042C  B21A               	btfsc	_SysRunData+24,1,c
  2143  00042E  D0A5               	goto	l3957
  2144  000430  D186               	goto	l4065
  2145                           
  2146                           ;app.c: 372: {
  2147                           ;app.c: 373: switch(SysRunData.PedalSta[1])
  2148  000432  D0A3               	goto	l3957
  2149  000434                     l3867:
  2150                           
  2151                           ;app.c: 376: if(SysRunData.PedalRunCnt[1] > 10)
  2152  000434  5009               	movf	_SysRunData+7,w,c
  2153  000436  E104               	bnz	u3700
  2154  000438  0E0B               	movlw	11
  2155  00043A  5C08               	subwf	_SysRunData+6,w,c
  2156  00043C  A0D8               	btfss	status,0,c
  2157  00043E  D199               	goto	l4067
  2158  000440                     u3700:
  2159                           
  2160                           ;app.c: 377: {
  2161                           ;app.c: 378: if(SysRunData.ADC_Buf[0x02] > 985)
  2162  000440  0EDA               	movlw	218
  2163  000442  5C16               	subwf	_SysRunData+20,w,c
  2164  000444  0E03               	movlw	3
  2165  000446  5817               	subwfb	_SysRunData+21,w,c
  2166  000448  A0D8               	btfss	status,0,c
  2167  00044A  D193               	goto	l4067
  2168                           
  2169                           ;app.c: 379: {
  2170                           ;app.c: 380: Pedal_Stop(1);
  2171  00044C  0E01               	movlw	1
  2172  00044E  EC7D  F00B         	call	_Pedal_Stop
  2173                           
  2174                           ;app.c: 381: SysRunData.PedalRunCnt[1] = 0;
  2175  000452  0E00               	movlw	0
  2176  000454  6E09               	movwf	_SysRunData+7,c
  2177  000456  0E00               	movlw	0
  2178  000458  6E08               	movwf	_SysRunData+6,c
  2179                           
  2180                           ;app.c: 382: SysRunData.PedalWaitSleepCnt = 0;
  2181  00045A  0E00               	movlw	0
  2182  00045C  6E0B               	movwf	_SysRunData+9,c
  2183  00045E  0E00               	movlw	0
  2184  000460  6E0A               	movwf	_SysRunData+8,c
  2185                           
  2186                           ;app.c: 383: SysRunData.PedalRunCnt[1] = 0;
  2187  000462  0E00               	movlw	0
  2188  000464  6E09               	movwf	_SysRunData+7,c
  2189  000466  0E00               	movlw	0
  2190  000468  6E08               	movwf	_SysRunData+6,c
  2191                           
  2192                           ;app.c: 384: SysRunData.PedalSta[1] = PEDAL_ERROR_FAST_OUT;
  2193  00046A  0E07               	movlw	7
  2194  00046C  D071               	goto	L10
  2195                           
  2196                           ;app.c: 385: }
  2197                           ;app.c: 386: }
  2198                           ;app.c: 387: break;
  2199  00046E  D181               	goto	l4067
  2200  000470                     l3881:
  2201                           
  2202                           ;app.c: 389: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  2203  000470  0E01               	movlw	1
  2204  000472  D06E               	goto	L10
  2205  000474                     l3883:
  2206                           
  2207                           ;app.c: 392: if(SysRunData.PedalRunCnt[1] < 350)
  2208  000474  0E5E               	movlw	94
  2209  000476  5C08               	subwf	_SysRunData+6,w,c
  2210  000478  0E01               	movlw	1
  2211  00047A  5809               	subwfb	_SysRunData+7,w,c
  2212  00047C  B0D8               	btfsc	status,0,c
  2213  00047E  D045               	goto	l3921
  2214                           
  2215                           ;app.c: 393: {
  2216                           ;app.c: 394: Pedal_Out(1);
  2217  000480  0E01               	movlw	1
  2218  000482  EC91  F00B         	call	_Pedal_Out
  2219                           
  2220                           ;app.c: 395: SysRunData.PedalRunCnt[1]++;
  2221  000486  4A08               	infsnz	_SysRunData+6,f,c
  2222  000488  2A09               	incf	_SysRunData+7,f,c
  2223                           
  2224                           ;app.c: 396: SysRunData.PedalWaitSleepCnt = 0;
  2225  00048A  0E00               	movlw	0
  2226  00048C  6E0B               	movwf	_SysRunData+9,c
  2227  00048E  0E00               	movlw	0
  2228  000490  6E0A               	movwf	_SysRunData+8,c
  2229                           
  2230                           ;app.c: 398: if(SysRunData.PedalRunCnt[1] > 50)
  2231  000492  5009               	movf	_SysRunData+7,w,c
  2232  000494  E104               	bnz	u3730
  2233  000496  0E33               	movlw	51
  2234  000498  5C08               	subwf	_SysRunData+6,w,c
  2235  00049A  A0D8               	btfss	status,0,c
  2236  00049C  D16A               	goto	l4067
  2237  00049E                     u3730:
  2238                           
  2239                           ;app.c: 399: {
  2240                           ;app.c: 400: if(SysRunData.ADC_Buf[0x02] > 985)
  2241  00049E  0EDA               	movlw	218
  2242  0004A0  5C16               	subwf	_SysRunData+20,w,c
  2243  0004A2  0E03               	movlw	3
  2244  0004A4  5817               	subwfb	_SysRunData+21,w,c
  2245  0004A6  A0D8               	btfss	status,0,c
  2246  0004A8  D164               	goto	l4067
  2247                           
  2248                           ;app.c: 401: {
  2249                           ;app.c: 402: if(SysRunData.PedalRunCnt[1] > 120)
  2250  0004AA  5009               	movf	_SysRunData+7,w,c
  2251  0004AC  E104               	bnz	u3750
  2252  0004AE  0E79               	movlw	121
  2253  0004B0  5C08               	subwf	_SysRunData+6,w,c
  2254  0004B2  A0D8               	btfss	status,0,c
  2255  0004B4  D00D               	goto	l3905
  2256  0004B6                     u3750:
  2257                           
  2258                           ;app.c: 403: {
  2259                           ;app.c: 404: Pedal_Stop(1);
  2260  0004B6  0E01               	movlw	1
  2261  0004B8  EC7D  F00B         	call	_Pedal_Stop
  2262                           
  2263                           ;app.c: 405: SysRunData.PedalRunCnt[1] = 0;
  2264  0004BC  0E00               	movlw	0
  2265  0004BE  6E09               	movwf	_SysRunData+7,c
  2266  0004C0  0E00               	movlw	0
  2267  0004C2  6E08               	movwf	_SysRunData+6,c
  2268                           
  2269                           ;app.c: 406: SysRunData.PedalSta[1] = PEDAL_NORMAL_WAIT_BACK;
  2270  0004C4  0E02               	movlw	2
  2271  0004C6  6E03               	movwf	_SysRunData+1,c
  2272                           
  2273                           ;app.c: 407: CAN_TX_TestInfo(INFO_ID_RIGHT_PEDAL_OUT_NORMAL);
  2274  0004C8  0E04               	movlw	4
  2275  0004CA  ECE8  F007         	call	_CAN_TX_TestInfo
  2276                           
  2277                           ;app.c: 408: }
  2278  0004CE  D151               	goto	l4067
  2279  0004D0                     l3905:
  2280                           
  2281                           ;app.c: 409: else
  2282                           ;app.c: 410: {
  2283                           ;app.c: 411: if(SysRunData.PedalRunCnt[1] < (50 + 10))
  2284  0004D0  5009               	movf	_SysRunData+7,w,c
  2285  0004D2  E10D               	bnz	l3913
  2286  0004D4  0E3C               	movlw	60
  2287  0004D6  5C08               	subwf	_SysRunData+6,w,c
  2288  0004D8  B0D8               	btfsc	status,0,c
  2289  0004DA  D009               	goto	l3913
  2290                           
  2291                           ;app.c: 412: {
  2292                           ;app.c: 413: Pedal_Stop(1);
  2293  0004DC  0E01               	movlw	1
  2294  0004DE  EC7D  F00B         	call	_Pedal_Stop
  2295                           
  2296                           ;app.c: 414: SysRunData.PedalRunCnt[1] = 0;
  2297  0004E2  0E00               	movlw	0
  2298  0004E4  6E09               	movwf	_SysRunData+7,c
  2299  0004E6  0E00               	movlw	0
  2300  0004E8  6E08               	movwf	_SysRunData+6,c
  2301                           
  2302                           ;app.c: 415: SysRunData.PedalSta[1] = PEDAL_NORMAL_WAIT_BACK;
  2303  0004EA  0E02               	movlw	2
  2304  0004EC  D031               	goto	L10
  2305  0004EE                     l3913:
  2306                           
  2307                           ;app.c: 417: else
  2308                           ;app.c: 418: {
  2309                           ;app.c: 419: Pedal_Stop(1);
  2310  0004EE  0E01               	movlw	1
  2311  0004F0  EC7D  F00B         	call	_Pedal_Stop
  2312                           
  2313                           ;app.c: 420: SysRunData.PedalRunCnt[1] = 0;
  2314  0004F4  0E00               	movlw	0
  2315  0004F6  6E09               	movwf	_SysRunData+7,c
  2316  0004F8  0E00               	movlw	0
  2317  0004FA  6E08               	movwf	_SysRunData+6,c
  2318                           
  2319                           ;app.c: 421: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  2320  0004FC  0E04               	movlw	4
  2321  0004FE  6E03               	movwf	_SysRunData+1,c
  2322                           
  2323                           ;app.c: 422: Pedal_Back(1);
  2324  000500  0E01               	movlw	1
  2325  000502  ECA5  F00B         	call	_Pedal_Back
  2326  000506  D10C               	goto	l4055
  2327                           
  2328                           ;app.c: 424: }
  2329                           ;app.c: 425: }
  2330                           ;app.c: 426: }
  2331                           ;app.c: 427: }
  2332                           ;app.c: 428: }
  2333                           
  2334                           ;app.c: 423: SysRunData.PedalWaitSleepCnt = 0;
  2335  000508  D134               	goto	l4067
  2336  00050A                     l3921:
  2337                           
  2338                           ;app.c: 429: else
  2339                           ;app.c: 430: {
  2340                           ;app.c: 431: Pedal_Stop(1);
  2341  00050A  0E01               	movlw	1
  2342  00050C  EC7D  F00B         	call	_Pedal_Stop
  2343                           
  2344                           ;app.c: 432: SysRunData.PedalRunCnt[1] = 0;
  2345  000510  0E00               	movlw	0
  2346  000512  6E09               	movwf	_SysRunData+7,c
  2347  000514  0E00               	movlw	0
  2348  000516  6E08               	movwf	_SysRunData+6,c
  2349                           
  2350                           ;app.c: 433: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  2351  000518  0E08               	movlw	8
  2352  00051A  D01A               	goto	L10
  2353                           
  2354                           ;app.c: 434: }
  2355                           ;app.c: 435: break;
  2356  00051C  D12A               	goto	l4067
  2357  00051E                     l3927:
  2358                           
  2359                           ;app.c: 438: SysRunData.PedalRunCnt[1]++;
  2360  00051E  4A08               	infsnz	_SysRunData+6,f,c
  2361  000520  2A09               	incf	_SysRunData+7,f,c
  2362                           
  2363                           ;app.c: 439: if(SysRunData.PedalRunCnt[1] > 50)
  2364  000522  5009               	movf	_SysRunData+7,w,c
  2365  000524  E104               	bnz	u3770
  2366  000526  0E33               	movlw	51
  2367  000528  5C08               	subwf	_SysRunData+6,w,c
  2368  00052A  A0D8               	btfss	status,0,c
  2369  00052C  D122               	goto	l4067
  2370  00052E                     u3770:
  2371                           
  2372                           ;app.c: 440: {
  2373                           ;app.c: 441: if(SysRunData.ADC_Buf[0x02] > 985)
  2374  00052E  0EDA               	movlw	218
  2375  000530  5C16               	subwf	_SysRunData+20,w,c
  2376  000532  0E03               	movlw	3
  2377  000534  5817               	subwfb	_SysRunData+21,w,c
  2378  000536  A0D8               	btfss	status,0,c
  2379  000538  D11C               	goto	l4067
  2380                           
  2381                           ;app.c: 442: {
  2382                           ;app.c: 443: Pedal_Stop(1);
  2383  00053A  0E01               	movlw	1
  2384  00053C  EC7D  F00B         	call	_Pedal_Stop
  2385                           
  2386                           ;app.c: 444: SysRunData.PedalRunCnt[1] = 0;
  2387  000540  0E00               	movlw	0
  2388  000542  6E09               	movwf	_SysRunData+7,c
  2389  000544  0E00               	movlw	0
  2390  000546  6E08               	movwf	_SysRunData+6,c
  2391                           
  2392                           ;app.c: 445: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  2393  000548  0E04               	movlw	4
  2394  00054A  D002               	goto	L10
  2395                           
  2396                           ;app.c: 446: }
  2397                           ;app.c: 447: }
  2398                           ;app.c: 448: break;
  2399  00054C  D112               	goto	l4067
  2400                           
  2401                           ;app.c: 449: case PEDAL_STALL_WAIT_BACK:
  2402  00054E  D0CE               	goto	L14
  2403  000550                     L10:
  2404  000550  6E03               	movwf	_SysRunData+1,c
  2405                           
  2406                           ;app.c: 453: break;
  2407  000552  D10F               	goto	l4067
  2408  000554                     l3941:
  2409                           
  2410                           ;app.c: 455: if(SysRunData.PedalRunCnt[1] < 350)
  2411  000554  0E5E               	movlw	94
  2412  000556  5C08               	subwf	_SysRunData+6,w,c
  2413  000558  0E01               	movlw	1
  2414  00055A  5809               	subwfb	_SysRunData+7,w,c
  2415  00055C  B0D8               	btfsc	status,0,c
  2416  00055E  D006               	goto	l3949
  2417                           
  2418                           ;app.c: 456: {
  2419                           ;app.c: 457: Pedal_Out(1);
  2420  000560  0E01               	movlw	1
  2421  000562  EC91  F00B         	call	_Pedal_Out
  2422                           
  2423                           ;app.c: 458: SysRunData.PedalRunCnt[1]++;
  2424  000566  4A08               	infsnz	_SysRunData+6,f,c
  2425  000568  2A09               	incf	_SysRunData+7,f,c
  2426  00056A  D0DA               	goto	l4055
  2427  00056C                     l3949:
  2428                           
  2429                           ;app.c: 461: else
  2430                           ;app.c: 462: {
  2431                           ;app.c: 463: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  2432  00056C  0E08               	movlw	8
  2433  00056E  6E03               	movwf	_SysRunData+1,c
  2434                           
  2435                           ;app.c: 464: Pedal_Stop(1);
  2436  000570  0E01               	movlw	1
  2437  000572  EC7D  F00B         	call	_Pedal_Stop
  2438  000576  D0DE               	goto	l4061
  2439                           
  2440                           ;app.c: 470: }
  2441                           
  2442                           ;app.c: 469: break;
  2443                           
  2444                           ;app.c: 468: default:
  2445                           
  2446                           ;app.c: 466: }
  2447                           ;app.c: 467: break;
  2448                           
  2449                           ;app.c: 465: SysRunData.PedalRunCnt[1] = 0;
  2450  000578  D0FC               	goto	l4067
  2451  00057A                     l3957:
  2452  00057A  5003               	movf	_SysRunData+1,w,c
  2453                           
  2454                           ; Switch size 1, requested type "space"
  2455                           ; Number of cases is 6, Range of values is 0 to 9
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte           19    10 (average)
  2459                           ;	Chosen strategy is simple_byte
  2460  00057C  0A00               	xorlw	0	; case 0
  2461  00057E  B4D8               	btfsc	status,2,c
  2462  000580  D779               	goto	l3883
  2463  000582  0A01               	xorlw	1	; case 1
  2464  000584  B4D8               	btfsc	status,2,c
  2465  000586  D756               	goto	l3867
  2466  000588  0A02               	xorlw	2	; case 3
  2467  00058A  B4D8               	btfsc	status,2,c
  2468  00058C  D0AF               	goto	L14
  2469  00058E  0A07               	xorlw	7	; case 4
  2470  000590  B4D8               	btfsc	status,2,c
  2471  000592  D7C5               	goto	l3927
  2472  000594  0A02               	xorlw	2	; case 6
  2473  000596  B4D8               	btfsc	status,2,c
  2474  000598  D76B               	goto	l3881
  2475  00059A  0A0F               	xorlw	15	; case 9
  2476  00059C  B4D8               	btfsc	status,2,c
  2477  00059E  D7DA               	goto	l3941
  2478                           
  2479                           ;app.c: 471: }
  2480  0005A0  D0E8               	goto	l4067
  2481                           
  2482                           ;app.c: 472: else
  2483                           ;app.c: 473: {
  2484                           ;app.c: 474: switch(SysRunData.PedalSta[1])
  2485  0005A2  D0CD               	goto	l4065
  2486  0005A4                     l3959:
  2487                           
  2488                           ;app.c: 477: if(++SysRunData.PedalWaitBackCnt[1] >= 0)
  2489  0005A4  4A0E               	infsnz	_SysRunData+12,f,c
  2490  0005A6  2A0F               	incf	_SysRunData+13,f,c
  2491                           
  2492                           ;app.c: 478: {
  2493                           ;app.c: 479: SysRunData.PedalWaitBackCnt[1] = 0;
  2494  0005A8  0E00               	movlw	0
  2495  0005AA  6E0F               	movwf	_SysRunData+13,c
  2496  0005AC  0E00               	movlw	0
  2497  0005AE  6E0E               	movwf	_SysRunData+12,c
  2498                           
  2499                           ;app.c: 480: SysRunData.PedalWaitSleepCnt = 0;
  2500  0005B0  0E00               	movlw	0
  2501  0005B2  6E0B               	movwf	_SysRunData+9,c
  2502  0005B4  0E00               	movlw	0
  2503  0005B6  6E0A               	movwf	_SysRunData+8,c
  2504  0005B8  D75B               	goto	l3881
  2505                           
  2506                           ;app.c: 482: }
  2507                           ;app.c: 483: break;
  2508                           
  2509                           ;app.c: 481: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  2510  0005BA  D0DB               	goto	l4067
  2511  0005BC                     l3967:
  2512                           
  2513                           ;app.c: 485: if(SysRunData.PedalRunCnt[1] > 10)
  2514  0005BC  5009               	movf	_SysRunData+7,w,c
  2515  0005BE  E104               	bnz	u3800
  2516  0005C0  0E0B               	movlw	11
  2517  0005C2  5C08               	subwf	_SysRunData+6,w,c
  2518  0005C4  A0D8               	btfss	status,0,c
  2519  0005C6  D0D5               	goto	l4067
  2520  0005C8                     u3800:
  2521                           
  2522                           ;app.c: 486: {
  2523                           ;app.c: 487: if(SysRunData.ADC_Buf[0x02] > 985)
  2524  0005C8  0EDA               	movlw	218
  2525  0005CA  5C16               	subwf	_SysRunData+20,w,c
  2526  0005CC  0E03               	movlw	3
  2527  0005CE  5817               	subwfb	_SysRunData+21,w,c
  2528  0005D0  A0D8               	btfss	status,0,c
  2529  0005D2  D0CF               	goto	l4067
  2530                           
  2531                           ;app.c: 488: {
  2532                           ;app.c: 489: Pedal_Stop(1);
  2533  0005D4  0E01               	movlw	1
  2534  0005D6  EC7D  F00B         	call	_Pedal_Stop
  2535                           
  2536                           ;app.c: 490: SysRunData.PedalRunCnt[1] = 0;
  2537  0005DA  0E00               	movlw	0
  2538  0005DC  6E09               	movwf	_SysRunData+7,c
  2539  0005DE  0E00               	movlw	0
  2540  0005E0  6E08               	movwf	_SysRunData+6,c
  2541                           
  2542                           ;app.c: 491: SysRunData.PedalWaitSleepCnt = 0;
  2543  0005E2  0E00               	movlw	0
  2544  0005E4  6E0B               	movwf	_SysRunData+9,c
  2545  0005E6  0E00               	movlw	0
  2546  0005E8  6E0A               	movwf	_SysRunData+8,c
  2547                           
  2548                           ;app.c: 492: SysRunData.PedalRunCnt[1] = 0;
  2549  0005EA  0E00               	movlw	0
  2550  0005EC  6E09               	movwf	_SysRunData+7,c
  2551  0005EE  0E00               	movlw	0
  2552  0005F0  6E08               	movwf	_SysRunData+6,c
  2553                           
  2554                           ;app.c: 493: SysRunData.PedalSta[1] = PEDAL_ERROR_FAST_BACK;
  2555  0005F2  0E06               	movlw	6
  2556  0005F4  D7AD               	goto	L10
  2557                           
  2558                           ;app.c: 494: }
  2559                           ;app.c: 495: }
  2560                           ;app.c: 496: break;
  2561  0005F6  D0BD               	goto	l4067
  2562                           
  2563                           ;app.c: 497: case PEDAL_ERROR_FAST_OUT:
  2564  0005F8  D03C               	goto	l4013
  2565  0005FA                     l3983:
  2566                           
  2567                           ;app.c: 501: if(SysRunData.PedalRunCnt[1] < 350)
  2568  0005FA  0E5E               	movlw	94
  2569  0005FC  5C08               	subwf	_SysRunData+6,w,c
  2570  0005FE  0E01               	movlw	1
  2571  000600  5809               	subwfb	_SysRunData+7,w,c
  2572  000602  B0D8               	btfsc	status,0,c
  2573  000604  D045               	goto	l4021
  2574                           
  2575                           ;app.c: 502: {
  2576                           ;app.c: 503: Pedal_Back(1);
  2577  000606  0E01               	movlw	1
  2578  000608  ECA5  F00B         	call	_Pedal_Back
  2579                           
  2580                           ;app.c: 504: SysRunData.PedalRunCnt[1]++;
  2581  00060C  4A08               	infsnz	_SysRunData+6,f,c
  2582  00060E  2A09               	incf	_SysRunData+7,f,c
  2583                           
  2584                           ;app.c: 505: SysRunData.PedalWaitSleepCnt = 0;
  2585  000610  0E00               	movlw	0
  2586  000612  6E0B               	movwf	_SysRunData+9,c
  2587  000614  0E00               	movlw	0
  2588  000616  6E0A               	movwf	_SysRunData+8,c
  2589                           
  2590                           ;app.c: 507: if(SysRunData.PedalRunCnt[1] > 50)
  2591  000618  5009               	movf	_SysRunData+7,w,c
  2592  00061A  E104               	bnz	u3830
  2593  00061C  0E33               	movlw	51
  2594  00061E  5C08               	subwf	_SysRunData+6,w,c
  2595  000620  A0D8               	btfss	status,0,c
  2596  000622  D0A7               	goto	l4067
  2597  000624                     u3830:
  2598                           
  2599                           ;app.c: 508: {
  2600                           ;app.c: 509: if(SysRunData.ADC_Buf[0x02] > 985)
  2601  000624  0EDA               	movlw	218
  2602  000626  5C16               	subwf	_SysRunData+20,w,c
  2603  000628  0E03               	movlw	3
  2604  00062A  5817               	subwfb	_SysRunData+21,w,c
  2605  00062C  A0D8               	btfss	status,0,c
  2606  00062E  D0A1               	goto	l4067
  2607                           
  2608                           ;app.c: 510: {
  2609                           ;app.c: 511: if(SysRunData.PedalRunCnt[1] > 120)
  2610  000630  5009               	movf	_SysRunData+7,w,c
  2611  000632  E104               	bnz	u3850
  2612  000634  0E79               	movlw	121
  2613  000636  5C08               	subwf	_SysRunData+6,w,c
  2614  000638  A0D8               	btfss	status,0,c
  2615  00063A  D011               	goto	l4007
  2616  00063C                     u3850:
  2617                           
  2618                           ;app.c: 512: {
  2619                           ;app.c: 513: Pedal_Stop(1);
  2620  00063C  0E01               	movlw	1
  2621  00063E  EC7D  F00B         	call	_Pedal_Stop
  2622                           
  2623                           ;app.c: 514: SysRunData.PedalRunCnt[1] = 0;
  2624  000642  0E00               	movlw	0
  2625  000644  6E09               	movwf	_SysRunData+7,c
  2626  000646  0E00               	movlw	0
  2627  000648  6E08               	movwf	_SysRunData+6,c
  2628                           
  2629                           ;app.c: 515: SysRunData.PedalWaitSleepCnt = 0;
  2630  00064A  0E00               	movlw	0
  2631  00064C  6E0B               	movwf	_SysRunData+9,c
  2632  00064E  0E00               	movlw	0
  2633  000650  6E0A               	movwf	_SysRunData+8,c
  2634                           
  2635                           ;app.c: 516: SysRunData.PedalSta[1] = PEDAL_UP_LIMIT;
  2636  000652  0E00               	movlw	0
  2637  000654  6E03               	movwf	_SysRunData+1,c
  2638                           
  2639                           ;app.c: 517: CAN_TX_TestInfo(INFO_ID_RIGHT_PEDAL_BACK_NORMAL);
  2640  000656  0E06               	movlw	6
  2641  000658  ECE8  F007         	call	_CAN_TX_TestInfo
  2642                           
  2643                           ;app.c: 518: }
  2644  00065C  D08A               	goto	l4067
  2645  00065E                     l4007:
  2646                           
  2647                           ;app.c: 519: else
  2648                           ;app.c: 520: {
  2649                           ;app.c: 521: if(SysRunData.PedalRunCnt[1] < (50 + 10))
  2650  00065E  5009               	movf	_SysRunData+7,w,c
  2651  000660  E10A               	bnz	l4015
  2652  000662  0E3C               	movlw	60
  2653  000664  5C08               	subwf	_SysRunData+6,w,c
  2654  000666  B0D8               	btfsc	status,0,c
  2655  000668  D006               	goto	l4015
  2656                           
  2657                           ;app.c: 522: {
  2658                           ;app.c: 523: Pedal_Stop(1);
  2659  00066A  0E01               	movlw	1
  2660  00066C  EC7D  F00B         	call	_Pedal_Stop
  2661  000670  D043               	goto	l4045
  2662  000672                     l4013:
  2663                           
  2664                           ;app.c: 525: SysRunData.PedalSta[1] = PEDAL_UP_LIMIT;
  2665  000672  0E00               	movlw	0
  2666  000674  D76D               	goto	L10
  2667  000676                     l4015:
  2668                           
  2669                           ;app.c: 527: else
  2670                           ;app.c: 528: {
  2671                           ;app.c: 529: Pedal_Stop(1);
  2672  000676  0E01               	movlw	1
  2673  000678  EC7D  F00B         	call	_Pedal_Stop
  2674                           
  2675                           ;app.c: 530: SysRunData.PedalRunCnt[1] = 0;
  2676  00067C  0E00               	movlw	0
  2677  00067E  6E09               	movwf	_SysRunData+7,c
  2678  000680  0E00               	movlw	0
  2679  000682  6E08               	movwf	_SysRunData+6,c
  2680                           
  2681                           ;app.c: 531: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_OUT;
  2682  000684  0E05               	movlw	5
  2683  000686  6E03               	movwf	_SysRunData+1,c
  2684                           
  2685                           ;app.c: 532: Pedal_Out(1);
  2686  000688  0E01               	movlw	1
  2687  00068A  EC91  F00B         	call	_Pedal_Out
  2688                           
  2689                           ;app.c: 533: }
  2690                           ;app.c: 534: }
  2691                           ;app.c: 535: }
  2692                           ;app.c: 536: }
  2693                           ;app.c: 537: }
  2694  00068E  D071               	goto	l4067
  2695  000690                     l4021:
  2696                           
  2697                           ;app.c: 538: else
  2698                           ;app.c: 539: {
  2699                           ;app.c: 540: Pedal_Stop(1);
  2700  000690  0E01               	movlw	1
  2701  000692  EC7D  F00B         	call	_Pedal_Stop
  2702                           
  2703                           ;app.c: 541: SysRunData.PedalRunCnt[1] = 0;
  2704  000696  0E00               	movlw	0
  2705  000698  6E09               	movwf	_SysRunData+7,c
  2706  00069A  0E00               	movlw	0
  2707  00069C  6E08               	movwf	_SysRunData+6,c
  2708                           
  2709                           ;app.c: 542: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  2710  00069E  0E09               	movlw	9
  2711  0006A0  D757               	goto	L10
  2712                           
  2713                           ;app.c: 543: }
  2714                           ;app.c: 544: break;
  2715  0006A2  D067               	goto	l4067
  2716  0006A4                     l4027:
  2717                           
  2718                           ;app.c: 547: SysRunData.PedalRunCnt[1]++;
  2719  0006A4  4A08               	infsnz	_SysRunData+6,f,c
  2720  0006A6  2A09               	incf	_SysRunData+7,f,c
  2721                           
  2722                           ;app.c: 548: if(SysRunData.PedalRunCnt[1] > 50)
  2723  0006A8  5009               	movf	_SysRunData+7,w,c
  2724  0006AA  E104               	bnz	u3870
  2725  0006AC  0E33               	movlw	51
  2726  0006AE  5C08               	subwf	_SysRunData+6,w,c
  2727  0006B0  A0D8               	btfss	status,0,c
  2728  0006B2  D05F               	goto	l4067
  2729  0006B4                     u3870:
  2730                           
  2731                           ;app.c: 549: {
  2732                           ;app.c: 550: if(SysRunData.ADC_Buf[0x02] > 985)
  2733  0006B4  0EDA               	movlw	218
  2734  0006B6  5C16               	subwf	_SysRunData+20,w,c
  2735  0006B8  0E03               	movlw	3
  2736  0006BA  5817               	subwfb	_SysRunData+21,w,c
  2737  0006BC  A0D8               	btfss	status,0,c
  2738  0006BE  D059               	goto	l4067
  2739                           
  2740                           ;app.c: 551: {
  2741                           ;app.c: 553: Pedal_Stop(1);
  2742  0006C0  0E01               	movlw	1
  2743  0006C2  EC7D  F00B         	call	_Pedal_Stop
  2744                           
  2745                           ;app.c: 554: SysRunData.PedalRunCnt[1] = 0;
  2746  0006C6  0E00               	movlw	0
  2747  0006C8  6E09               	movwf	_SysRunData+7,c
  2748  0006CA  0E00               	movlw	0
  2749  0006CC  6E08               	movwf	_SysRunData+6,c
  2750                           
  2751                           ;app.c: 555: SysRunData.PedalSta[1] = PEDAL_STALL_WAIT_BACK;
  2752  0006CE  0E03               	movlw	3
  2753  0006D0  D73F               	goto	L10
  2754                           
  2755                           ;app.c: 556: }
  2756                           ;app.c: 557: }
  2757                           ;app.c: 558: break;
  2758  0006D2  D04F               	goto	l4067
  2759  0006D4                     l4039:
  2760                           
  2761                           ;app.c: 560: SysRunData.PedalWaitSleepCnt = 0;
  2762  0006D4  0E00               	movlw	0
  2763  0006D6  6E0B               	movwf	_SysRunData+9,c
  2764  0006D8  0E00               	movlw	0
  2765  0006DA  6E0A               	movwf	_SysRunData+8,c
  2766                           
  2767                           ;app.c: 561: if(++SysRunData.PedalWaitBackCnt[1] >= 1500)
  2768  0006DC  4A0E               	infsnz	_SysRunData+12,f,c
  2769  0006DE  2A0F               	incf	_SysRunData+13,f,c
  2770  0006E0  0EDC               	movlw	220
  2771  0006E2  5C0E               	subwf	_SysRunData+12,w,c
  2772  0006E4  0E05               	movlw	5
  2773  0006E6  580F               	subwfb	_SysRunData+13,w,c
  2774  0006E8  A0D8               	btfss	status,0,c
  2775  0006EA  D043               	goto	l4067
  2776  0006EC                     L14:
  2777                           
  2778                           ;app.c: 562: {
  2779                           ;app.c: 563: SysRunData.PedalWaitBackCnt[1] = 0;
  2780  0006EC  0E00               	movlw	0
  2781  0006EE  6E0F               	movwf	_SysRunData+13,c
  2782  0006F0  0E00               	movlw	0
  2783  0006F2  6E0E               	movwf	_SysRunData+12,c
  2784  0006F4  D6BD               	goto	l3881
  2785                           
  2786                           ;app.c: 565: }
  2787                           ;app.c: 566: break;
  2788                           
  2789                           ;app.c: 564: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  2790  0006F6  D03D               	goto	l4067
  2791  0006F8                     l4045:
  2792                           
  2793                           ;app.c: 569: SysRunData.PedalRunCnt[1] = 0;
  2794  0006F8  0E00               	movlw	0
  2795  0006FA  6E09               	movwf	_SysRunData+7,c
  2796  0006FC  0E00               	movlw	0
  2797  0006FE  6E08               	movwf	_SysRunData+6,c
  2798  000700  D7B8               	goto	l4013
  2799  000702                     l4047:
  2800                           
  2801                           ;app.c: 573: if(SysRunData.PedalRunCnt[1] < 350)
  2802  000702  0E5E               	movlw	94
  2803  000704  5C08               	subwf	_SysRunData+6,w,c
  2804  000706  0E01               	movlw	1
  2805  000708  5809               	subwfb	_SysRunData+7,w,c
  2806  00070A  B0D8               	btfsc	status,0,c
  2807  00070C  D00E               	goto	l4057
  2808                           
  2809                           ;app.c: 574: {
  2810                           ;app.c: 575: Pedal_Back(1);
  2811  00070E  0E01               	movlw	1
  2812  000710  ECA5  F00B         	call	_Pedal_Back
  2813                           
  2814                           ;app.c: 576: SysRunData.PedalRunCnt[1]++;
  2815  000714  4A08               	infsnz	_SysRunData+6,f,c
  2816  000716  2A09               	incf	_SysRunData+7,f,c
  2817                           
  2818                           ;app.c: 577: SysRunData.PedalWaitSleepCnt = 0;
  2819  000718  0E00               	movlw	0
  2820  00071A  6E0B               	movwf	_SysRunData+9,c
  2821  00071C  0E00               	movlw	0
  2822  00071E  6E0A               	movwf	_SysRunData+8,c
  2823  000720                     l4055:
  2824                           
  2825                           ;app.c: 578: SysRunData.PedalWaitSleepCnt = 0;
  2826  000720  0E00               	movlw	0
  2827  000722  6E0B               	movwf	_SysRunData+9,c
  2828  000724  0E00               	movlw	0
  2829  000726  6E0A               	movwf	_SysRunData+8,c
  2830                           
  2831                           ;app.c: 579: }
  2832  000728  D024               	goto	l4067
  2833  00072A                     l4057:
  2834                           
  2835                           ;app.c: 580: else
  2836                           ;app.c: 581: {
  2837                           ;app.c: 582: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  2838  00072A  0E09               	movlw	9
  2839  00072C  6E03               	movwf	_SysRunData+1,c
  2840                           
  2841                           ;app.c: 583: Pedal_Stop(1);
  2842  00072E  0E01               	movlw	1
  2843  000730  EC7D  F00B         	call	_Pedal_Stop
  2844  000734                     l4061:
  2845                           
  2846                           ;app.c: 584: SysRunData.PedalRunCnt[1] = 0;
  2847  000734  0E00               	movlw	0
  2848  000736  6E09               	movwf	_SysRunData+7,c
  2849  000738  0E00               	movlw	0
  2850  00073A  6E08               	movwf	_SysRunData+6,c
  2851                           
  2852                           ;app.c: 589: }
  2853                           
  2854                           ;app.c: 588: break;
  2855                           
  2856                           ;app.c: 587: default:
  2857                           
  2858                           ;app.c: 585: }
  2859                           ;app.c: 586: break;
  2860  00073C  D01A               	goto	l4067
  2861  00073E                     l4065:
  2862  00073E  5003               	movf	_SysRunData+1,w,c
  2863                           
  2864                           ; Switch size 1, requested type "space"
  2865                           ; Number of cases is 8, Range of values is 0 to 8
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte           25    13 (average)
  2869                           ;	Chosen strategy is simple_byte
  2870  000740  0A00               	xorlw	0	; case 0
  2871  000742  B4D8               	btfsc	status,2,c
  2872  000744  D73B               	goto	l3967
  2873  000746  0A01               	xorlw	1	; case 1
  2874  000748  B4D8               	btfsc	status,2,c
  2875  00074A  D757               	goto	l3983
  2876  00074C  0A03               	xorlw	3	; case 2
  2877  00074E  B4D8               	btfsc	status,2,c
  2878  000750  D729               	goto	l3959
  2879  000752  0A01               	xorlw	1	; case 3
  2880  000754  B4D8               	btfsc	status,2,c
  2881  000756  D7BE               	goto	l4039
  2882  000758  0A07               	xorlw	7	; case 4
  2883  00075A  B4D8               	btfsc	status,2,c
  2884  00075C  D7CD               	goto	l4045
  2885  00075E  0A01               	xorlw	1	; case 5
  2886  000760  B4D8               	btfsc	status,2,c
  2887  000762  D7A0               	goto	l4027
  2888  000764  0A02               	xorlw	2	; case 7
  2889  000766  B4D8               	btfsc	status,2,c
  2890  000768  D784               	goto	l4013
  2891  00076A  0A0F               	xorlw	15	; case 8
  2892  00076C  B4D8               	btfsc	status,2,c
  2893  00076E  D7C9               	goto	l4047
  2894  000770  D000               	goto	l4067
  2895  000772                     l4067:
  2896                           
  2897                           ;app.c: 590: }
  2898                           ;app.c: 592: if((SysRunData.PedalWaitBackCnt[0] == 0) && (SysRunData.PedalWaitBackCnt[1]
      +                           == 0) &&
  2899                           ;app.c: 593: (SysRunData.PedalRunCnt[0] == 0) && (SysRunData.UnlockWaitCnt == 0))
  2900  000772  500C               	movf	_SysRunData+10,w,c
  2901  000774  100D               	iorwf	_SysRunData+11,w,c
  2902  000776  A4D8               	btfss	status,2,c
  2903  000778  0012               	return	
  2904  00077A  500E               	movf	_SysRunData+12,w,c
  2905  00077C  100F               	iorwf	_SysRunData+13,w,c
  2906  00077E  A4D8               	btfss	status,2,c
  2907  000780  0012               	return	
  2908  000782  5006               	movf	_SysRunData+4,w,c
  2909  000784  1007               	iorwf	_SysRunData+5,w,c
  2910  000786  A4D8               	btfss	status,2,c
  2911  000788  0012               	return	
  2912  00078A  5010               	movf	_SysRunData+14,w,c
  2913  00078C  1011               	iorwf	_SysRunData+15,w,c
  2914  00078E  A4D8               	btfss	status,2,c
  2915  000790  0012               	return	
  2916                           
  2917                           ;app.c: 594: {
  2918                           ;app.c: 595: SysNormalWaitSleep();
  2919  000792  ECE7  F00A         	call	_SysNormalWaitSleep	;wreg free
  2920  000796  0012               	return	
  2921  000798  0012               	return		;funcret
  2922  00079A                     __end_of_Pedal_Process:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           indf1	equ	0xFE7
  2933                           postinc1	equ	0xFE6
  2934                           fsr1h	equ	0xFE2
  2935                           fsr1l	equ	0xFE1
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           fsr2h	equ	0xFDA
  2940                           fsr2l	equ	0xFD9
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _SysNormalWaitSleep *****************
  2944 ;; Defined at:
  2945 ;;		line 621 in file "source/app.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;		None               void
  2952 ;; Registers used:
  2953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    7
  2966 ;; This function calls:
  2967 ;;		_App_System_Init
  2968 ;;		_SysEnterSleep
  2969 ;; This function is called by:
  2970 ;;		_Pedal_Process
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text6
  2975  0015CE                     __ptext6:
  2976                           	opt stack 0
  2977  0015CE                     _SysNormalWaitSleep:
  2978                           	opt stack 21
  2979                           
  2980                           ;app.c: 623: static uint8_t tempPedalRunFlag = 0xAA;
  2981                           ;app.c: 625: if(SysRunData.PedalRunFlag != tempPedalRunFlag)
  2982                           
  2983                           ;incstack = 0
  2984  0015CE  5044               	movf	SysNormalWaitSleep@tempPedalRunFlag,w,c
  2985  0015D0  181A               	xorwf	_SysRunData+24,w,c
  2986  0015D2  B4D8               	btfsc	status,2,c
  2987  0015D4  D015               	goto	l3513
  2988                           
  2989                           ;app.c: 626: {
  2990                           ;app.c: 627: tempPedalRunFlag = 0xAA;
  2991  0015D6  0EAA               	movlw	170
  2992  0015D8  6E44               	movwf	SysNormalWaitSleep@tempPedalRunFlag,c
  2993                           
  2994                           ;app.c: 628: if(++SysRunData.PedalWaitSleepCnt > 1500)
  2995  0015DA  4A0A               	infsnz	_SysRunData+8,f,c
  2996  0015DC  2A0B               	incf	_SysRunData+9,f,c
  2997  0015DE  0EDD               	movlw	221
  2998  0015E0  5C0A               	subwf	_SysRunData+8,w,c
  2999  0015E2  0E05               	movlw	5
  3000  0015E4  580B               	subwfb	_SysRunData+9,w,c
  3001  0015E6  A0D8               	btfss	status,0,c
  3002  0015E8  0012               	return	
  3003                           
  3004                           ;app.c: 629: {
  3005                           ;app.c: 630: SysRunData.PedalWaitSleepCnt = 0;
  3006  0015EA  0E00               	movlw	0
  3007  0015EC  6E0B               	movwf	_SysRunData+9,c
  3008  0015EE  0E00               	movlw	0
  3009  0015F0  6E0A               	movwf	_SysRunData+8,c
  3010                           
  3011                           ;app.c: 631: tempPedalRunFlag = SysRunData.PedalRunFlag;
  3012  0015F2  C01A  F044         	movff	_SysRunData+24,SysNormalWaitSleep@tempPedalRunFlag
  3013                           
  3014                           ;app.c: 632: SysEnterSleep();
  3015  0015F6  EC6A  F00A         	call	_SysEnterSleep	;wreg free
  3016                           
  3017                           ;app.c: 633: App_System_Init();
  3018  0015FA  EC36  F00A         	call	_App_System_Init	;wreg free
  3019                           
  3020                           ;app.c: 634: }
  3021                           ;app.c: 635: }
  3022  0015FE  0012               	return	
  3023  001600                     l3513:
  3024                           
  3025                           ;app.c: 636: else
  3026                           ;app.c: 637: {
  3027                           ;app.c: 638: SysEnterSleep();
  3028  001600  EC6A  F00A         	call	_SysEnterSleep	;wreg free
  3029                           
  3030                           ;app.c: 639: App_System_Init();
  3031  001604  EC36  F00A         	call	_App_System_Init	;wreg free
  3032  001608  0012               	return	
  3033  00160A  0012               	return		;funcret
  3034  00160C                     __end_of_SysNormalWaitSleep:
  3035                           	opt stack 0
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           indf1	equ	0xFE7
  3045                           postinc1	equ	0xFE6
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           postdec2	equ	0xFDD
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function _SysEnterSleep *****************
  3056 ;; Defined at:
  3057 ;;		line 650 in file "source/app.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;		None               void
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    5
  3078 ;; This function calls:
  3079 ;;		_ADC_Cmd
  3080 ;;		_CAN_SetMode
  3081 ;; This function is called by:
  3082 ;;		_SysNormalWaitSleep
  3083 ;;		_main
  3084 ;;		_SysErrorWaitSleep
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text7
  3089  0014D4                     __ptext7:
  3090                           	opt stack 0
  3091  0014D4                     _SysEnterSleep:
  3092                           	opt stack 25
  3093                           
  3094                           ;app.c: 652: CAN_SetMode(1);
  3095                           
  3096                           ;incstack = 0
  3097  0014D4  0E01               	movlw	1
  3098  0014D6  ECE6  F00B         	call	_CAN_SetMode
  3099                           
  3100                           ;app.c: 653: ADC_Cmd(0x00,0);
  3101  0014DA  0E00               	movlw	0
  3102  0014DC  0100               	movlb	0	; () banked
  3103  0014DE  6FC0               	movwf	ADC_Cmd@sta& (0+255),b
  3104  0014E0  0E00               	movlw	0
  3105  0014E2  EC39  F00B         	call	_ADC_Cmd
  3106                           
  3107                           ;app.c: 654: ADC_Cmd(0x01,0);
  3108  0014E6  0E00               	movlw	0
  3109  0014E8  0100               	movlb	0	; () banked
  3110  0014EA  6FC0               	movwf	ADC_Cmd@sta& (0+255),b
  3111  0014EC  0E01               	movlw	1
  3112  0014EE  EC39  F00B         	call	_ADC_Cmd
  3113                           
  3114                           ;app.c: 655: SysRunData.PedalRunCnt[0] = 0;
  3115  0014F2  0E00               	movlw	0
  3116  0014F4  6E07               	movwf	_SysRunData+5,c
  3117  0014F6  0E00               	movlw	0
  3118  0014F8  6E06               	movwf	_SysRunData+4,c
  3119                           
  3120                           ;app.c: 656: SysRunData.PedalRunCnt[1] = 0;
  3121  0014FA  0E00               	movlw	0
  3122  0014FC  6E09               	movwf	_SysRunData+7,c
  3123  0014FE  0E00               	movlw	0
  3124  001500  6E08               	movwf	_SysRunData+6,c
  3125                           
  3126                           ;app.c: 657: SysRunData.PedalWaitSleepCnt = 0;
  3127  001502  0E00               	movlw	0
  3128  001504  6E0B               	movwf	_SysRunData+9,c
  3129  001506  0E00               	movlw	0
  3130  001508  6E0A               	movwf	_SysRunData+8,c
  3131                           
  3132                           ;app.c: 658: PIR5bits.WAKIF = 0;
  3133  00150A  9C77               	bcf	3959,6,c	;volatile
  3134                           
  3135                           ;app.c: 659: PIE5bits.WAKIE = 1;
  3136  00150C  8C76               	bsf	3958,6,c	;volatile
  3137                           
  3138                           ;app.c: 660: IPR5bits.WAKIP = 1;
  3139  00150E  8C78               	bsf	3960,6,c	;volatile
  3140                           
  3141                           ;app.c: 661: CANCON = 0x20;
  3142  001510  0E20               	movlw	32
  3143  001512  6E6F               	movwf	3951,c	;volatile
  3144                           
  3145                           ;app.c: 662: while(CANSTATbits.OPMODE !=0x01);
  3146  001514  D000               	goto	l3371
  3147  001516                     l3371:
  3148  001516  386E               	swapf	3950,w,c	;volatile
  3149  001518  32E8               	rrcf	wreg,f,c
  3150  00151A  0B07               	andlw	7
  3151  00151C  06E8               	decf	wreg,f,c
  3152  00151E  A4D8               	btfss	status,2,c
  3153  001520  D7FA               	goto	l3371
  3154                           
  3155                           ;app.c: 663: OSCCONbits.IDLEN = 0;
  3156  001522  9ED3               	bcf	4051,7,c	;volatile
  3157  001524  0003               	sleep		;# 
  3158                           
  3159                           ;app.c: 665: _delay((unsigned long)((150)*(32000000UL/4000000.0)));
  3160  001526  0EF0               	movlw	240
  3161  001528                     u4097:
  3162  001528  D000               	nop2	
  3163  00152A  2EE8               	decfsz	wreg,f,c
  3164  00152C  D7FD               	goto	u4097
  3165  00152E  0012               	return		;funcret
  3166  001530                     __end_of_SysEnterSleep:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           indf1	equ	0xFE7
  3177                           postinc1	equ	0xFE6
  3178                           fsr1h	equ	0xFE2
  3179                           fsr1l	equ	0xFE1
  3180                           indf2	equ	0xFDF
  3181                           postinc2	equ	0xFDE
  3182                           postdec2	equ	0xFDD
  3183                           fsr2h	equ	0xFDA
  3184                           fsr2l	equ	0xFD9
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _App_System_Init *****************
  3188 ;; Defined at:
  3189 ;;		line 47 in file "source/app.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    6
  3210 ;; This function calls:
  3211 ;;		_ADC_Cmd
  3212 ;;		_ADC_Init
  3213 ;;		_CAN_SetMode
  3214 ;;		_ConfigTimer0
  3215 ;;		_ECAN_Init
  3216 ;;		_RLY_Init
  3217 ;;		_RemoteCtrl_Init
  3218 ;;		_SetSysClock
  3219 ;;		_bsp_StartAutoTimer
  3220 ;; This function is called by:
  3221 ;;		_SysNormalWaitSleep
  3222 ;;		_main
  3223 ;;		_SysErrorWaitSleep
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text8
  3228  00146C                     __ptext8:
  3229                           	opt stack 0
  3230  00146C                     _App_System_Init:
  3231                           	opt stack 24
  3232                           
  3233                           ;app.c: 50: RCONbits.IPEN = 1;;
  3234                           
  3235                           ;incstack = 0
  3236  00146C  8ED0               	bsf	4048,7,c	;volatile
  3237                           
  3238                           ;app.c: 52: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  3239  00146E  8EF2               	bsf	intcon,7,c	;volatile
  3240  001470  8CF2               	bsf	intcon,6,c	;volatile
  3241                           
  3242                           ;app.c: 54: SetSysClock();
  3243  001472  ECF2  F00B         	call	_SetSysClock	;wreg free
  3244                           
  3245                           ;app.c: 56: ADC_Init();
  3246  001476  EC67  F00B         	call	_ADC_Init	;wreg free
  3247                           
  3248                           ;app.c: 57: ECAN_Init();
  3249  00147A  ECB0  F008         	call	_ECAN_Init	;wreg free
  3250                           
  3251                           ;app.c: 58: RLY_Init();
  3252  00147E  ECB9  F00B         	call	_RLY_Init	;wreg free
  3253                           
  3254                           ;app.c: 59: RemoteCtrl_Init();
  3255  001482  EC06  F00B         	call	_RemoteCtrl_Init	;wreg free
  3256                           
  3257                           ;app.c: 61: ConfigTimer0(1);
  3258  001486  0E00               	movlw	0
  3259  001488  0100               	movlb	0	; () banked
  3260  00148A  6FDA               	movwf	(ConfigTimer0@ms+1)& (0+255),b
  3261  00148C  0E01               	movlw	1
  3262  00148E  6FD9               	movwf	ConfigTimer0@ms& (0+255),b
  3263  001490  EC14  F007         	call	_ConfigTimer0	;wreg free
  3264                           
  3265                           ;app.c: 63: CAN_SetMode(0);
  3266  001494  0E00               	movlw	0
  3267  001496  ECE6  F00B         	call	_CAN_SetMode
  3268                           
  3269                           ;app.c: 65: ADC_Cmd(0x00,1);
  3270  00149A  0E01               	movlw	1
  3271  00149C  0100               	movlb	0	; () banked
  3272  00149E  6FC0               	movwf	ADC_Cmd@sta& (0+255),b
  3273  0014A0  0E00               	movlw	0
  3274  0014A2  EC39  F00B         	call	_ADC_Cmd
  3275                           
  3276                           ;app.c: 66: ADC_Cmd(0x01,1);
  3277  0014A6  0E01               	movlw	1
  3278  0014A8  0100               	movlb	0	; () banked
  3279  0014AA  6FC0               	movwf	ADC_Cmd@sta& (0+255),b
  3280  0014AC  0E01               	movlw	1
  3281  0014AE  EC39  F00B         	call	_ADC_Cmd
  3282                           
  3283                           ;app.c: 68: bsp_StartAutoTimer(1,10);
  3284  0014B2  0E00               	movlw	0
  3285  0014B4  0100               	movlb	0	; () banked
  3286  0014B6  6FC1               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  3287  0014B8  0E0A               	movlw	10
  3288  0014BA  6FC0               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  3289  0014BC  0E01               	movlw	1
  3290  0014BE  EC04  F009         	call	_bsp_StartAutoTimer
  3291                           
  3292                           ;app.c: 69: bsp_StartAutoTimer(0,1);
  3293  0014C2  0E00               	movlw	0
  3294  0014C4  0100               	movlb	0	; () banked
  3295  0014C6  6FC1               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  3296  0014C8  0E01               	movlw	1
  3297  0014CA  6FC0               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  3298  0014CC  0E00               	movlw	0
  3299  0014CE  EC04  F009         	call	_bsp_StartAutoTimer
  3300  0014D2  0012               	return		;funcret
  3301  0014D4                     __end_of_App_System_Init:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           indf1	equ	0xFE7
  3313                           postinc1	equ	0xFE6
  3314                           fsr1h	equ	0xFE2
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           postdec2	equ	0xFDD
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function _bsp_StartAutoTimer *****************
  3324 ;; Defined at:
  3325 ;;		line 98 in file "source/timer.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  _id             1    wreg     unsigned char 
  3328 ;;  _period         2   14[BANK0 ] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  _id             1   16[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;Total ram usage:        3 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    4
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_App_System_Init
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text9
  3355  001208                     __ptext9:
  3356                           	opt stack 0
  3357  001208                     _bsp_StartAutoTimer:
  3358                           	opt stack 25
  3359                           
  3360                           ;incstack = 0
  3361                           ;bsp_StartAutoTimer@_id stored from wreg
  3362  001208  0100               	movlb	0	; () banked
  3363  00120A  6FC2               	movwf	bsp_StartAutoTimer@_id& (0+255),b
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;timer.c: 100: if (_id >= 2)
  3367  00120C  0E01               	movlw	1
  3368  00120E  0100               	movlb	0	; () banked
  3369  001210  65C2               	cpfsgt	bsp_StartAutoTimer@_id& (0+255),b
  3370  001212  D001               	goto	l556
  3371  001214                     
  3372                           ; BSR set to: 0
  3373  001214  D7FF               	goto	l558
  3374  001216                     l556:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;timer.c: 105: }
  3378                           ;timer.c: 107: INTCONbits.GIE = 0;INTCONbits.PEIE = 0;;
  3379  001216  9EF2               	bcf	intcon,7,c	;volatile
  3380  001218  9CF2               	bcf	intcon,6,c	;volatile
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;timer.c: 109: s_tTmr[_id].Count = _period;
  3384  00121A  0100               	movlb	0	; () banked
  3385  00121C  51C2               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  3386  00121E  0D06               	mullw	6
  3387  001220  0E02               	movlw	2
  3388  001222  26F3               	addwf	prodl,f,c
  3389  001224  0E00               	movlw	0
  3390  001226  22F4               	addwfc	prodh,f,c
  3391  001228  0E1B               	movlw	low _s_tTmr
  3392  00122A  24F3               	addwf	prodl,w,c
  3393  00122C  6ED9               	movwf	fsr2l,c
  3394  00122E  0E00               	movlw	high _s_tTmr
  3395  001230  20F4               	addwfc	prodh,w,c
  3396  001232  6EDA               	movwf	fsr2h,c
  3397  001234  C0C0  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  3398  001238  C0C1  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  3399                           
  3400                           ;timer.c: 110: s_tTmr[_id].PreLoad = _period;
  3401  00123C  0100               	movlb	0	; () banked
  3402  00123E  51C2               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  3403  001240  0D06               	mullw	6
  3404  001242  0E04               	movlw	4
  3405  001244  26F3               	addwf	prodl,f,c
  3406  001246  0E00               	movlw	0
  3407  001248  22F4               	addwfc	prodh,f,c
  3408  00124A  0E1B               	movlw	low _s_tTmr
  3409  00124C  24F3               	addwf	prodl,w,c
  3410  00124E  6ED9               	movwf	fsr2l,c
  3411  001250  0E00               	movlw	high _s_tTmr
  3412  001252  20F4               	addwfc	prodh,w,c
  3413  001254  6EDA               	movwf	fsr2h,c
  3414  001256  C0C0  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  3415  00125A  C0C1  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  3416                           
  3417                           ;timer.c: 111: s_tTmr[_id].Flag = 0;
  3418  00125E  0100               	movlb	0	; () banked
  3419  001260  51C2               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  3420  001262  0D06               	mullw	6
  3421  001264  0E01               	movlw	1
  3422  001266  26F3               	addwf	prodl,f,c
  3423  001268  0E00               	movlw	0
  3424  00126A  22F4               	addwfc	prodh,f,c
  3425  00126C  0E1B               	movlw	low _s_tTmr
  3426  00126E  24F3               	addwf	prodl,w,c
  3427  001270  6ED9               	movwf	fsr2l,c
  3428  001272  0E00               	movlw	high _s_tTmr
  3429  001274  20F4               	addwfc	prodh,w,c
  3430  001276  6EDA               	movwf	fsr2h,c
  3431  001278  0E00               	movlw	0
  3432  00127A  6EDF               	movwf	indf2,c
  3433                           
  3434                           ;timer.c: 112: s_tTmr[_id].Mode = TMR_AUTO_MODE;
  3435  00127C  0100               	movlb	0	; () banked
  3436  00127E  51C2               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  3437  001280  0D06               	mullw	6
  3438  001282  0E1B               	movlw	low _s_tTmr
  3439  001284  24F3               	addwf	prodl,w,c
  3440  001286  6ED9               	movwf	fsr2l,c
  3441  001288  0E00               	movlw	high _s_tTmr
  3442  00128A  20F4               	addwfc	prodh,w,c
  3443  00128C  6EDA               	movwf	fsr2h,c
  3444  00128E  0E01               	movlw	1
  3445  001290  6EDF               	movwf	indf2,c
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;timer.c: 114: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  3449  001292  8EF2               	bsf	intcon,7,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452  001294  8CF2               	bsf	intcon,6,c	;volatile
  3453                           
  3454                           ; BSR set to: 0
  3455  001296  0012               	return		;funcret
  3456  001298                     __end_of_bsp_StartAutoTimer:
  3457                           	opt stack 0
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           postinc0	equ	0xFEE
  3466                           wreg	equ	0xFE8
  3467                           indf1	equ	0xFE7
  3468                           postinc1	equ	0xFE6
  3469                           fsr1h	equ	0xFE2
  3470                           fsr1l	equ	0xFE1
  3471                           indf2	equ	0xFDF
  3472                           postinc2	equ	0xFDE
  3473                           postdec2	equ	0xFDD
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _SetSysClock *****************
  3479 ;; Defined at:
  3480 ;;		line 607 in file "source/app.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		None
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    4
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_App_System_Init
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text10
  3509  0017E4                     __ptext10:
  3510                           	opt stack 0
  3511  0017E4                     _SetSysClock:
  3512                           	opt stack 25
  3513                           
  3514                           ;app.c: 610: OSCTUNEbits.PLLEN = 1;
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;incstack = 0
  3518  0017E4  8C9B               	bsf	3995,6,c	;volatile
  3519  0017E6  0012               	return		;funcret
  3520  0017E8                     __end_of_SetSysClock:
  3521                           	opt stack 0
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           prodh	equ	0xFF4
  3527                           prodl	equ	0xFF3
  3528                           intcon	equ	0xFF2
  3529                           postinc0	equ	0xFEE
  3530                           wreg	equ	0xFE8
  3531                           indf1	equ	0xFE7
  3532                           postinc1	equ	0xFE6
  3533                           fsr1h	equ	0xFE2
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _RemoteCtrl_Init *****************
  3543 ;; Defined at:
  3544 ;;		line 13 in file "source/remote_ctrl.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, status,2
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    4
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_App_System_Init
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text11
  3573  00160C                     __ptext11:
  3574                           	opt stack 0
  3575  00160C                     _RemoteCtrl_Init:
  3576                           	opt stack 25
  3577                           
  3578                           ;remote_ctrl.c: 16: ANCON1bits.ANSEL9 = 0;
  3579                           
  3580                           ;incstack = 0
  3581  00160C  010F               	movlb	15	; () banked
  3582  00160E  935C               	bcf	92,1,b	;volatile
  3583                           
  3584                           ; BSR set to: 15
  3585                           
  3586                           ;remote_ctrl.c: 17: do { TRISB4 = 1; } while(0);
  3587  001610  8893               	bsf	3987,4,c	;volatile
  3588                           
  3589                           ; BSR set to: 15
  3590                           ;remote_ctrl.c: 18: IOCBbits.IOCB4 = 1;
  3591  001612  010F               	movlb	15	; () banked
  3592  001614  895A               	bsf	90,4,b	;volatile
  3593                           
  3594                           ;remote_ctrl.c: 19: INTCONbits.RBIF = 0;
  3595  001616  90F2               	bcf	intcon,0,c	;volatile
  3596                           
  3597                           ;remote_ctrl.c: 20: INTCONbits.RBIE = 1;
  3598  001618  86F2               	bsf	intcon,3,c	;volatile
  3599                           
  3600                           ;remote_ctrl.c: 21: INTCON2bits.RBIP = 1;
  3601  00161A  80F1               	bsf	intcon2,0,c	;volatile
  3602                           
  3603                           ; BSR set to: 15
  3604                           ;remote_ctrl.c: 24: s_tBtn.LongTime = 100;
  3605  00161C  0E00               	movlw	0
  3606  00161E  0100               	movlb	0	; () banked
  3607  001620  6FAE               	movwf	(_s_tBtn+4)& (0+255),b
  3608  001622  0E64               	movlw	100
  3609  001624  6FAD               	movwf	(_s_tBtn+3)& (0+255),b
  3610                           
  3611                           ;remote_ctrl.c: 25: s_tBtn.Count = 2 / 2;
  3612  001626  0E01               	movlw	1
  3613  001628  0100               	movlb	0	; () banked
  3614  00162A  6FAA               	movwf	_s_tBtn& (0+255),b
  3615                           
  3616                           ;remote_ctrl.c: 26: s_tBtn.State = 0;
  3617  00162C  0E00               	movlw	0
  3618  00162E  0100               	movlb	0	; () banked
  3619  001630  6FAF               	movwf	(_s_tBtn+5)& (0+255),b
  3620                           
  3621                           ;remote_ctrl.c: 27: s_tBtn.RepeatSpeed = 0;
  3622  001632  0E00               	movlw	0
  3623  001634  0100               	movlb	0	; () banked
  3624  001636  6FB0               	movwf	(_s_tBtn+6)& (0+255),b
  3625                           
  3626                           ;remote_ctrl.c: 28: s_tBtn.RepeatCount = 0;
  3627  001638  0E00               	movlw	0
  3628  00163A  0100               	movlb	0	; () banked
  3629  00163C  6FB1               	movwf	(_s_tBtn+7)& (0+255),b
  3630                           
  3631                           ; BSR set to: 0
  3632  00163E  0012               	return		;funcret
  3633  001640                     __end_of_RemoteCtrl_Init:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           intcon2	equ	0xFF1
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf1	equ	0xFE7
  3646                           postinc1	equ	0xFE6
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _RLY_Init *****************
  3657 ;; Defined at:
  3658 ;;		line 11 in file "source/rly.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		None
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    4
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_App_System_Init
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text12
  3687  001772                     __ptext12:
  3688                           	opt stack 0
  3689  001772                     _RLY_Init:
  3690                           	opt stack 25
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;incstack = 0
  3694                           ;rly.c: 13: do { LATC1 = 0; } while(0);
  3695  001772  928B               	bcf	3979,1,c	;volatile
  3696  001774  D000               	goto	l603
  3697  001776                     l603:
  3698  001776  908B               	bcf	3979,0,c	;volatile
  3699  001778  D000               	goto	l605
  3700  00177A                     l605:
  3701  00177A  9E8B               	bcf	3979,7,c	;volatile
  3702  00177C  D000               	goto	l607
  3703  00177E                     l607:
  3704  00177E  988B               	bcf	3979,4,c	;volatile
  3705  001780  D000               	goto	l609
  3706  001782                     l609:
  3707  001782  9294               	bcf	3988,1,c	;volatile
  3708  001784  D000               	goto	l611
  3709  001786                     l611:
  3710  001786  9094               	bcf	3988,0,c	;volatile
  3711  001788  D000               	goto	l613
  3712  00178A                     l613:
  3713  00178A  9E94               	bcf	3988,7,c	;volatile
  3714  00178C  D000               	goto	l615
  3715  00178E                     l615:
  3716  00178E  9894               	bcf	3988,4,c	;volatile
  3717  001790  0012               	return	
  3718  001792  0012               	return		;funcret
  3719  001794                     __end_of_RLY_Init:
  3720                           	opt stack 0
  3721                           tblptru	equ	0xFF8
  3722                           tblptrh	equ	0xFF7
  3723                           tblptrl	equ	0xFF6
  3724                           tablat	equ	0xFF5
  3725                           prodh	equ	0xFF4
  3726                           prodl	equ	0xFF3
  3727                           intcon	equ	0xFF2
  3728                           intcon2	equ	0xFF1
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           indf1	equ	0xFE7
  3732                           postinc1	equ	0xFE6
  3733                           fsr1h	equ	0xFE2
  3734                           fsr1l	equ	0xFE1
  3735                           indf2	equ	0xFDF
  3736                           postinc2	equ	0xFDE
  3737                           postdec2	equ	0xFDD
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742 ;; *************** function _ECAN_Init *****************
  3743 ;; Defined at:
  3744 ;;		line 31 in file "source/ecan.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    4
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_App_System_Init
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text13
  3773  001160                     __ptext13:
  3774                           	opt stack 0
  3775  001160                     _ECAN_Init:
  3776                           	opt stack 25
  3777                           
  3778                           ;incstack = 0
  3779                           ;ecan.c: 33: do { TRISB5 = 0; } while(0);
  3780  001160  9A93               	bcf	3987,5,c	;volatile
  3781  001162  D000               	goto	l443
  3782  001164                     l443:
  3783  001164  9493               	bcf	3987,2,c	;volatile
  3784  001166  D000               	goto	l445
  3785  001168                     l445:
  3786  001168  8693               	bsf	3987,3,c	;volatile
  3787  00116A  D000               	goto	l3267
  3788  00116C                     l3267:
  3789                           
  3790                           ;ecan.c: 37: CANCON = 0x80;
  3791  00116C  0E80               	movlw	128
  3792  00116E  6E6F               	movwf	3951,c	;volatile
  3793                           
  3794                           ;ecan.c: 38: while(!(CANSTATbits.OPMODE ==0x04));
  3795  001170  D000               	goto	l3269
  3796  001172                     l3269:
  3797  001172  386E               	swapf	3950,w,c	;volatile
  3798  001174  32E8               	rrcf	wreg,f,c
  3799  001176  0B07               	andlw	7
  3800  001178  0A04               	xorlw	4
  3801  00117A  A4D8               	btfss	status,2,c
  3802  00117C  D7FA               	goto	l3269
  3803                           
  3804                           ;ecan.c: 40: ECANCON = 0x00;
  3805  00117E  0E00               	movlw	0
  3806  001180  6E72               	movwf	3954,c	;volatile
  3807                           
  3808                           ;ecan.c: 48: if (0==1)
  3809  001182  D005               	goto	l3277
  3810                           
  3811                           ;ecan.c: 49: {
  3812                           ;ecan.c: 51: BRGCON1 = 0x13;
  3813  001184  0E13               	movlw	19
  3814  001186  D007               	goto	L17
  3815                           
  3816                           ; BSR set to: 14
  3817                           ;ecan.c: 55: else if (0==1)
  3818                           
  3819                           ;ecan.c: 54: }
  3820                           
  3821                           ;ecan.c: 53: BRGCON3 = 0x02;
  3822                           
  3823                           ;ecan.c: 52: BRGCON2 = 0x90;
  3824  001188  D002               	goto	l3277
  3825                           
  3826                           ; BSR set to: 14
  3827                           ;ecan.c: 56: {
  3828                           ;ecan.c: 58: BRGCON1 = 0x0F;
  3829  00118A  0E0F               	movlw	15
  3830  00118C  D004               	goto	L17
  3831  00118E                     l3277:
  3832                           
  3833                           ;ecan.c: 63: {
  3834                           ;ecan.c: 65: BRGCON1 = 0x03;
  3835  00118E  0E03               	movlw	3
  3836  001190  D002               	goto	L17
  3837                           
  3838                           ; BSR set to: 14
  3839                           ;ecan.c: 69: else if (0==1)
  3840                           
  3841                           ;ecan.c: 68: }
  3842                           
  3843                           ;ecan.c: 67: BRGCON3 = 0x02;
  3844                           
  3845                           ;ecan.c: 66: BRGCON2 = 0x90;
  3846  001192  D00A               	goto	l451
  3847                           
  3848                           ; BSR set to: 14
  3849                           ;ecan.c: 70: {
  3850                           ;ecan.c: 72: BRGCON1 = 0x01;
  3851  001194  0E01               	movlw	1
  3852  001196                     L17:
  3853  001196  010E               	movlb	14	; () banked
  3854  001198  6F43               	movwf	67,b	;volatile
  3855                           
  3856                           ;ecan.c: 73: BRGCON2 = 0x90;
  3857  00119A  0E90               	movlw	144
  3858  00119C  010E               	movlb	14	; () banked
  3859  00119E  6F44               	movwf	68,b	;volatile
  3860                           
  3861                           ;ecan.c: 74: BRGCON3 = 0x02;
  3862  0011A0  0E02               	movlw	2
  3863  0011A2  010E               	movlb	14	; () banked
  3864  0011A4  6F45               	movwf	69,b	;volatile
  3865                           
  3866                           ; BSR set to: 14
  3867                           
  3868                           ; BSR set to: 14
  3869  0011A6  D000               	goto	l451
  3870  0011A8                     l451:
  3871                           
  3872                           ; BSR set to: 14
  3873                           ;ecan.c: 75: }
  3874                           ;ecan.c: 78: RXM0EIDH = 0x00;
  3875  0011A8  0E00               	movlw	0
  3876  0011AA  010E               	movlb	14	; () banked
  3877  0011AC  6FFA               	movwf	250,b	;volatile
  3878                           
  3879                           ;ecan.c: 79: RXM0EIDL = 0x00;
  3880  0011AE  0E00               	movlw	0
  3881  0011B0  010E               	movlb	14	; () banked
  3882  0011B2  6FFB               	movwf	251,b	;volatile
  3883                           
  3884                           ; BSR set to: 14
  3885                           ;ecan.c: 80: RXM0SIDH = 0xFF;
  3886  0011B4  010E               	movlb	14	; () banked
  3887  0011B6  69F8               	setf	248,b	;volatile
  3888                           
  3889                           ;ecan.c: 81: RXM0SIDL = 0xE0;
  3890  0011B8  0EE0               	movlw	224
  3891  0011BA  010E               	movlb	14	; () banked
  3892  0011BC  6FF9               	movwf	249,b	;volatile
  3893                           
  3894                           ;ecan.c: 86: RXFCON0 = 0x01;
  3895  0011BE  0E01               	movlw	1
  3896  0011C0  010E               	movlb	14	; () banked
  3897  0011C2  6F46               	movwf	70,b	;volatile
  3898                           
  3899                           ;ecan.c: 87: RXFCON1 = 0x00;
  3900  0011C4  0E00               	movlw	0
  3901  0011C6  010E               	movlb	14	; () banked
  3902  0011C8  6F47               	movwf	71,b	;volatile
  3903                           
  3904                           ;ecan.c: 92: RXF0EIDH = 0x00;
  3905  0011CA  0E00               	movlw	0
  3906  0011CC  010E               	movlb	14	; () banked
  3907  0011CE  6FE2               	movwf	226,b	;volatile
  3908                           
  3909                           ;ecan.c: 93: RXF0EIDL = 0x00;
  3910  0011D0  0E00               	movlw	0
  3911  0011D2  010E               	movlb	14	; () banked
  3912  0011D4  6FE3               	movwf	227,b	;volatile
  3913                           
  3914                           ;ecan.c: 94: RXF0SIDH = (uint8_t)(0X110>>3);
  3915  0011D6  0E22               	movlw	34
  3916  0011D8  010E               	movlb	14	; () banked
  3917  0011DA  6FE0               	movwf	224,b	;volatile
  3918                           
  3919                           ;ecan.c: 95: RXF0SIDL = (uint8_t)(0X110<<5)&0xE0;
  3920  0011DC  0E00               	movlw	0
  3921  0011DE  010E               	movlb	14	; () banked
  3922  0011E0  6FE1               	movwf	225,b	;volatile
  3923                           
  3924                           ;ecan.c: 107: TXB0CON=0X03;
  3925  0011E2  0E03               	movlw	3
  3926  0011E4  010F               	movlb	15	; () banked
  3927  0011E6  6F20               	movwf	32,b	;volatile
  3928                           
  3929                           ;ecan.c: 108: RXB0CON = 0x20;
  3930  0011E8  0E20               	movlw	32
  3931  0011EA  6E60               	movwf	3936,c	;volatile
  3932                           
  3933                           ;ecan.c: 112: CANCON = 0x00;
  3934  0011EC  0E00               	movlw	0
  3935  0011EE  6E6F               	movwf	3951,c	;volatile
  3936                           
  3937                           ; BSR set to: 15
  3938                           
  3939                           ;ecan.c: 113: while(CANSTATbits.OPMODE==0x00);
  3940  0011F0  D000               	goto	l3283
  3941  0011F2                     l3283:
  3942  0011F2  386E               	swapf	3950,w,c	;volatile
  3943  0011F4  32E8               	rrcf	wreg,f,c
  3944  0011F6  0B07               	andlw	7
  3945  0011F8  0900               	iorlw	0
  3946  0011FA  B4D8               	btfsc	status,2,c
  3947  0011FC  D7FA               	goto	l3283
  3948                           
  3949                           ;ecan.c: 115: PIR5=0X00;
  3950  0011FE  0E00               	movlw	0
  3951  001200  6E77               	movwf	3959,c	;volatile
  3952                           
  3953                           ;ecan.c: 116: PIE5bits.RXB0IE = 1;
  3954  001202  8076               	bsf	3958,0,c	;volatile
  3955                           
  3956                           ;ecan.c: 117: IPR5bits.RXB0IP = 1;
  3957  001204  8078               	bsf	3960,0,c	;volatile
  3958  001206  0012               	return		;funcret
  3959  001208                     __end_of_ECAN_Init:
  3960                           	opt stack 0
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           prodh	equ	0xFF4
  3966                           prodl	equ	0xFF3
  3967                           intcon	equ	0xFF2
  3968                           intcon2	equ	0xFF1
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf1	equ	0xFE7
  3972                           postinc1	equ	0xFE6
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           postdec2	equ	0xFDD
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _ConfigTimer0 *****************
  3983 ;; Defined at:
  3984 ;;		line 16 in file "source/timer.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  ms              2   39[BANK0 ] unsigned int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  tmp             4   45[BANK0 ] unsigned long 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;Total ram usage:       10 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    5
  4005 ;; This function calls:
  4006 ;;		___lldiv
  4007 ;;		___lmul
  4008 ;; This function is called by:
  4009 ;;		_App_System_Init
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text14
  4014  000E28                     __ptext14:
  4015                           	opt stack 0
  4016  000E28                     _ConfigTimer0:
  4017                           	opt stack 24
  4018                           
  4019                           ;timer.c: 18: uint32_t tmp;
  4020                           ;timer.c: 20: T0CON = 0X02;
  4021                           
  4022                           ;incstack = 0
  4023  000E28  0E02               	movlw	2
  4024  000E2A  6ED5               	movwf	4053,c	;volatile
  4025                           
  4026                           ;timer.c: 21: T0CONbits.T08BIT = 0;
  4027  000E2C  9CD5               	bcf	4053,6,c	;volatile
  4028                           
  4029                           ;timer.c: 22: tmp = 32000000UL/4/8;
  4030  000E2E  0E40               	movlw	64
  4031  000E30  0100               	movlb	0	; () banked
  4032  000E32  6FDF               	movwf	ConfigTimer0@tmp& (0+255),b
  4033  000E34  0E42               	movlw	66
  4034  000E36  6FE0               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  4035  000E38  0E0F               	movlw	15
  4036  000E3A  6FE1               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  4037  000E3C  0E00               	movlw	0
  4038  000E3E  6FE2               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;timer.c: 23: tmp = (tmp * ms)/1000;
  4042  000E40  C0D9  F0C0         	movff	ConfigTimer0@ms,___lmul@multiplier
  4043  000E44  C0DA  F0C1         	movff	ConfigTimer0@ms+1,___lmul@multiplier+1
  4044  000E48  0100               	movlb	0	; () banked
  4045  000E4A  6BC2               	clrf	(___lmul@multiplier+2)& (0+255),b
  4046  000E4C  6BC3               	clrf	(___lmul@multiplier+3)& (0+255),b
  4047  000E4E  C0DF  F0C4         	movff	ConfigTimer0@tmp,___lmul@multiplicand
  4048  000E52  C0E0  F0C5         	movff	ConfigTimer0@tmp+1,___lmul@multiplicand+1
  4049  000E56  C0E1  F0C6         	movff	ConfigTimer0@tmp+2,___lmul@multiplicand+2
  4050  000E5A  C0E2  F0C7         	movff	ConfigTimer0@tmp+3,___lmul@multiplicand+3
  4051  000E5E  EC8D  F009         	call	___lmul	;wreg free
  4052  000E62  C0C0  F0CC         	movff	?___lmul,___lldiv@dividend
  4053  000E66  C0C1  F0CD         	movff	?___lmul+1,___lldiv@dividend+1
  4054  000E6A  C0C2  F0CE         	movff	?___lmul+2,___lldiv@dividend+2
  4055  000E6E  C0C3  F0CF         	movff	?___lmul+3,___lldiv@dividend+3
  4056  000E72  0EE8               	movlw	232
  4057  000E74  0100               	movlb	0	; () banked
  4058  000E76  6FD0               	movwf	___lldiv@divisor& (0+255),b
  4059  000E78  0E03               	movlw	3
  4060  000E7A  6FD1               	movwf	(___lldiv@divisor+1)& (0+255),b
  4061  000E7C  0E00               	movlw	0
  4062  000E7E  6FD2               	movwf	(___lldiv@divisor+2)& (0+255),b
  4063  000E80  0E00               	movlw	0
  4064  000E82  6FD3               	movwf	(___lldiv@divisor+3)& (0+255),b
  4065  000E84  EC4D  F008         	call	___lldiv	;wreg free
  4066  000E88  C0CC  F0DF         	movff	?___lldiv,ConfigTimer0@tmp
  4067  000E8C  C0CD  F0E0         	movff	?___lldiv+1,ConfigTimer0@tmp+1
  4068  000E90  C0CE  F0E1         	movff	?___lldiv+2,ConfigTimer0@tmp+2
  4069  000E94  C0CF  F0E2         	movff	?___lldiv+3,ConfigTimer0@tmp+3
  4070                           
  4071                           ;timer.c: 24: tmp = 65536 - tmp;
  4072  000E98  C0DF  F0DB         	movff	ConfigTimer0@tmp,??_ConfigTimer0
  4073  000E9C  C0E0  F0DC         	movff	ConfigTimer0@tmp+1,??_ConfigTimer0+1
  4074  000EA0  C0E1  F0DD         	movff	ConfigTimer0@tmp+2,??_ConfigTimer0+2
  4075  000EA4  C0E2  F0DE         	movff	ConfigTimer0@tmp+3,??_ConfigTimer0+3
  4076  000EA8  0100               	movlb	0	; () banked
  4077  000EAA  1FDB               	comf	??_ConfigTimer0& (0+255),f,b
  4078  000EAC  1FDC               	comf	(??_ConfigTimer0+1)& (0+255),f,b
  4079  000EAE  1FDD               	comf	(??_ConfigTimer0+2)& (0+255),f,b
  4080  000EB0  1FDE               	comf	(??_ConfigTimer0+3)& (0+255),f,b
  4081  000EB2  2BDB               	incf	??_ConfigTimer0& (0+255),f,b
  4082  000EB4  0E00               	movlw	0
  4083  000EB6  23DC               	addwfc	(??_ConfigTimer0+1)& (0+255),f,b
  4084  000EB8  23DD               	addwfc	(??_ConfigTimer0+2)& (0+255),f,b
  4085  000EBA  23DE               	addwfc	(??_ConfigTimer0+3)& (0+255),f,b
  4086  000EBC  0E00               	movlw	0
  4087  000EBE  0100               	movlb	0	; () banked
  4088  000EC0  25DB               	addwf	??_ConfigTimer0& (0+255),w,b
  4089  000EC2  0100               	movlb	0	; () banked
  4090  000EC4  6FDF               	movwf	ConfigTimer0@tmp& (0+255),b
  4091  000EC6  0E00               	movlw	0
  4092  000EC8  0100               	movlb	0	; () banked
  4093  000ECA  21DC               	addwfc	(??_ConfigTimer0+1)& (0+255),w,b
  4094  000ECC  0100               	movlb	0	; () banked
  4095  000ECE  6FE0               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  4096  000ED0  0E01               	movlw	1
  4097  000ED2  0100               	movlb	0	; () banked
  4098  000ED4  21DD               	addwfc	(??_ConfigTimer0+2)& (0+255),w,b
  4099  000ED6  0100               	movlb	0	; () banked
  4100  000ED8  6FE1               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  4101  000EDA  0E00               	movlw	0
  4102  000EDC  0100               	movlb	0	; () banked
  4103  000EDE  21DE               	addwfc	(??_ConfigTimer0+3)& (0+255),w,b
  4104  000EE0  0100               	movlb	0	; () banked
  4105  000EE2  6FE2               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;timer.c: 25: T0RH = (uint8_t)(tmp>>8);
  4109  000EE4  C0E0  F089         	movff	ConfigTimer0@tmp+1,_T0RH
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;timer.c: 26: T0RL = (uint8_t)tmp;
  4113  000EE8  C0DF  F08A         	movff	ConfigTimer0@tmp,_T0RL
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;timer.c: 27: T0CONbits.TMR0ON = 1;
  4117  000EEC  8ED5               	bsf	4053,7,c	;volatile
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;timer.c: 28: TMR0H = T0RH;
  4121  000EEE  C089  FFD7         	movff	_T0RH,4055	;volatile
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;timer.c: 29: TMR0L = T0RL;
  4125  000EF2  C08A  FFD6         	movff	_T0RL,4054	;volatile
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;timer.c: 30: INTCONbits.TMR0IF = 0;
  4129  000EF6  94F2               	bcf	intcon,2,c	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;timer.c: 31: INTCONbits.TMR0IE = 1;
  4133  000EF8  8AF2               	bsf	intcon,5,c	;volatile
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;timer.c: 32: INTCON2bits.TMR0IP = 0;
  4137  000EFA  94F1               	bcf	intcon2,2,c	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140  000EFC  0012               	return		;funcret
  4141  000EFE                     __end_of_ConfigTimer0:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           intcon2	equ	0xFF1
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           indf1	equ	0xFE7
  4154                           postinc1	equ	0xFE6
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___lmul *****************
  4165 ;; Defined at:
  4166 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  multiplier      4   14[BANK0 ] unsigned long 
  4169 ;;  multiplicand    4   18[BANK0 ] unsigned long 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  product         4   22[BANK0 ] unsigned long 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  4   14[BANK0 ] unsigned long 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4181 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;Total ram usage:       12 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    4
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_ConfigTimer0
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text15
  4196  00131A                     __ptext15:
  4197                           	opt stack 0
  4198  00131A                     ___lmul:
  4199                           	opt stack 24
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;incstack = 0
  4203  00131A  0E00               	movlw	0
  4204  00131C  0100               	movlb	0	; () banked
  4205  00131E  6FC8               	movwf	___lmul@product& (0+255),b
  4206  001320  0E00               	movlw	0
  4207  001322  6FC9               	movwf	(___lmul@product+1)& (0+255),b
  4208  001324  0E00               	movlw	0
  4209  001326  6FCA               	movwf	(___lmul@product+2)& (0+255),b
  4210  001328  0E00               	movlw	0
  4211  00132A  6FCB               	movwf	(___lmul@product+3)& (0+255),b
  4212  00132C  D000               	goto	l3225
  4213  00132E                     l3225:
  4214                           
  4215                           ; BSR set to: 0
  4216  00132E  0100               	movlb	0	; () banked
  4217  001330  A1C0               	btfss	___lmul@multiplier& (0+255),0,b
  4218  001332  D011               	goto	l3229
  4219                           
  4220                           ; BSR set to: 0
  4221  001334  0100               	movlb	0	; () banked
  4222  001336  51C4               	movf	___lmul@multiplicand& (0+255),w,b
  4223  001338  0100               	movlb	0	; () banked
  4224  00133A  27C8               	addwf	___lmul@product& (0+255),f,b
  4225  00133C  0100               	movlb	0	; () banked
  4226  00133E  51C5               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  4227  001340  0100               	movlb	0	; () banked
  4228  001342  23C9               	addwfc	(___lmul@product+1)& (0+255),f,b
  4229  001344  0100               	movlb	0	; () banked
  4230  001346  51C6               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  4231  001348  0100               	movlb	0	; () banked
  4232  00134A  23CA               	addwfc	(___lmul@product+2)& (0+255),f,b
  4233  00134C  0100               	movlb	0	; () banked
  4234  00134E  51C7               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  4235  001350  0100               	movlb	0	; () banked
  4236  001352  23CB               	addwfc	(___lmul@product+3)& (0+255),f,b
  4237  001354  D000               	goto	l3229
  4238  001356                     l3229:
  4239                           
  4240                           ; BSR set to: 0
  4241  001356  0100               	movlb	0	; () banked
  4242  001358  90D8               	bcf	status,0,c
  4243  00135A  37C4               	rlcf	___lmul@multiplicand& (0+255),f,b
  4244  00135C  37C5               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  4245  00135E  37C6               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  4246  001360  37C7               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  4247                           
  4248                           ; BSR set to: 0
  4249  001362  0100               	movlb	0	; () banked
  4250  001364  90D8               	bcf	status,0,c
  4251  001366  33C3               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  4252  001368  33C2               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  4253  00136A  33C1               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  4254  00136C  33C0               	rrcf	___lmul@multiplier& (0+255),f,b
  4255  00136E  0100               	movlb	0	; () banked
  4256  001370  51C0               	movf	___lmul@multiplier& (0+255),w,b
  4257  001372  0100               	movlb	0	; () banked
  4258  001374  11C1               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  4259  001376  0100               	movlb	0	; () banked
  4260  001378  11C2               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  4261  00137A  0100               	movlb	0	; () banked
  4262  00137C  11C3               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  4263  00137E  A4D8               	btfss	status,2,c
  4264  001380  D7D6               	goto	l3225
  4265                           
  4266                           ; BSR set to: 0
  4267  001382  C0C8  F0C0         	movff	___lmul@product,?___lmul
  4268  001386  C0C9  F0C1         	movff	___lmul@product+1,?___lmul+1
  4269  00138A  C0CA  F0C2         	movff	___lmul@product+2,?___lmul+2
  4270  00138E  C0CB  F0C3         	movff	___lmul@product+3,?___lmul+3
  4271                           
  4272                           ; BSR set to: 0
  4273  001392  0012               	return		;funcret
  4274  001394                     __end_of___lmul:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           intcon2	equ	0xFF1
  4284                           postinc0	equ	0xFEE
  4285                           wreg	equ	0xFE8
  4286                           indf1	equ	0xFE7
  4287                           postinc1	equ	0xFE6
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           indf2	equ	0xFDF
  4291                           postinc2	equ	0xFDE
  4292                           postdec2	equ	0xFDD
  4293                           fsr2h	equ	0xFDA
  4294                           fsr2l	equ	0xFD9
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function ___lldiv *****************
  4298 ;; Defined at:
  4299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  dividend        4   26[BANK0 ] unsigned long 
  4302 ;;  divisor         4   30[BANK0 ] unsigned long 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  quotient        4   34[BANK0 ] unsigned long 
  4305 ;;  counter         1   38[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  4   26[BANK0 ] unsigned long 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4315 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4318 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;Total ram usage:       13 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    4
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_ConfigTimer0
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text16
  4330  00109A                     __ptext16:
  4331                           	opt stack 0
  4332  00109A                     ___lldiv:
  4333                           	opt stack 24
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;incstack = 0
  4337  00109A  0E00               	movlw	0
  4338  00109C  0100               	movlb	0	; () banked
  4339  00109E  6FD4               	movwf	___lldiv@quotient& (0+255),b
  4340  0010A0  0E00               	movlw	0
  4341  0010A2  6FD5               	movwf	(___lldiv@quotient+1)& (0+255),b
  4342  0010A4  0E00               	movlw	0
  4343  0010A6  6FD6               	movwf	(___lldiv@quotient+2)& (0+255),b
  4344  0010A8  0E00               	movlw	0
  4345  0010AA  6FD7               	movwf	(___lldiv@quotient+3)& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348  0010AC  0100               	movlb	0	; () banked
  4349  0010AE  51D0               	movf	___lldiv@divisor& (0+255),w,b
  4350  0010B0  0100               	movlb	0	; () banked
  4351  0010B2  11D1               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4352  0010B4  0100               	movlb	0	; () banked
  4353  0010B6  11D2               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4354  0010B8  0100               	movlb	0	; () banked
  4355  0010BA  11D3               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4356  0010BC  B4D8               	btfsc	status,2,c
  4357  0010BE  D047               	goto	l1163
  4358                           
  4359                           ; BSR set to: 0
  4360  0010C0  0E01               	movlw	1
  4361  0010C2  0100               	movlb	0	; () banked
  4362  0010C4  6FD8               	movwf	___lldiv@counter& (0+255),b
  4363  0010C6  D009               	goto	l3241
  4364  0010C8                     l3239:
  4365                           
  4366                           ; BSR set to: 0
  4367  0010C8  0100               	movlb	0	; () banked
  4368  0010CA  90D8               	bcf	status,0,c
  4369  0010CC  37D0               	rlcf	___lldiv@divisor& (0+255),f,b
  4370  0010CE  37D1               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4371  0010D0  37D2               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4372  0010D2  37D3               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4373  0010D4  0100               	movlb	0	; () banked
  4374  0010D6  2BD8               	incf	___lldiv@counter& (0+255),f,b
  4375  0010D8  D000               	goto	l3241
  4376  0010DA                     l3241:
  4377                           
  4378                           ; BSR set to: 0
  4379  0010DA  0100               	movlb	0	; () banked
  4380  0010DC  BFD3               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  4381  0010DE  D002               	goto	l3243
  4382  0010E0  D7F3               	goto	l3239
  4383                           
  4384                           ; BSR set to: 0
  4385  0010E2  D000               	goto	l3243
  4386  0010E4                     l3243:
  4387                           
  4388                           ; BSR set to: 0
  4389  0010E4  0100               	movlb	0	; () banked
  4390  0010E6  90D8               	bcf	status,0,c
  4391  0010E8  37D4               	rlcf	___lldiv@quotient& (0+255),f,b
  4392  0010EA  37D5               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4393  0010EC  37D6               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4394  0010EE  37D7               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4395                           
  4396                           ; BSR set to: 0
  4397  0010F0  0100               	movlb	0	; () banked
  4398  0010F2  51D0               	movf	___lldiv@divisor& (0+255),w,b
  4399  0010F4  0100               	movlb	0	; () banked
  4400  0010F6  5DCC               	subwf	___lldiv@dividend& (0+255),w,b
  4401  0010F8  0100               	movlb	0	; () banked
  4402  0010FA  51D1               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4403  0010FC  0100               	movlb	0	; () banked
  4404  0010FE  59CD               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4405  001100  0100               	movlb	0	; () banked
  4406  001102  51D2               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4407  001104  0100               	movlb	0	; () banked
  4408  001106  59CE               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4409  001108  0100               	movlb	0	; () banked
  4410  00110A  51D3               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4411  00110C  0100               	movlb	0	; () banked
  4412  00110E  59CF               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4413  001110  A0D8               	btfss	status,0,c
  4414  001112  D013               	goto	l3251
  4415                           
  4416                           ; BSR set to: 0
  4417  001114  0100               	movlb	0	; () banked
  4418  001116  51D0               	movf	___lldiv@divisor& (0+255),w,b
  4419  001118  0100               	movlb	0	; () banked
  4420  00111A  5FCC               	subwf	___lldiv@dividend& (0+255),f,b
  4421  00111C  0100               	movlb	0	; () banked
  4422  00111E  51D1               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4423  001120  0100               	movlb	0	; () banked
  4424  001122  5BCD               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4425  001124  0100               	movlb	0	; () banked
  4426  001126  51D2               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4427  001128  0100               	movlb	0	; () banked
  4428  00112A  5BCE               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4429  00112C  0100               	movlb	0	; () banked
  4430  00112E  51D3               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4431  001130  0100               	movlb	0	; () banked
  4432  001132  5BCF               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4433                           
  4434                           ; BSR set to: 0
  4435  001134  0100               	movlb	0	; () banked
  4436  001136  81D4               	bsf	___lldiv@quotient& (0+255),0,b
  4437  001138  D000               	goto	l3251
  4438  00113A                     l3251:
  4439                           
  4440                           ; BSR set to: 0
  4441  00113A  0100               	movlb	0	; () banked
  4442  00113C  90D8               	bcf	status,0,c
  4443  00113E  33D3               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4444  001140  33D2               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4445  001142  33D1               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4446  001144  33D0               	rrcf	___lldiv@divisor& (0+255),f,b
  4447                           
  4448                           ; BSR set to: 0
  4449  001146  0100               	movlb	0	; () banked
  4450  001148  2FD8               	decfsz	___lldiv@counter& (0+255),f,b
  4451  00114A  D7CC               	goto	l3243
  4452  00114C  D000               	goto	l1163
  4453  00114E                     l1163:
  4454                           
  4455                           ; BSR set to: 0
  4456  00114E  C0D4  F0CC         	movff	___lldiv@quotient,?___lldiv
  4457  001152  C0D5  F0CD         	movff	___lldiv@quotient+1,?___lldiv+1
  4458  001156  C0D6  F0CE         	movff	___lldiv@quotient+2,?___lldiv+2
  4459  00115A  C0D7  F0CF         	movff	___lldiv@quotient+3,?___lldiv+3
  4460                           
  4461                           ; BSR set to: 0
  4462  00115E  0012               	return		;funcret
  4463  001160                     __end_of___lldiv:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodh	equ	0xFF4
  4470                           prodl	equ	0xFF3
  4471                           intcon	equ	0xFF2
  4472                           intcon2	equ	0xFF1
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           indf1	equ	0xFE7
  4476                           postinc1	equ	0xFE6
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           postinc2	equ	0xFDE
  4481                           postdec2	equ	0xFDD
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _CAN_SetMode *****************
  4487 ;; Defined at:
  4488 ;;		line 142 in file "source/ecan.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  mode            1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  mode            1   14[BANK0 ] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;		None               void
  4495 ;; Registers used:
  4496 ;;		wreg, status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;Total ram usage:        1 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_App_System_Init
  4513 ;;		_SysEnterSleep
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text17
  4518  0017CC                     __ptext17:
  4519                           	opt stack 0
  4520  0017CC                     _CAN_SetMode:
  4521                           	opt stack 25
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;incstack = 0
  4525                           ;CAN_SetMode@mode stored from wreg
  4526  0017CC  0100               	movlb	0	; () banked
  4527  0017CE  6FC0               	movwf	CAN_SetMode@mode& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;ecan.c: 144: if(mode == 0)
  4531  0017D0  0100               	movlb	0	; () banked
  4532  0017D2  51C0               	movf	CAN_SetMode@mode& (0+255),w,b
  4533  0017D4  0100               	movlb	0	; () banked
  4534  0017D6  A4D8               	btfss	status,2,c
  4535  0017D8  D002               	goto	l467
  4536                           
  4537                           ; BSR set to: 0
  4538                           
  4539                           ;ecan.c: 145: {
  4540                           ;ecan.c: 146: do { LATB5 = 0; } while(0);
  4541  0017DA  9A8A               	bcf	3978,5,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;ecan.c: 147: }
  4545  0017DC  0012               	return	
  4546  0017DE                     l467:
  4547                           
  4548                           ; BSR set to: 0
  4549  0017DE  8A8A               	bsf	3978,5,c	;volatile
  4550                           
  4551                           ; BSR set to: 0
  4552  0017E0  0012               	return	
  4553                           
  4554                           ; BSR set to: 0
  4555                           
  4556                           ; BSR set to: 0
  4557  0017E2  0012               	return		;funcret
  4558  0017E4                     __end_of_CAN_SetMode:
  4559                           	opt stack 0
  4560                           tblptru	equ	0xFF8
  4561                           tblptrh	equ	0xFF7
  4562                           tblptrl	equ	0xFF6
  4563                           tablat	equ	0xFF5
  4564                           prodh	equ	0xFF4
  4565                           prodl	equ	0xFF3
  4566                           intcon	equ	0xFF2
  4567                           intcon2	equ	0xFF1
  4568                           postinc0	equ	0xFEE
  4569                           wreg	equ	0xFE8
  4570                           indf1	equ	0xFE7
  4571                           postinc1	equ	0xFE6
  4572                           fsr1h	equ	0xFE2
  4573                           fsr1l	equ	0xFE1
  4574                           indf2	equ	0xFDF
  4575                           postinc2	equ	0xFDE
  4576                           postdec2	equ	0xFDD
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _ADC_Init *****************
  4582 ;; Defined at:
  4583 ;;		line 11 in file "source/adc.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    5
  4604 ;; This function calls:
  4605 ;;		_ADC_StartConversion
  4606 ;; This function is called by:
  4607 ;;		_App_System_Init
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text18
  4612  0016CE                     __ptext18:
  4613                           	opt stack 0
  4614  0016CE                     _ADC_Init:
  4615                           	opt stack 24
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;incstack = 0
  4619                           ;adc.c: 13: do { TRISB6 = 0; } while(0);
  4620  0016CE  9C93               	bcf	3987,6,c	;volatile
  4621  0016D0  D000               	goto	l29
  4622  0016D2                     l29:
  4623  0016D2  9E93               	bcf	3987,7,c	;volatile
  4624                           
  4625                           ;adc.c: 15: TRISAbits.TRISA0 = 1;
  4626  0016D4  8092               	bsf	3986,0,c	;volatile
  4627                           
  4628                           ;adc.c: 16: TRISAbits.TRISA1 = 1;
  4629  0016D6  8292               	bsf	3986,1,c	;volatile
  4630                           
  4631                           ;adc.c: 17: TRISAbits.TRISA2 = 1;
  4632  0016D8  8492               	bsf	3986,2,c	;volatile
  4633                           
  4634                           ;adc.c: 18: TRISAbits.TRISA3 = 1;
  4635  0016DA  8692               	bsf	3986,3,c	;volatile
  4636                           
  4637                           ;adc.c: 19: ANCON0 = 0X0F;
  4638  0016DC  0E0F               	movlw	15
  4639  0016DE  010F               	movlb	15	; () banked
  4640  0016E0  6F5D               	movwf	93,b	;volatile
  4641                           
  4642                           ;adc.c: 21: ADCON1 = 0x00;
  4643  0016E2  0E00               	movlw	0
  4644  0016E4  6EC1               	movwf	4033,c	;volatile
  4645                           
  4646                           ;adc.c: 22: ADCON2 = 0xAA;
  4647  0016E6  0EAA               	movlw	170
  4648  0016E8  6EC0               	movwf	4032,c	;volatile
  4649                           
  4650                           ;adc.c: 23: ADRESH = 0;
  4651  0016EA  0E00               	movlw	0
  4652  0016EC  6EC4               	movwf	4036,c	;volatile
  4653                           
  4654                           ;adc.c: 24: ADRESL = 0;
  4655  0016EE  0E00               	movlw	0
  4656  0016F0  6EC3               	movwf	4035,c	;volatile
  4657                           
  4658                           ; BSR set to: 15
  4659                           ;adc.c: 25: ADC_StartConversion(0x01);
  4660  0016F2  0E01               	movlw	1
  4661  0016F4  ECCA  F00B         	call	_ADC_StartConversion
  4662  0016F8  0012               	return		;funcret
  4663  0016FA                     __end_of_ADC_Init:
  4664                           	opt stack 0
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon	equ	0xFF2
  4672                           intcon2	equ	0xFF1
  4673                           postinc0	equ	0xFEE
  4674                           wreg	equ	0xFE8
  4675                           indf1	equ	0xFE7
  4676                           postinc1	equ	0xFE6
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _ADC_Cmd *****************
  4687 ;; Defined at:
  4688 ;;		line 97 in file "source/adc.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  channel         1    wreg     unsigned char 
  4691 ;;  sta             1   14[BANK0 ] unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  channel         1   15[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4703 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;Total ram usage:        2 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    4
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_App_System_Init
  4714 ;;		_SysEnterSleep
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text19
  4719  001672                     __ptext19:
  4720                           	opt stack 0
  4721  001672                     _ADC_Cmd:
  4722                           	opt stack 25
  4723                           
  4724                           ;incstack = 0
  4725                           ;ADC_Cmd@channel stored from wreg
  4726  001672  0100               	movlb	0	; () banked
  4727  001674  6FC1               	movwf	ADC_Cmd@channel& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;adc.c: 99: if(sta != 0)
  4731  001676  0100               	movlb	0	; () banked
  4732  001678  51C0               	movf	ADC_Cmd@sta& (0+255),w,b
  4733  00167A  0100               	movlb	0	; () banked
  4734  00167C  B4D8               	btfsc	status,2,c
  4735  00167E  D008               	goto	l3263
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;adc.c: 100: {
  4739                           ;adc.c: 101: if(channel == 1)
  4740  001680  0100               	movlb	0	; () banked
  4741  001682  05C1               	decf	ADC_Cmd@channel& (0+255),w,b
  4742  001684  A4D8               	btfss	status,2,c
  4743  001686  D002               	goto	l52
  4744                           
  4745                           ; BSR set to: 0
  4746                           
  4747                           ;adc.c: 102: {
  4748                           ;adc.c: 103: do { LATB6 = 1; } while(0);
  4749  001688  8C8A               	bsf	3978,6,c	;volatile
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;adc.c: 104: }
  4753  00168A  0012               	return	
  4754  00168C                     l52:
  4755                           
  4756                           ; BSR set to: 0
  4757  00168C  8E8A               	bsf	3978,7,c	;volatile
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;adc.c: 108: }
  4761                           ;adc.c: 109: }
  4762                           
  4763                           ; BSR set to: 0
  4764  00168E  0012               	return	
  4765  001690                     l3263:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;adc.c: 110: else
  4769                           ;adc.c: 111: {
  4770                           ;adc.c: 112: if(channel == 1)
  4771  001690  0100               	movlb	0	; () banked
  4772  001692  05C1               	decf	ADC_Cmd@channel& (0+255),w,b
  4773  001694  A4D8               	btfss	status,2,c
  4774  001696  D002               	goto	l59
  4775                           
  4776                           ; BSR set to: 0
  4777                           
  4778                           ;adc.c: 113: {
  4779                           ;adc.c: 114: do { LATB6 = 0; } while(0);
  4780  001698  9C8A               	bcf	3978,6,c	;volatile
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;adc.c: 115: }
  4784  00169A  0012               	return	
  4785  00169C                     l59:
  4786                           
  4787                           ; BSR set to: 0
  4788  00169C  9E8A               	bcf	3978,7,c	;volatile
  4789                           
  4790                           ; BSR set to: 0
  4791                           
  4792                           ; BSR set to: 0
  4793  00169E  0012               	return	
  4794                           
  4795                           ; BSR set to: 0
  4796                           
  4797                           ; BSR set to: 0
  4798  0016A0  0012               	return		;funcret
  4799  0016A2                     __end_of_ADC_Cmd:
  4800                           	opt stack 0
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           prodh	equ	0xFF4
  4806                           prodl	equ	0xFF3
  4807                           intcon	equ	0xFF2
  4808                           intcon2	equ	0xFF1
  4809                           postinc0	equ	0xFEE
  4810                           wreg	equ	0xFE8
  4811                           indf1	equ	0xFE7
  4812                           postinc1	equ	0xFE6
  4813                           fsr1h	equ	0xFE2
  4814                           fsr1l	equ	0xFE1
  4815                           indf2	equ	0xFDF
  4816                           postinc2	equ	0xFDE
  4817                           postdec2	equ	0xFDD
  4818                           fsr2h	equ	0xFDA
  4819                           fsr2l	equ	0xFD9
  4820                           status	equ	0xFD8
  4821                           
  4822 ;; *************** function _Pedal_Stop *****************
  4823 ;; Defined at:
  4824 ;;		line 72 in file "source/rly.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  dir             1    wreg     unsigned char 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  dir             1   14[BANK0 ] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;Total ram usage:        1 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    4
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_Pedal_Process
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text20
  4853  0016FA                     __ptext20:
  4854                           	opt stack 0
  4855  0016FA                     _Pedal_Stop:
  4856                           	opt stack 24
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;incstack = 0
  4860                           ;Pedal_Stop@dir stored from wreg
  4861  0016FA  0100               	movlb	0	; () banked
  4862  0016FC  6FC0               	movwf	Pedal_Stop@dir& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;rly.c: 74: if(dir == 0)
  4866  0016FE  0100               	movlb	0	; () banked
  4867  001700  51C0               	movf	Pedal_Stop@dir& (0+255),w,b
  4868  001702  0100               	movlb	0	; () banked
  4869  001704  A4D8               	btfss	status,2,c
  4870  001706  D004               	goto	l3453
  4871                           
  4872                           ; BSR set to: 0
  4873                           
  4874                           ;rly.c: 75: {
  4875                           ;rly.c: 76: do { LATC1 = 0; } while(0);
  4876  001708  928B               	bcf	3979,1,c	;volatile
  4877  00170A  D000               	goto	l651
  4878  00170C                     l651:
  4879                           
  4880                           ; BSR set to: 0
  4881  00170C  908B               	bcf	3979,0,c	;volatile
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;rly.c: 78: }
  4885  00170E  0012               	return	
  4886  001710                     l3453:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;rly.c: 79: else if(dir == 1)
  4890  001710  0100               	movlb	0	; () banked
  4891  001712  05C0               	decf	Pedal_Stop@dir& (0+255),w,b
  4892  001714  A4D8               	btfss	status,2,c
  4893  001716  0012               	return	
  4894                           
  4895                           ; BSR set to: 0
  4896                           
  4897                           ;rly.c: 80: {
  4898                           ;rly.c: 81: do { LATC7 = 0; } while(0);
  4899  001718  9E8B               	bcf	3979,7,c	;volatile
  4900  00171A  D000               	goto	l657
  4901  00171C                     l657:
  4902                           
  4903                           ; BSR set to: 0
  4904  00171C  988B               	bcf	3979,4,c	;volatile
  4905                           
  4906                           ; BSR set to: 0
  4907                           
  4908                           ; BSR set to: 0
  4909  00171E  0012               	return	
  4910                           
  4911                           ; BSR set to: 0
  4912                           
  4913                           ; BSR set to: 0
  4914  001720  0012               	return		;funcret
  4915  001722                     __end_of_Pedal_Stop:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           intcon2	equ	0xFF1
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           indf1	equ	0xFE7
  4928                           postinc1	equ	0xFE6
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function _Pedal_Out *****************
  4939 ;; Defined at:
  4940 ;;		line 30 in file "source/rly.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  dir             1    wreg     unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  dir             1   14[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;Total ram usage:        1 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    4
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_Pedal_Process
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text21
  4969  001722                     __ptext21:
  4970                           	opt stack 0
  4971  001722                     _Pedal_Out:
  4972                           	opt stack 24
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;incstack = 0
  4976                           ;Pedal_Out@dir stored from wreg
  4977  001722  0100               	movlb	0	; () banked
  4978  001724  6FC0               	movwf	Pedal_Out@dir& (0+255),b
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;rly.c: 32: if(dir == 0)
  4982  001726  0100               	movlb	0	; () banked
  4983  001728  51C0               	movf	Pedal_Out@dir& (0+255),w,b
  4984  00172A  0100               	movlb	0	; () banked
  4985  00172C  A4D8               	btfss	status,2,c
  4986  00172E  D004               	goto	l3457
  4987                           
  4988                           ; BSR set to: 0
  4989                           
  4990                           ;rly.c: 33: {
  4991                           ;rly.c: 34: do { LATC1 = 1; } while(0);
  4992  001730  828B               	bsf	3979,1,c	;volatile
  4993  001732  D000               	goto	l623
  4994  001734                     l623:
  4995                           
  4996                           ; BSR set to: 0
  4997  001734  908B               	bcf	3979,0,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;rly.c: 36: }
  5001  001736  0012               	return	
  5002  001738                     l3457:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;rly.c: 37: else if(dir == 1)
  5006  001738  0100               	movlb	0	; () banked
  5007  00173A  05C0               	decf	Pedal_Out@dir& (0+255),w,b
  5008  00173C  A4D8               	btfss	status,2,c
  5009  00173E  0012               	return	
  5010                           
  5011                           ; BSR set to: 0
  5012                           
  5013                           ;rly.c: 38: {
  5014                           ;rly.c: 39: do { LATC7 = 0; } while(0);
  5015  001740  9E8B               	bcf	3979,7,c	;volatile
  5016  001742  D000               	goto	l629
  5017  001744                     l629:
  5018                           
  5019                           ; BSR set to: 0
  5020  001744  888B               	bsf	3979,4,c	;volatile
  5021                           
  5022                           ; BSR set to: 0
  5023                           
  5024                           ; BSR set to: 0
  5025  001746  0012               	return	
  5026                           
  5027                           ; BSR set to: 0
  5028                           
  5029                           ; BSR set to: 0
  5030  001748  0012               	return		;funcret
  5031  00174A                     __end_of_Pedal_Out:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           postinc0	equ	0xFEE
  5042                           wreg	equ	0xFE8
  5043                           indf1	equ	0xFE7
  5044                           postinc1	equ	0xFE6
  5045                           fsr1h	equ	0xFE2
  5046                           fsr1l	equ	0xFE1
  5047                           indf2	equ	0xFDF
  5048                           postinc2	equ	0xFDE
  5049                           postdec2	equ	0xFDD
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function _Pedal_Back *****************
  5055 ;; Defined at:
  5056 ;;		line 51 in file "source/rly.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  dir             1    wreg     unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  dir             1   14[BANK0 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;		None               void
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;Total ram usage:        1 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    4
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_Pedal_Process
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text22
  5085  00174A                     __ptext22:
  5086                           	opt stack 0
  5087  00174A                     _Pedal_Back:
  5088                           	opt stack 24
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;incstack = 0
  5092                           ;Pedal_Back@dir stored from wreg
  5093  00174A  0100               	movlb	0	; () banked
  5094  00174C  6FC0               	movwf	Pedal_Back@dir& (0+255),b
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;rly.c: 53: if(dir == 0)
  5098  00174E  0100               	movlb	0	; () banked
  5099  001750  51C0               	movf	Pedal_Back@dir& (0+255),w,b
  5100  001752  0100               	movlb	0	; () banked
  5101  001754  A4D8               	btfss	status,2,c
  5102  001756  D004               	goto	l3497
  5103                           
  5104                           ; BSR set to: 0
  5105                           
  5106                           ;rly.c: 54: {
  5107                           ;rly.c: 55: do { LATC1 = 0; } while(0);
  5108  001758  928B               	bcf	3979,1,c	;volatile
  5109  00175A  D000               	goto	l637
  5110  00175C                     l637:
  5111                           
  5112                           ; BSR set to: 0
  5113  00175C  808B               	bsf	3979,0,c	;volatile
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;rly.c: 57: }
  5117  00175E  0012               	return	
  5118  001760                     l3497:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;rly.c: 58: else if(dir == 1)
  5122  001760  0100               	movlb	0	; () banked
  5123  001762  05C0               	decf	Pedal_Back@dir& (0+255),w,b
  5124  001764  A4D8               	btfss	status,2,c
  5125  001766  0012               	return	
  5126                           
  5127                           ; BSR set to: 0
  5128                           
  5129                           ;rly.c: 59: {
  5130                           ;rly.c: 60: do { LATC7 = 1; } while(0);
  5131  001768  8E8B               	bsf	3979,7,c	;volatile
  5132  00176A  D000               	goto	l643
  5133  00176C                     l643:
  5134                           
  5135                           ; BSR set to: 0
  5136  00176C  988B               	bcf	3979,4,c	;volatile
  5137                           
  5138                           ; BSR set to: 0
  5139                           
  5140                           ; BSR set to: 0
  5141  00176E  0012               	return	
  5142                           
  5143                           ; BSR set to: 0
  5144                           
  5145                           ; BSR set to: 0
  5146  001770  0012               	return		;funcret
  5147  001772                     __end_of_Pedal_Back:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           intcon2	equ	0xFF1
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           indf1	equ	0xFE7
  5160                           postinc1	equ	0xFE6
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170 ;; *************** function _CAN_TX_TestInfo *****************
  5171 ;; Defined at:
  5172 ;;		line 286 in file "source/ecan.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  TestInfoID      1    wreg     enum E18182
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  TestInfoID      1   18[BANK0 ] enum E18182
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;Total ram usage:        1 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    5
  5193 ;; This function calls:
  5194 ;;		_ECAN_Transmit
  5195 ;; This function is called by:
  5196 ;;		_Pedal_Process
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text23
  5201  000FD0                     __ptext23:
  5202                           	opt stack 0
  5203  000FD0                     _CAN_TX_TestInfo:
  5204                           	opt stack 23
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;incstack = 0
  5208                           ;CAN_TX_TestInfo@TestInfoID stored from wreg
  5209  000FD0  0100               	movlb	0	; () banked
  5210  000FD2  6FC4               	movwf	CAN_TX_TestInfo@TestInfoID& (0+255),b
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;ecan.c: 288: g_tCanTxMsg.StdId = 0X110;
  5214  000FD4  0E01               	movlw	1
  5215  000FD6  0100               	movlb	0	; () banked
  5216  000FD8  6F9C               	movwf	(_g_tCanTxMsg+1)& (0+255),b
  5217  000FDA  0E10               	movlw	16
  5218  000FDC  6F9B               	movwf	_g_tCanTxMsg& (0+255),b
  5219                           
  5220                           ;ecan.c: 289: g_tCanTxMsg.RTR = 0X00;
  5221  000FDE  0E00               	movlw	0
  5222  000FE0  0100               	movlb	0	; () banked
  5223  000FE2  6FA0               	movwf	(_g_tCanTxMsg+5)& (0+255),b
  5224                           
  5225                           ;ecan.c: 290: g_tCanTxMsg.IDE = 0X00;
  5226  000FE4  0E00               	movlw	0
  5227  000FE6  0100               	movlb	0	; () banked
  5228  000FE8  6F9F               	movwf	(_g_tCanTxMsg+4)& (0+255),b
  5229                           
  5230                           ;ecan.c: 292: g_tCanTxMsg.DLC = 0X03;
  5231  000FEA  0E03               	movlw	3
  5232  000FEC  0100               	movlb	0	; () banked
  5233  000FEE  6FA1               	movwf	(_g_tCanTxMsg+6)& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;ecan.c: 293: if(TestInfoID == INFO_ID_LEFT_PEDAL_OUT_NORMAL)
  5237  000FF0  0100               	movlb	0	; () banked
  5238  000FF2  51C4               	movf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5239  000FF4  0100               	movlb	0	; () banked
  5240  000FF6  A4D8               	btfss	status,2,c
  5241  000FF8  D005               	goto	l3465
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;ecan.c: 294: {
  5245                           ;ecan.c: 295: g_tCanTxMsg.Data[0] = 0x01;
  5246  000FFA  0E01               	movlw	1
  5247  000FFC  0100               	movlb	0	; () banked
  5248  000FFE  6FA2               	movwf	(_g_tCanTxMsg+7)& (0+255),b
  5249                           
  5250                           ;ecan.c: 296: g_tCanTxMsg.Data[1] = 0x01;
  5251  001000  0E01               	movlw	1
  5252  001002  D021               	goto	L26
  5253  001004                     l3465:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;ecan.c: 299: else if(TestInfoID == INFO_ID_LEFT_PEDAL_OUT_ERROR)
  5257  001004  0100               	movlb	0	; () banked
  5258  001006  05C4               	decf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5259  001008  A4D8               	btfss	status,2,c
  5260  00100A  D005               	goto	l3469
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;ecan.c: 300: {
  5264                           ;ecan.c: 301: g_tCanTxMsg.Data[0] = 0x01;
  5265  00100C  0E01               	movlw	1
  5266  00100E  0100               	movlb	0	; () banked
  5267  001010  6FA2               	movwf	(_g_tCanTxMsg+7)& (0+255),b
  5268                           
  5269                           ;ecan.c: 302: g_tCanTxMsg.Data[1] = 0x01;
  5270  001012  0E01               	movlw	1
  5271  001014  D033               	goto	L27
  5272  001016                     l3469:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;ecan.c: 305: else if(TestInfoID == INFO_ID_LEFT_PEDAL_BACK_NORMAL)
  5276  001016  0E02               	movlw	2
  5277  001018  0100               	movlb	0	; () banked
  5278  00101A  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5279  00101C  A4D8               	btfss	status,2,c
  5280  00101E  D005               	goto	l3473
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;ecan.c: 306: {
  5284                           ;ecan.c: 307: g_tCanTxMsg.Data[0] = 0x01;
  5285  001020  0E01               	movlw	1
  5286  001022  0100               	movlb	0	; () banked
  5287  001024  6FA2               	movwf	(_g_tCanTxMsg+7)& (0+255),b
  5288                           
  5289                           ;ecan.c: 308: g_tCanTxMsg.Data[1] = 0x02;
  5290  001026  0E02               	movlw	2
  5291  001028  D00E               	goto	L26
  5292  00102A                     l3473:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;ecan.c: 311: else if(TestInfoID == INFO_ID_LEFT_PEDAL_BACK_ERROR)
  5296  00102A  0E03               	movlw	3
  5297  00102C  0100               	movlb	0	; () banked
  5298  00102E  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5299  001030  A4D8               	btfss	status,2,c
  5300  001032  D002               	goto	l3477
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;ecan.c: 312: {
  5304                           ;ecan.c: 313: g_tCanTxMsg.Data[0] = 0x01;
  5305  001034  0E01               	movlw	1
  5306  001036  D01F               	goto	L30
  5307  001038                     l3477:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;ecan.c: 317: else if(TestInfoID == INFO_ID_RIGHT_PEDAL_OUT_NORMAL)
  5311  001038  0E04               	movlw	4
  5312  00103A  0100               	movlb	0	; () banked
  5313  00103C  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5314  00103E  A4D8               	btfss	status,2,c
  5315  001040  D006               	goto	l3481
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;ecan.c: 318: {
  5319                           ;ecan.c: 319: g_tCanTxMsg.Data[0] = 0x02;
  5320  001042  0E02               	movlw	2
  5321  001044  D7DB               	goto	L28
  5322  001046                     L26:
  5323  001046  0100               	movlb	0	; () banked
  5324  001048  6FA3               	movwf	(_g_tCanTxMsg+8)& (0+255),b
  5325                           
  5326                           ;ecan.c: 321: g_tCanTxMsg.Data[2] = 0x00;
  5327  00104A  0E00               	movlw	0
  5328  00104C  D01A               	goto	L24
  5329  00104E                     l3481:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;ecan.c: 323: else if(TestInfoID == INFO_ID_RIGHT_PEDAL_OUT_ERROR)
  5333  00104E  0E05               	movlw	5
  5334  001050  0100               	movlb	0	; () banked
  5335  001052  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5336  001054  A4D8               	btfss	status,2,c
  5337  001056  D002               	goto	l3485
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;ecan.c: 324: {
  5341                           ;ecan.c: 325: g_tCanTxMsg.Data[0] = 0x02;
  5342  001058  0E02               	movlw	2
  5343  00105A  D7D9               	goto	L31
  5344  00105C                     l3485:
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;ecan.c: 329: else if(TestInfoID == INFO_ID_RIGHT_PEDAL_BACK_NORMAL)
  5348  00105C  0E06               	movlw	6
  5349  00105E  0100               	movlb	0	; () banked
  5350  001060  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5351  001062  A4D8               	btfss	status,2,c
  5352  001064  D002               	goto	l3489
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;ecan.c: 330: {
  5356                           ;ecan.c: 331: g_tCanTxMsg.Data[0] = 0x02;
  5357  001066  0E02               	movlw	2
  5358  001068  D7DC               	goto	L32
  5359  00106A                     l3489:
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;ecan.c: 335: else if(TestInfoID == INFO_ID_RIGHT_PEDAL_BACK_ERROR)
  5363  00106A  0E07               	movlw	7
  5364  00106C  0100               	movlb	0	; () banked
  5365  00106E  19C4               	xorwf	CAN_TX_TestInfo@TestInfoID& (0+255),w,b
  5366  001070  A4D8               	btfss	status,2,c
  5367  001072  D00A               	goto	l3493
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;ecan.c: 336: {
  5371                           ;ecan.c: 337: g_tCanTxMsg.Data[0] = 0x02;
  5372  001074  0E02               	movlw	2
  5373  001076                     L30:
  5374  001076  0100               	movlb	0	; () banked
  5375  001078  6FA2               	movwf	(_g_tCanTxMsg+7)& (0+255),b
  5376                           
  5377                           ;ecan.c: 338: g_tCanTxMsg.Data[1] = 0x02;
  5378  00107A  0E02               	movlw	2
  5379  00107C                     L27:
  5380  00107C  0100               	movlb	0	; () banked
  5381  00107E  6FA3               	movwf	(_g_tCanTxMsg+8)& (0+255),b
  5382                           
  5383                           ;ecan.c: 339: g_tCanTxMsg.Data[2] = 0x01;
  5384  001080  0E01               	movlw	1
  5385  001082                     L24:
  5386  001082  0100               	movlb	0	; () banked
  5387  001084  6FA4               	movwf	(_g_tCanTxMsg+9)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           
  5391                           ; BSR set to: 0
  5392                           
  5393                           ; BSR set to: 0
  5394                           
  5395                           ; BSR set to: 0
  5396                           
  5397                           ; BSR set to: 0
  5398                           
  5399                           ; BSR set to: 0
  5400                           
  5401                           ; BSR set to: 0
  5402  001086  D000               	goto	l3493
  5403  001088                     l3493:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;ecan.c: 340: }
  5407                           ;ecan.c: 342: ECAN_Transmit(&g_tCanTxMsg);
  5408  001088  0E9B               	movlw	low _g_tCanTxMsg
  5409  00108A  0100               	movlb	0	; () banked
  5410  00108C  6FC0               	movwf	ECAN_Transmit@TxMessage& (0+255),b
  5411  00108E  0E00               	movlw	high _g_tCanTxMsg
  5412  001090  0100               	movlb	0	; () banked
  5413  001092  6FC1               	movwf	(ECAN_Transmit@TxMessage+1)& (0+255),b
  5414  001094  ECBD  F005         	call	_ECAN_Transmit	;wreg free
  5415  001098  0012               	return		;funcret
  5416  00109A                     __end_of_CAN_TX_TestInfo:
  5417                           	opt stack 0
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           prodh	equ	0xFF4
  5423                           prodl	equ	0xFF3
  5424                           intcon	equ	0xFF2
  5425                           intcon2	equ	0xFF1
  5426                           postinc0	equ	0xFEE
  5427                           wreg	equ	0xFE8
  5428                           indf1	equ	0xFE7
  5429                           postinc1	equ	0xFE6
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           indf2	equ	0xFDF
  5433                           postinc2	equ	0xFDE
  5434                           postdec2	equ	0xFDD
  5435                           fsr2h	equ	0xFDA
  5436                           fsr2l	equ	0xFD9
  5437                           status	equ	0xFD8
  5438                           
  5439 ;; *************** function _ECAN_Transmit *****************
  5440 ;; Defined at:
  5441 ;;		line 209 in file "source/ecan.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  TxMessage       2   14[BANK0 ] PTR struct .
  5444 ;;		 -> g_tCanTxMsg(15), 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;		None               void
  5449 ;; Registers used:
  5450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;Total ram usage:        4 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    4
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_CAN_TX_TestInfo
  5467 ;;		_CAN_TX_Test
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text24
  5472  000B7A                     __ptext24:
  5473                           	opt stack 0
  5474  000B7A                     _ECAN_Transmit:
  5475                           	opt stack 23
  5476                           
  5477                           ;ecan.c: 211: TXB0CONbits.TXREQ = 0;
  5478                           
  5479                           ;incstack = 0
  5480  000B7A  010F               	movlb	15	; () banked
  5481  000B7C  9720               	bcf	32,3,b	;volatile
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;ecan.c: 212: if (TxMessage->IDE == 0X00)
  5485  000B7E  0100               	movlb	0	; () banked
  5486  000B80  EE20 F004          	lfsr	2,4
  5487  000B84  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5488  000B86  26D9               	addwf	fsr2l,f,c
  5489  000B88  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5490  000B8A  22DA               	addwfc	fsr2h,f,c
  5491  000B8C  50DF               	movf	indf2,w,c
  5492  000B8E  A4D8               	btfss	status,2,c
  5493  000B90  D05A               	goto	l3381
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;ecan.c: 213: {
  5497                           ;ecan.c: 214: TXB0SIDH = (uint8_t)(TxMessage->StdId>>3);
  5498  000B92  C0C0  FFD9         	movff	ECAN_Transmit@TxMessage,fsr2l
  5499  000B96  C0C1  FFDA         	movff	ECAN_Transmit@TxMessage+1,fsr2h
  5500  000B9A  CFDE F0C2          	movff	postinc2,??_ECAN_Transmit
  5501  000B9E  CFDD F0C3          	movff	postdec2,??_ECAN_Transmit+1
  5502  000BA2  0100               	movlb	0	; () banked
  5503  000BA4  90D8               	bcf	status,0,c
  5504  000BA6  33C3               	rrcf	(??_ECAN_Transmit+1)& (0+255),f,b
  5505  000BA8  33C2               	rrcf	??_ECAN_Transmit& (0+255),f,b
  5506  000BAA  0100               	movlb	0	; () banked
  5507  000BAC  90D8               	bcf	status,0,c
  5508  000BAE  33C3               	rrcf	(??_ECAN_Transmit+1)& (0+255),f,b
  5509  000BB0  33C2               	rrcf	??_ECAN_Transmit& (0+255),f,b
  5510  000BB2  0100               	movlb	0	; () banked
  5511  000BB4  90D8               	bcf	status,0,c
  5512  000BB6  33C3               	rrcf	(??_ECAN_Transmit+1)& (0+255),f,b
  5513  000BB8  33C2               	rrcf	??_ECAN_Transmit& (0+255),f,b
  5514  000BBA  0100               	movlb	0	; () banked
  5515  000BBC  51C2               	movf	??_ECAN_Transmit& (0+255),w,b
  5516  000BBE  010F               	movlb	15	; () banked
  5517  000BC0  6F21               	movwf	33,b	;volatile
  5518                           
  5519                           ;ecan.c: 215: TXB0SIDL = (uint8_t)(TxMessage->StdId<<5)&0xE0;
  5520  000BC2  C0C0  FFD9         	movff	ECAN_Transmit@TxMessage,fsr2l
  5521  000BC6  C0C1  FFDA         	movff	ECAN_Transmit@TxMessage+1,fsr2h
  5522  000BCA  50DF               	movf	indf2,w,c
  5523  000BCC  0100               	movlb	0	; () banked
  5524  000BCE  6FC2               	movwf	??_ECAN_Transmit& (0+255),b
  5525  000BD0  0E05               	movlw	5
  5526  000BD2  0100               	movlb	0	; () banked
  5527  000BD4  6FC3               	movwf	(??_ECAN_Transmit+1)& (0+255),b
  5528  000BD6                     u2935:
  5529  000BD6  0100               	movlb	0	; () banked
  5530  000BD8  90D8               	bcf	status,0,c
  5531  000BDA  37C2               	rlcf	??_ECAN_Transmit& (0+255),f,b
  5532  000BDC  0100               	movlb	0	; () banked
  5533  000BDE  2FC3               	decfsz	(??_ECAN_Transmit+1)& (0+255),f,b
  5534  000BE0  D7FA               	goto	u2935
  5535  000BE2  0100               	movlb	0	; () banked
  5536  000BE4  51C2               	movf	??_ECAN_Transmit& (0+255),w,b
  5537  000BE6  0BE0               	andlw	224
  5538  000BE8  010F               	movlb	15	; () banked
  5539  000BEA  6F22               	movwf	34,b	;volatile
  5540                           
  5541                           ;ecan.c: 216: TXB0SIDLbits.EXIDE = TxMessage->IDE;
  5542  000BEC  0100               	movlb	0	; () banked
  5543  000BEE  EE20 F004          	lfsr	2,4
  5544  000BF2  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5545  000BF4  26D9               	addwf	fsr2l,f,c
  5546  000BF6  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5547  000BF8  22DA               	addwfc	fsr2h,f,c
  5548  000BFA  50DF               	movf	indf2,w,c
  5549  000BFC  0100               	movlb	0	; () banked
  5550  000BFE  6FC2               	movwf	??_ECAN_Transmit& (0+255),b
  5551  000C00  0100               	movlb	0	; () banked
  5552  000C02  47C2               	rlncf	??_ECAN_Transmit& (0+255),f,b
  5553  000C04  47C2               	rlncf	??_ECAN_Transmit& (0+255),f,b
  5554  000C06  47C2               	rlncf	??_ECAN_Transmit& (0+255),f,b
  5555  000C08  010F               	movlb	15	; () banked
  5556  000C0A  5122               	movf	34,w,b	;volatile
  5557  000C0C  0100               	movlb	0	; () banked
  5558  000C0E  19C2               	xorwf	??_ECAN_Transmit& (0+255),w,b
  5559  000C10  0BF7               	andlw	-9
  5560  000C12  19C2               	xorwf	??_ECAN_Transmit& (0+255),w,b
  5561  000C14  010F               	movlb	15	; () banked
  5562  000C16  6F22               	movwf	34,b	;volatile
  5563                           
  5564                           ;ecan.c: 217: TXB0DLCbits.TXRTR = TxMessage->RTR;
  5565  000C18  0100               	movlb	0	; () banked
  5566  000C1A  EE20 F005          	lfsr	2,5
  5567  000C1E  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5568  000C20  26D9               	addwf	fsr2l,f,c
  5569  000C22  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5570  000C24  22DA               	addwfc	fsr2h,f,c
  5571  000C26  50DF               	movf	indf2,w,c
  5572  000C28  0100               	movlb	0	; () banked
  5573  000C2A  6FC2               	movwf	??_ECAN_Transmit& (0+255),b
  5574  000C2C  0100               	movlb	0	; () banked
  5575  000C2E  3BC2               	swapf	??_ECAN_Transmit& (0+255),f,b
  5576  000C30  47C2               	rlncf	??_ECAN_Transmit& (0+255),f,b
  5577  000C32  47C2               	rlncf	??_ECAN_Transmit& (0+255),f,b
  5578  000C34  010F               	movlb	15	; () banked
  5579  000C36  5125               	movf	37,w,b	;volatile
  5580  000C38  0100               	movlb	0	; () banked
  5581  000C3A  19C2               	xorwf	??_ECAN_Transmit& (0+255),w,b
  5582  000C3C  0BBF               	andlw	-65
  5583  000C3E  19C2               	xorwf	??_ECAN_Transmit& (0+255),w,b
  5584  000C40  010F               	movlb	15	; () banked
  5585  000C42  6F25               	movwf	37,b	;volatile
  5586                           
  5587                           ; BSR set to: 15
  5588                           
  5589                           ;ecan.c: 218: }
  5590  000C44  D000               	goto	l3381
  5591  000C46                     l3381:
  5592                           
  5593                           ;ecan.c: 223: }
  5594                           ;ecan.c: 224: TXB0DLC = TxMessage->DLC;
  5595  000C46  0100               	movlb	0	; () banked
  5596  000C48  EE20 F006          	lfsr	2,6
  5597  000C4C  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5598  000C4E  26D9               	addwf	fsr2l,f,c
  5599  000C50  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5600  000C52  22DA               	addwfc	fsr2h,f,c
  5601  000C54  50DF               	movf	indf2,w,c
  5602  000C56  010F               	movlb	15	; () banked
  5603  000C58  6F25               	movwf	37,b	;volatile
  5604                           
  5605                           ;ecan.c: 225: TXB0D0 = TxMessage->Data[0];
  5606  000C5A  0100               	movlb	0	; () banked
  5607  000C5C  EE20 F007          	lfsr	2,7
  5608  000C60  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5609  000C62  26D9               	addwf	fsr2l,f,c
  5610  000C64  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5611  000C66  22DA               	addwfc	fsr2h,f,c
  5612  000C68  50DF               	movf	indf2,w,c
  5613  000C6A  010F               	movlb	15	; () banked
  5614  000C6C  6F26               	movwf	38,b	;volatile
  5615                           
  5616                           ;ecan.c: 226: TXB0D1 = TxMessage->Data[1];
  5617  000C6E  0100               	movlb	0	; () banked
  5618  000C70  EE20 F008          	lfsr	2,8
  5619  000C74  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5620  000C76  26D9               	addwf	fsr2l,f,c
  5621  000C78  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5622  000C7A  22DA               	addwfc	fsr2h,f,c
  5623  000C7C  50DF               	movf	indf2,w,c
  5624  000C7E  010F               	movlb	15	; () banked
  5625  000C80  6F27               	movwf	39,b	;volatile
  5626                           
  5627                           ;ecan.c: 227: TXB0D2 = TxMessage->Data[2];
  5628  000C82  0100               	movlb	0	; () banked
  5629  000C84  EE20 F009          	lfsr	2,9
  5630  000C88  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5631  000C8A  26D9               	addwf	fsr2l,f,c
  5632  000C8C  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5633  000C8E  22DA               	addwfc	fsr2h,f,c
  5634  000C90  50DF               	movf	indf2,w,c
  5635  000C92  010F               	movlb	15	; () banked
  5636  000C94  6F28               	movwf	40,b	;volatile
  5637                           
  5638                           ;ecan.c: 228: TXB0D3 = TxMessage->Data[3];
  5639  000C96  0100               	movlb	0	; () banked
  5640  000C98  EE20 F00A          	lfsr	2,10
  5641  000C9C  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5642  000C9E  26D9               	addwf	fsr2l,f,c
  5643  000CA0  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5644  000CA2  22DA               	addwfc	fsr2h,f,c
  5645  000CA4  50DF               	movf	indf2,w,c
  5646  000CA6  010F               	movlb	15	; () banked
  5647  000CA8  6F29               	movwf	41,b	;volatile
  5648                           
  5649                           ;ecan.c: 229: TXB0D4 = TxMessage->Data[4];
  5650  000CAA  0100               	movlb	0	; () banked
  5651  000CAC  EE20 F00B          	lfsr	2,11
  5652  000CB0  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5653  000CB2  26D9               	addwf	fsr2l,f,c
  5654  000CB4  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5655  000CB6  22DA               	addwfc	fsr2h,f,c
  5656  000CB8  50DF               	movf	indf2,w,c
  5657  000CBA  010F               	movlb	15	; () banked
  5658  000CBC  6F2A               	movwf	42,b	;volatile
  5659                           
  5660                           ;ecan.c: 230: TXB0D5 = TxMessage->Data[5];
  5661  000CBE  0100               	movlb	0	; () banked
  5662  000CC0  EE20 F00C          	lfsr	2,12
  5663  000CC4  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5664  000CC6  26D9               	addwf	fsr2l,f,c
  5665  000CC8  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5666  000CCA  22DA               	addwfc	fsr2h,f,c
  5667  000CCC  50DF               	movf	indf2,w,c
  5668  000CCE  010F               	movlb	15	; () banked
  5669  000CD0  6F2B               	movwf	43,b	;volatile
  5670                           
  5671                           ;ecan.c: 231: TXB0D6 = TxMessage->Data[6];
  5672  000CD2  0100               	movlb	0	; () banked
  5673  000CD4  EE20 F00D          	lfsr	2,13
  5674  000CD8  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5675  000CDA  26D9               	addwf	fsr2l,f,c
  5676  000CDC  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5677  000CDE  22DA               	addwfc	fsr2h,f,c
  5678  000CE0  50DF               	movf	indf2,w,c
  5679  000CE2  010F               	movlb	15	; () banked
  5680  000CE4  6F2C               	movwf	44,b	;volatile
  5681                           
  5682                           ;ecan.c: 232: TXB0D7 = TxMessage->Data[7];
  5683  000CE6  0100               	movlb	0	; () banked
  5684  000CE8  EE20 F00E          	lfsr	2,14
  5685  000CEC  51C0               	movf	ECAN_Transmit@TxMessage& (0+255),w,b
  5686  000CEE  26D9               	addwf	fsr2l,f,c
  5687  000CF0  51C1               	movf	(ECAN_Transmit@TxMessage+1)& (0+255),w,b
  5688  000CF2  22DA               	addwfc	fsr2h,f,c
  5689  000CF4  50DF               	movf	indf2,w,c
  5690  000CF6  010F               	movlb	15	; () banked
  5691  000CF8  6F2D               	movwf	45,b	;volatile
  5692                           
  5693                           ; BSR set to: 15
  5694                           ;ecan.c: 234: TXB0CONbits.TXREQ = 1;
  5695  000CFA  010F               	movlb	15	; () banked
  5696  000CFC  8720               	bsf	32,3,b	;volatile
  5697                           
  5698                           ;ecan.c: 235: while(TXB0CONbits.TXREQ==1);
  5699  000CFE  D000               	goto	l480
  5700  000D00                     l480:
  5701                           
  5702                           ; BSR set to: 15
  5703  000D00  010F               	movlb	15	; () banked
  5704  000D02  B720               	btfsc	32,3,b	;volatile
  5705  000D04  D7FD               	goto	l480
  5706                           
  5707                           ; BSR set to: 15
  5708                           
  5709                           ; BSR set to: 15
  5710  000D06  0012               	return		;funcret
  5711  000D08                     __end_of_ECAN_Transmit:
  5712                           	opt stack 0
  5713                           tblptru	equ	0xFF8
  5714                           tblptrh	equ	0xFF7
  5715                           tblptrl	equ	0xFF6
  5716                           tablat	equ	0xFF5
  5717                           prodh	equ	0xFF4
  5718                           prodl	equ	0xFF3
  5719                           intcon	equ	0xFF2
  5720                           intcon2	equ	0xFF1
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           indf1	equ	0xFE7
  5724                           postinc1	equ	0xFE6
  5725                           fsr1h	equ	0xFE2
  5726                           fsr1l	equ	0xFE1
  5727                           indf2	equ	0xFDF
  5728                           postinc2	equ	0xFDE
  5729                           postdec2	equ	0xFDD
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734 ;; *************** function _AdcPro *****************
  5735 ;; Defined at:
  5736 ;;		line 695 in file "source/app.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  sum             2   21[BANK0 ] unsigned int 
  5741 ;;  i               1   23[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;		None               void
  5744 ;; Registers used:
  5745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;Total ram usage:        3 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    5
  5758 ;; This function calls:
  5759 ;;		_ADC_GetConversionValue
  5760 ;;		_ADC_StartConversion
  5761 ;;		___lwdiv
  5762 ;; This function is called by:
  5763 ;;		_AppTask_PollHandler
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text25
  5768  00079A                     __ptext25:
  5769                           	opt stack 0
  5770  00079A                     _AdcPro:
  5771                           	opt stack 24
  5772                           
  5773                           ;app.c: 697: static uint16_t buf[5][4];
  5774                           ;app.c: 698: static uint8_t write;
  5775                           ;app.c: 699: static uint8_t index = 0x01;
  5776                           ;app.c: 700: uint16_t sum;
  5777                           ;app.c: 701: uint8_t i;
  5778                           ;app.c: 703: if(index == 0x01)
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;incstack = 0
  5782  00079A  0100               	movlb	0	; () banked
  5783  00079C  05E3               	decf	AdcPro@index& (0+255),w,b
  5784  00079E  A4D8               	btfss	status,2,c
  5785  0007A0  D04E               	goto	l3583
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;app.c: 704: {
  5789                           ;app.c: 705: buf[write][0x01] = ADC_GetConversionValue();
  5790  0007A2  EC20  F00B         	call	_ADC_GetConversionValue	;wreg free
  5791  0007A6  0100               	movlb	0	; () banked
  5792  0007A8  5188               	movf	AdcPro@write& (0+255),w,b
  5793  0007AA  0D08               	mullw	8
  5794  0007AC  0E02               	movlw	2
  5795  0007AE  26F3               	addwf	prodl,f,c
  5796  0007B0  0E00               	movlw	0
  5797  0007B2  22F4               	addwfc	prodh,f,c
  5798  0007B4  0E60               	movlw	low AdcPro@buf
  5799  0007B6  24F3               	addwf	prodl,w,c
  5800  0007B8  6ED9               	movwf	fsr2l,c
  5801  0007BA  0E00               	movlw	high AdcPro@buf
  5802  0007BC  20F4               	addwfc	prodh,w,c
  5803  0007BE  6EDA               	movwf	fsr2h,c
  5804  0007C0  0100               	movlb	0	; () banked
  5805  0007C2  C0C0  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  5806  0007C6  0100               	movlb	0	; () banked
  5807  0007C8  C0C1  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;app.c: 710: sum = 0;
  5811  0007CC  0E00               	movlw	0
  5812  0007CE  0100               	movlb	0	; () banked
  5813  0007D0  6FC8               	movwf	(AdcPro@sum+1)& (0+255),b
  5814  0007D2  0E00               	movlw	0
  5815  0007D4  6FC7               	movwf	AdcPro@sum& (0+255),b
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;app.c: 711: for (i = 0; i < 5; i++)
  5819  0007D6  0E00               	movlw	0
  5820  0007D8  0100               	movlb	0	; () banked
  5821  0007DA  6FC9               	movwf	AdcPro@i& (0+255),b
  5822  0007DC                     l3567:
  5823                           
  5824                           ; BSR set to: 0
  5825  0007DC  0E04               	movlw	4
  5826  0007DE  0100               	movlb	0	; () banked
  5827  0007E0  65C9               	cpfsgt	AdcPro@i& (0+255),b
  5828  0007E2  D001               	goto	l3571
  5829                           
  5830                           ; BSR set to: 0
  5831  0007E4  D016               	goto	l3577
  5832  0007E6                     l3571:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;app.c: 712: {
  5836                           ;app.c: 713: sum += buf[i][0x01];
  5837  0007E6  0100               	movlb	0	; () banked
  5838  0007E8  51C9               	movf	AdcPro@i& (0+255),w,b
  5839  0007EA  0D08               	mullw	8
  5840  0007EC  0E02               	movlw	2
  5841  0007EE  26F3               	addwf	prodl,f,c
  5842  0007F0  0E00               	movlw	0
  5843  0007F2  22F4               	addwfc	prodh,f,c
  5844  0007F4  0E60               	movlw	low AdcPro@buf
  5845  0007F6  24F3               	addwf	prodl,w,c
  5846  0007F8  6ED9               	movwf	fsr2l,c
  5847  0007FA  0E00               	movlw	high AdcPro@buf
  5848  0007FC  20F4               	addwfc	prodh,w,c
  5849  0007FE  6EDA               	movwf	fsr2h,c
  5850  000800  50DE               	movf	postinc2,w,c
  5851  000802  0100               	movlb	0	; () banked
  5852  000804  27C7               	addwf	AdcPro@sum& (0+255),f,b
  5853  000806  50DD               	movf	postdec2,w,c
  5854  000808  0100               	movlb	0	; () banked
  5855  00080A  23C8               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  5856                           
  5857                           ; BSR set to: 0
  5858  00080C  0100               	movlb	0	; () banked
  5859  00080E  2BC9               	incf	AdcPro@i& (0+255),f,b
  5860  000810  D7E5               	goto	l3567
  5861  000812                     l3577:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;app.c: 714: }
  5865                           ;app.c: 715: SysRunData.ADC_Buf[0x01] = sum / 5;
  5866  000812  C0C7  F0C0         	movff	AdcPro@sum,___lwdiv@dividend
  5867  000816  C0C8  F0C1         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  5868  00081A  0E00               	movlw	0
  5869  00081C  0100               	movlb	0	; () banked
  5870  00081E  6FC3               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5871  000820  0E05               	movlw	5
  5872  000822  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5873  000824  EC4C  F009         	call	___lwdiv	;wreg free
  5874  000828  C0C0  F014         	movff	?___lwdiv,_SysRunData+18
  5875  00082C  C0C1  F015         	movff	?___lwdiv+1,_SysRunData+19
  5876                           
  5877                           ;app.c: 716: index = 0x02;
  5878  000830  0E02               	movlw	2
  5879  000832  0100               	movlb	0	; () banked
  5880  000834  6FE3               	movwf	AdcPro@index& (0+255),b
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;app.c: 717: ADC_StartConversion(0x02);
  5884  000836  0E02               	movlw	2
  5885  000838  ECCA  F00B         	call	_ADC_StartConversion
  5886                           
  5887                           ;app.c: 718: }
  5888  00083C  0012               	return	
  5889  00083E                     l3583:
  5890                           
  5891                           ;app.c: 719: else if(index == 0x02)
  5892  00083E  0E02               	movlw	2
  5893  000840  0100               	movlb	0	; () banked
  5894  000842  19E3               	xorwf	AdcPro@index& (0+255),w,b
  5895  000844  A4D8               	btfss	status,2,c
  5896  000846  D04E               	goto	l3607
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;app.c: 720: {
  5900                           ;app.c: 721: buf[write][0x02] = ADC_GetConversionValue();
  5901  000848  EC20  F00B         	call	_ADC_GetConversionValue	;wreg free
  5902  00084C  0100               	movlb	0	; () banked
  5903  00084E  5188               	movf	AdcPro@write& (0+255),w,b
  5904  000850  0D08               	mullw	8
  5905  000852  0E04               	movlw	4
  5906  000854  26F3               	addwf	prodl,f,c
  5907  000856  0E00               	movlw	0
  5908  000858  22F4               	addwfc	prodh,f,c
  5909  00085A  0E60               	movlw	low AdcPro@buf
  5910  00085C  24F3               	addwf	prodl,w,c
  5911  00085E  6ED9               	movwf	fsr2l,c
  5912  000860  0E00               	movlw	high AdcPro@buf
  5913  000862  20F4               	addwfc	prodh,w,c
  5914  000864  6EDA               	movwf	fsr2h,c
  5915  000866  0100               	movlb	0	; () banked
  5916  000868  C0C0  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  5917  00086C  0100               	movlb	0	; () banked
  5918  00086E  C0C1  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;app.c: 726: sum = 0;
  5922  000872  0E00               	movlw	0
  5923  000874  0100               	movlb	0	; () banked
  5924  000876  6FC8               	movwf	(AdcPro@sum+1)& (0+255),b
  5925  000878  0E00               	movlw	0
  5926  00087A  6FC7               	movwf	AdcPro@sum& (0+255),b
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;app.c: 727: for (i = 0; i < 5; i++)
  5930  00087C  0E00               	movlw	0
  5931  00087E  0100               	movlb	0	; () banked
  5932  000880  6FC9               	movwf	AdcPro@i& (0+255),b
  5933  000882                     l3591:
  5934                           
  5935                           ; BSR set to: 0
  5936  000882  0E04               	movlw	4
  5937  000884  0100               	movlb	0	; () banked
  5938  000886  65C9               	cpfsgt	AdcPro@i& (0+255),b
  5939  000888  D001               	goto	l3595
  5940                           
  5941                           ; BSR set to: 0
  5942  00088A  D016               	goto	l3601
  5943  00088C                     l3595:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;app.c: 728: {
  5947                           ;app.c: 729: sum += buf[i][0x02];
  5948  00088C  0100               	movlb	0	; () banked
  5949  00088E  51C9               	movf	AdcPro@i& (0+255),w,b
  5950  000890  0D08               	mullw	8
  5951  000892  0E04               	movlw	4
  5952  000894  26F3               	addwf	prodl,f,c
  5953  000896  0E00               	movlw	0
  5954  000898  22F4               	addwfc	prodh,f,c
  5955  00089A  0E60               	movlw	low AdcPro@buf
  5956  00089C  24F3               	addwf	prodl,w,c
  5957  00089E  6ED9               	movwf	fsr2l,c
  5958  0008A0  0E00               	movlw	high AdcPro@buf
  5959  0008A2  20F4               	addwfc	prodh,w,c
  5960  0008A4  6EDA               	movwf	fsr2h,c
  5961  0008A6  50DE               	movf	postinc2,w,c
  5962  0008A8  0100               	movlb	0	; () banked
  5963  0008AA  27C7               	addwf	AdcPro@sum& (0+255),f,b
  5964  0008AC  50DD               	movf	postdec2,w,c
  5965  0008AE  0100               	movlb	0	; () banked
  5966  0008B0  23C8               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  5967                           
  5968                           ; BSR set to: 0
  5969  0008B2  0100               	movlb	0	; () banked
  5970  0008B4  2BC9               	incf	AdcPro@i& (0+255),f,b
  5971  0008B6  D7E5               	goto	l3591
  5972  0008B8                     l3601:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;app.c: 730: }
  5976                           ;app.c: 731: SysRunData.ADC_Buf[0x02] = sum / 5;
  5977  0008B8  C0C7  F0C0         	movff	AdcPro@sum,___lwdiv@dividend
  5978  0008BC  C0C8  F0C1         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  5979  0008C0  0E00               	movlw	0
  5980  0008C2  0100               	movlb	0	; () banked
  5981  0008C4  6FC3               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5982  0008C6  0E05               	movlw	5
  5983  0008C8  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5984  0008CA  EC4C  F009         	call	___lwdiv	;wreg free
  5985  0008CE  C0C0  F016         	movff	?___lwdiv,_SysRunData+20
  5986  0008D2  C0C1  F017         	movff	?___lwdiv+1,_SysRunData+21
  5987                           
  5988                           ;app.c: 733: index = 0x03;
  5989  0008D6  0E03               	movlw	3
  5990  0008D8  0100               	movlb	0	; () banked
  5991  0008DA  6FE3               	movwf	AdcPro@index& (0+255),b
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;app.c: 734: ADC_StartConversion(0x03);
  5995  0008DC  0E03               	movlw	3
  5996  0008DE  ECCA  F00B         	call	_ADC_StartConversion
  5997                           
  5998                           ;app.c: 735: }
  5999  0008E2  0012               	return	
  6000  0008E4                     l3607:
  6001                           
  6002                           ;app.c: 736: else if(index == 0x03)
  6003  0008E4  0E03               	movlw	3
  6004  0008E6  0100               	movlb	0	; () banked
  6005  0008E8  19E3               	xorwf	AdcPro@index& (0+255),w,b
  6006  0008EA  A4D8               	btfss	status,2,c
  6007  0008EC  0012               	return	
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;app.c: 737: {
  6011                           ;app.c: 738: buf[write][0x03] = ADC_GetConversionValue();
  6012  0008EE  EC20  F00B         	call	_ADC_GetConversionValue	;wreg free
  6013  0008F2  0100               	movlb	0	; () banked
  6014  0008F4  5188               	movf	AdcPro@write& (0+255),w,b
  6015  0008F6  0D08               	mullw	8
  6016  0008F8  0E06               	movlw	6
  6017  0008FA  26F3               	addwf	prodl,f,c
  6018  0008FC  0E00               	movlw	0
  6019  0008FE  22F4               	addwfc	prodh,f,c
  6020  000900  0E60               	movlw	low AdcPro@buf
  6021  000902  24F3               	addwf	prodl,w,c
  6022  000904  6ED9               	movwf	fsr2l,c
  6023  000906  0E00               	movlw	high AdcPro@buf
  6024  000908  20F4               	addwfc	prodh,w,c
  6025  00090A  6EDA               	movwf	fsr2h,c
  6026  00090C  0100               	movlb	0	; () banked
  6027  00090E  C0C0  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  6028  000912  0100               	movlb	0	; () banked
  6029  000914  C0C1  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;app.c: 742: sum = 0;
  6033  000918  0E00               	movlw	0
  6034  00091A  0100               	movlb	0	; () banked
  6035  00091C  6FC8               	movwf	(AdcPro@sum+1)& (0+255),b
  6036  00091E  0E00               	movlw	0
  6037  000920  6FC7               	movwf	AdcPro@sum& (0+255),b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;app.c: 743: for (i = 0; i < 5; i++)
  6041  000922  0E00               	movlw	0
  6042  000924  0100               	movlb	0	; () banked
  6043  000926  6FC9               	movwf	AdcPro@i& (0+255),b
  6044  000928                     l3615:
  6045                           
  6046                           ; BSR set to: 0
  6047  000928  0E04               	movlw	4
  6048  00092A  0100               	movlb	0	; () banked
  6049  00092C  65C9               	cpfsgt	AdcPro@i& (0+255),b
  6050  00092E  D001               	goto	l3619
  6051                           
  6052                           ; BSR set to: 0
  6053  000930  D016               	goto	l3625
  6054  000932                     l3619:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;app.c: 744: {
  6058                           ;app.c: 745: sum += buf[i][0x03];
  6059  000932  0100               	movlb	0	; () banked
  6060  000934  51C9               	movf	AdcPro@i& (0+255),w,b
  6061  000936  0D08               	mullw	8
  6062  000938  0E06               	movlw	6
  6063  00093A  26F3               	addwf	prodl,f,c
  6064  00093C  0E00               	movlw	0
  6065  00093E  22F4               	addwfc	prodh,f,c
  6066  000940  0E60               	movlw	low AdcPro@buf
  6067  000942  24F3               	addwf	prodl,w,c
  6068  000944  6ED9               	movwf	fsr2l,c
  6069  000946  0E00               	movlw	high AdcPro@buf
  6070  000948  20F4               	addwfc	prodh,w,c
  6071  00094A  6EDA               	movwf	fsr2h,c
  6072  00094C  50DE               	movf	postinc2,w,c
  6073  00094E  0100               	movlb	0	; () banked
  6074  000950  27C7               	addwf	AdcPro@sum& (0+255),f,b
  6075  000952  50DD               	movf	postdec2,w,c
  6076  000954  0100               	movlb	0	; () banked
  6077  000956  23C8               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  6078                           
  6079                           ; BSR set to: 0
  6080  000958  0100               	movlb	0	; () banked
  6081  00095A  2BC9               	incf	AdcPro@i& (0+255),f,b
  6082  00095C  D7E5               	goto	l3615
  6083  00095E                     l3625:
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;app.c: 746: }
  6087                           ;app.c: 747: SysRunData.ADC_Buf[0x03] = sum / 5;
  6088  00095E  C0C7  F0C0         	movff	AdcPro@sum,___lwdiv@dividend
  6089  000962  C0C8  F0C1         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  6090  000966  0E00               	movlw	0
  6091  000968  0100               	movlb	0	; () banked
  6092  00096A  6FC3               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6093  00096C  0E05               	movlw	5
  6094  00096E  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  6095  000970  EC4C  F009         	call	___lwdiv	;wreg free
  6096  000974  C0C0  F018         	movff	?___lwdiv,_SysRunData+22
  6097  000978  C0C1  F019         	movff	?___lwdiv+1,_SysRunData+23
  6098                           
  6099                           ;app.c: 748: if (++write >= 5)
  6100  00097C  0100               	movlb	0	; () banked
  6101  00097E  2B88               	incf	AdcPro@write& (0+255),f,b
  6102  000980  0E04               	movlw	4
  6103  000982  0100               	movlb	0	; () banked
  6104  000984  6588               	cpfsgt	AdcPro@write& (0+255),b
  6105  000986  D003               	goto	l297
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;app.c: 749: {
  6109                           ;app.c: 750: write = 0;
  6110  000988  0E00               	movlw	0
  6111  00098A  0100               	movlb	0	; () banked
  6112  00098C  6F88               	movwf	AdcPro@write& (0+255),b
  6113  00098E                     l297:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;app.c: 751: }
  6117                           ;app.c: 752: index = 0x01;
  6118  00098E  0E01               	movlw	1
  6119  000990  0100               	movlb	0	; () banked
  6120  000992  6FE3               	movwf	AdcPro@index& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;app.c: 753: ADC_StartConversion(0x01);
  6124  000994  0E01               	movlw	1
  6125  000996  ECCA  F00B         	call	_ADC_StartConversion
  6126  00099A  0012               	return	
  6127  00099C  0012               	return		;funcret
  6128  00099E                     __end_of_AdcPro:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           intcon	equ	0xFF2
  6137                           intcon2	equ	0xFF1
  6138                           postinc0	equ	0xFEE
  6139                           wreg	equ	0xFE8
  6140                           indf1	equ	0xFE7
  6141                           postinc1	equ	0xFE6
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           indf2	equ	0xFDF
  6145                           postinc2	equ	0xFDE
  6146                           postdec2	equ	0xFDD
  6147                           fsr2h	equ	0xFDA
  6148                           fsr2l	equ	0xFD9
  6149                           status	equ	0xFD8
  6150                           
  6151 ;; *************** function ___lwdiv *****************
  6152 ;; Defined at:
  6153 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  dividend        2   14[BANK0 ] unsigned int 
  6156 ;;  divisor         2   16[BANK0 ] unsigned int 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  quotient        2   19[BANK0 ] unsigned int 
  6159 ;;  counter         1   18[BANK0 ] unsigned char 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  2   14[BANK0 ] unsigned int 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;Total ram usage:        7 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    4
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_AdcPro
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text26
  6184  001298                     __ptext26:
  6185                           	opt stack 0
  6186  001298                     ___lwdiv:
  6187                           	opt stack 24
  6188                           
  6189                           ;incstack = 0
  6190  001298  0E00               	movlw	0
  6191  00129A  0100               	movlb	0	; () banked
  6192  00129C  6FC6               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6193  00129E  0E00               	movlw	0
  6194  0012A0  6FC5               	movwf	___lwdiv@quotient& (0+255),b
  6195                           
  6196                           ; BSR set to: 0
  6197  0012A2  0100               	movlb	0	; () banked
  6198  0012A4  51C2               	movf	___lwdiv@divisor& (0+255),w,b
  6199  0012A6  0100               	movlb	0	; () banked
  6200  0012A8  11C3               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6201  0012AA  B4D8               	btfsc	status,2,c
  6202  0012AC  D031               	goto	l1226
  6203                           
  6204                           ; BSR set to: 0
  6205  0012AE  0E01               	movlw	1
  6206  0012B0  0100               	movlb	0	; () banked
  6207  0012B2  6FC4               	movwf	___lwdiv@counter& (0+255),b
  6208  0012B4  D007               	goto	l3525
  6209  0012B6                     l3523:
  6210                           
  6211                           ; BSR set to: 0
  6212  0012B6  0100               	movlb	0	; () banked
  6213  0012B8  90D8               	bcf	status,0,c
  6214  0012BA  37C2               	rlcf	___lwdiv@divisor& (0+255),f,b
  6215  0012BC  37C3               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6216  0012BE  0100               	movlb	0	; () banked
  6217  0012C0  2BC4               	incf	___lwdiv@counter& (0+255),f,b
  6218  0012C2  D000               	goto	l3525
  6219  0012C4                     l3525:
  6220                           
  6221                           ; BSR set to: 0
  6222  0012C4  0100               	movlb	0	; () banked
  6223  0012C6  BFC3               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6224  0012C8  D002               	goto	l3527
  6225  0012CA  D7F5               	goto	l3523
  6226                           
  6227                           ; BSR set to: 0
  6228  0012CC  D000               	goto	l3527
  6229  0012CE                     l3527:
  6230                           
  6231                           ; BSR set to: 0
  6232  0012CE  0100               	movlb	0	; () banked
  6233  0012D0  90D8               	bcf	status,0,c
  6234  0012D2  37C5               	rlcf	___lwdiv@quotient& (0+255),f,b
  6235  0012D4  37C6               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6236                           
  6237                           ; BSR set to: 0
  6238  0012D6  0100               	movlb	0	; () banked
  6239  0012D8  51C2               	movf	___lwdiv@divisor& (0+255),w,b
  6240  0012DA  0100               	movlb	0	; () banked
  6241  0012DC  5DC0               	subwf	___lwdiv@dividend& (0+255),w,b
  6242  0012DE  0100               	movlb	0	; () banked
  6243  0012E0  51C3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6244  0012E2  0100               	movlb	0	; () banked
  6245  0012E4  59C1               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6246  0012E6  A0D8               	btfss	status,0,c
  6247  0012E8  D00B               	goto	l3535
  6248                           
  6249                           ; BSR set to: 0
  6250  0012EA  0100               	movlb	0	; () banked
  6251  0012EC  51C2               	movf	___lwdiv@divisor& (0+255),w,b
  6252  0012EE  0100               	movlb	0	; () banked
  6253  0012F0  5FC0               	subwf	___lwdiv@dividend& (0+255),f,b
  6254  0012F2  0100               	movlb	0	; () banked
  6255  0012F4  51C3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6256  0012F6  0100               	movlb	0	; () banked
  6257  0012F8  5BC1               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6258                           
  6259                           ; BSR set to: 0
  6260  0012FA  0100               	movlb	0	; () banked
  6261  0012FC  81C5               	bsf	___lwdiv@quotient& (0+255),0,b
  6262  0012FE  D000               	goto	l3535
  6263  001300                     l3535:
  6264                           
  6265                           ; BSR set to: 0
  6266  001300  0100               	movlb	0	; () banked
  6267  001302  90D8               	bcf	status,0,c
  6268  001304  33C3               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6269  001306  33C2               	rrcf	___lwdiv@divisor& (0+255),f,b
  6270                           
  6271                           ; BSR set to: 0
  6272  001308  0100               	movlb	0	; () banked
  6273  00130A  2FC4               	decfsz	___lwdiv@counter& (0+255),f,b
  6274  00130C  D7E0               	goto	l3527
  6275  00130E  D000               	goto	l1226
  6276  001310                     l1226:
  6277                           
  6278                           ; BSR set to: 0
  6279  001310  C0C5  F0C0         	movff	___lwdiv@quotient,?___lwdiv
  6280  001314  C0C6  F0C1         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6281                           
  6282                           ; BSR set to: 0
  6283  001318  0012               	return		;funcret
  6284  00131A                     __end_of___lwdiv:
  6285                           	opt stack 0
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon2	equ	0xFF1
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           indf1	equ	0xFE7
  6297                           postinc1	equ	0xFE6
  6298                           fsr1h	equ	0xFE2
  6299                           fsr1l	equ	0xFE1
  6300                           indf2	equ	0xFDF
  6301                           postinc2	equ	0xFDE
  6302                           postdec2	equ	0xFDD
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _ADC_StartConversion *****************
  6308 ;; Defined at:
  6309 ;;		line 77 in file "source/adc.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  channel         1    wreg     unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  channel         1   15[BANK0 ] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;		None               void
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    4
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_ADC_Init
  6334 ;;		_AdcPro
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text27
  6339  001794                     __ptext27:
  6340                           	opt stack 0
  6341  001794                     _ADC_StartConversion:
  6342                           	opt stack 24
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;incstack = 0
  6346                           ;ADC_StartConversion@channel stored from wreg
  6347  001794  0100               	movlb	0	; () banked
  6348  001796  6FC1               	movwf	ADC_StartConversion@channel& (0+255),b
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;adc.c: 80: ADCON0bits.CHS = channel;
  6352  001798  C0C1  F0C0         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  6353  00179C  0100               	movlb	0	; () banked
  6354  00179E  47C0               	rlncf	??_ADC_StartConversion& (0+255),f,b
  6355  0017A0  47C0               	rlncf	??_ADC_StartConversion& (0+255),f,b
  6356  0017A2  50C2               	movf	4034,w,c	;volatile
  6357  0017A4  0100               	movlb	0	; () banked
  6358  0017A6  19C0               	xorwf	??_ADC_StartConversion& (0+255),w,b
  6359  0017A8  0B83               	andlw	-125
  6360  0017AA  19C0               	xorwf	??_ADC_StartConversion& (0+255),w,b
  6361  0017AC  6EC2               	movwf	4034,c	;volatile
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;adc.c: 82: ADCON0bits.ADON = 1;
  6365  0017AE  80C2               	bsf	4034,0,c	;volatile
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;adc.c: 87: ADCON0bits.GO_NOT_DONE = 1;
  6369  0017B0  82C2               	bsf	4034,1,c	;volatile
  6370                           
  6371                           ; BSR set to: 0
  6372  0017B2  0012               	return		;funcret
  6373  0017B4                     __end_of_ADC_StartConversion:
  6374                           	opt stack 0
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           postinc0	equ	0xFEE
  6384                           wreg	equ	0xFE8
  6385                           indf1	equ	0xFE7
  6386                           postinc1	equ	0xFE6
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function _ADC_GetConversionValue *****************
  6397 ;; Defined at:
  6398 ;;		line 60 in file "source/adc.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  ADC_Result      2   19[BANK0 ] unsigned int 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2   14[BANK0 ] unsigned int 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;Total ram usage:        7 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    4
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_AdcPro
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text28
  6427  001640                     __ptext28:
  6428                           	opt stack 0
  6429  001640                     _ADC_GetConversionValue:
  6430                           	opt stack 24
  6431                           
  6432                           ;adc.c: 62: uint16_t ADC_Result = 0;
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;incstack = 0
  6436  001640  0E00               	movlw	0
  6437  001642  0100               	movlb	0	; () banked
  6438  001644  6FC6               	movwf	(ADC_GetConversionValue@ADC_Result+1)& (0+255),b
  6439  001646  0E00               	movlw	0
  6440  001648  6FC5               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;adc.c: 65: ADC_Result = (uint16_t)ADRESH << 8|(ADRESL&0xE0);
  6444  00164A  CFC3 F0C2          	movff	4035,??_ADC_GetConversionValue	;volatile
  6445  00164E  0EE0               	movlw	224
  6446  001650  0100               	movlb	0	; () banked
  6447  001652  17C2               	andwf	??_ADC_GetConversionValue& (0+255),f,b
  6448  001654  50C4               	movf	4036,w,c	;volatile
  6449  001656  0100               	movlb	0	; () banked
  6450  001658  6FC3               	movwf	(??_ADC_GetConversionValue+1)& (0+255),b
  6451  00165A  0100               	movlb	0	; () banked
  6452  00165C  51C2               	movf	??_ADC_GetConversionValue& (0+255),w,b
  6453  00165E  0100               	movlb	0	; () banked
  6454  001660  6FC5               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  6455  001662  C0C3  F0C6         	movff	??_ADC_GetConversionValue+1,ADC_GetConversionValue@ADC_Result+1
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;adc.c: 67: return ADC_Result;
  6459  001666  C0C5  F0C0         	movff	ADC_GetConversionValue@ADC_Result,?_ADC_GetConversionValue
  6460  00166A  C0C6  F0C1         	movff	ADC_GetConversionValue@ADC_Result+1,?_ADC_GetConversionValue+1
  6461  00166E  0012               	return	
  6462                           
  6463                           ; BSR set to: 0
  6464                           
  6465                           ; BSR set to: 0
  6466  001670  0012               	return		;funcret
  6467  001672                     __end_of_ADC_GetConversionValue:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           intcon	equ	0xFF2
  6476                           intcon2	equ	0xFF1
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postinc1	equ	0xFE6
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8
  6489                           
  6490 ;; *************** function _Lows_ISR *****************
  6491 ;; Defined at:
  6492 ;;		line 171 in file "source/timer.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  i               1   21[COMRAM] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;		None               void
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;Total ram usage:       18 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    3
  6513 ;; This function calls:
  6514 ;;		_bsp_SoftTimerDec
  6515 ;; This function is called by:
  6516 ;;		Interrupt level 1
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	intcodelo
  6521  000018                     __pintcodelo:
  6522                           	opt stack 0
  6523  000018                     _Lows_ISR:
  6524                           	opt stack 21
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;incstack = 0
  6528  000018  CFD8 F02B          	movff	status,??_Lows_ISR
  6529  00001C  CFE8 F02C          	movff	wreg,??_Lows_ISR+1
  6530  000020  CFE0 F02D          	movff	bsr,??_Lows_ISR+2
  6531  000024  CFFA F02E          	movff	pclath,??_Lows_ISR+3
  6532  000028  CFFB F02F          	movff	pclatu,??_Lows_ISR+4
  6533  00002C  CFE9 F030          	movff	fsr0l,??_Lows_ISR+5
  6534  000030  CFEA F031          	movff	fsr0h,??_Lows_ISR+6
  6535  000034  CFE1 F032          	movff	fsr1l,??_Lows_ISR+7
  6536  000038  CFE2 F033          	movff	fsr1h,??_Lows_ISR+8
  6537  00003C  CFD9 F034          	movff	fsr2l,??_Lows_ISR+9
  6538  000040  CFDA F035          	movff	fsr2h,??_Lows_ISR+10
  6539  000044  CFF3 F036          	movff	prodl,??_Lows_ISR+11
  6540  000048  CFF4 F037          	movff	prodh,??_Lows_ISR+12
  6541  00004C  CFF6 F038          	movff	tblptrl,??_Lows_ISR+13
  6542  000050  CFF7 F039          	movff	tblptrh,??_Lows_ISR+14
  6543  000054  CFF8 F03A          	movff	tblptru,??_Lows_ISR+15
  6544  000058  CFF5 F03B          	movff	tablat,??_Lows_ISR+16
  6545                           
  6546                           ;timer.c: 173: uint8_t i;
  6547                           ;timer.c: 174: static uint8_t s_count = 0;
  6548                           ;timer.c: 176: if(INTCONbits.T0IF == 1)
  6549  00005C  A4F2               	btfss	intcon,2,c	;volatile
  6550  00005E  D01E               	goto	i1l582
  6551                           
  6552                           ;timer.c: 177: {
  6553                           ;timer.c: 178: INTCONbits.T0IF = 0;
  6554  000060  94F2               	bcf	intcon,2,c	;volatile
  6555                           
  6556                           ;timer.c: 179: TMR0H = T0RH;
  6557  000062  C089  FFD7         	movff	_T0RH,4055	;volatile
  6558                           
  6559                           ;timer.c: 180: TMR0L = T0RL;
  6560  000066  C08A  FFD6         	movff	_T0RL,4054	;volatile
  6561                           
  6562                           ;timer.c: 182: for (i = 0; i < 2; i++)
  6563  00006A  0E00               	movlw	0
  6564  00006C  6E3C               	movwf	Lows_ISR@i,c
  6565  00006E                     i1l3203:
  6566  00006E  0E01               	movlw	1
  6567  000070  643C               	cpfsgt	Lows_ISR@i,c
  6568  000072  D001               	goto	i1l3207
  6569  000074  D00C               	goto	i1l3213
  6570  000076                     i1l3207:
  6571                           
  6572                           ;timer.c: 183: {
  6573                           ;timer.c: 184: bsp_SoftTimerDec(&s_tTmr[i]);
  6574  000076  503C               	movf	Lows_ISR@i,w,c
  6575  000078  0D06               	mullw	6
  6576  00007A  0E1B               	movlw	low _s_tTmr
  6577  00007C  24F3               	addwf	prodl,w,c
  6578  00007E  6E27               	movwf	bsp_SoftTimerDec@_tmr,c
  6579  000080  0E00               	movlw	high _s_tTmr
  6580  000082  20F4               	addwfc	prodh,w,c
  6581  000084  6E28               	movwf	bsp_SoftTimerDec@_tmr+1,c
  6582  000086  ECCA  F009         	call	_bsp_SoftTimerDec	;wreg free
  6583  00008A  2A3C               	incf	Lows_ISR@i,f,c
  6584  00008C  D7F0               	goto	i1l3203
  6585  00008E                     i1l3213:
  6586                           
  6587                           ;timer.c: 185: }
  6588                           ;timer.c: 186: if (++s_count >= 10)
  6589  00008E  2A01               	incf	Lows_ISR@s_count,f,c
  6590  000090  0E09               	movlw	9
  6591  000092  6401               	cpfsgt	Lows_ISR@s_count,c
  6592  000094  D003               	goto	i1l582
  6593                           
  6594                           ;timer.c: 187: {
  6595                           ;timer.c: 188: s_count = 0;
  6596  000096  0E00               	movlw	0
  6597  000098  6E01               	movwf	Lows_ISR@s_count,c
  6598  00009A  D000               	goto	i1l582
  6599  00009C                     i1l582:
  6600  00009C  C03B  FFF5         	movff	??_Lows_ISR+16,tablat
  6601  0000A0  C03A  FFF8         	movff	??_Lows_ISR+15,tblptru
  6602  0000A4  C039  FFF7         	movff	??_Lows_ISR+14,tblptrh
  6603  0000A8  C038  FFF6         	movff	??_Lows_ISR+13,tblptrl
  6604  0000AC  C037  FFF4         	movff	??_Lows_ISR+12,prodh
  6605  0000B0  C036  FFF3         	movff	??_Lows_ISR+11,prodl
  6606  0000B4  C035  FFDA         	movff	??_Lows_ISR+10,fsr2h
  6607  0000B8  C034  FFD9         	movff	??_Lows_ISR+9,fsr2l
  6608  0000BC  C033  FFE2         	movff	??_Lows_ISR+8,fsr1h
  6609  0000C0  C032  FFE1         	movff	??_Lows_ISR+7,fsr1l
  6610  0000C4  C031  FFEA         	movff	??_Lows_ISR+6,fsr0h
  6611  0000C8  C030  FFE9         	movff	??_Lows_ISR+5,fsr0l
  6612  0000CC  C02F  FFFB         	movff	??_Lows_ISR+4,pclatu
  6613  0000D0  C02E  FFFA         	movff	??_Lows_ISR+3,pclath
  6614  0000D4  C02D  FFE0         	movff	??_Lows_ISR+2,bsr
  6615  0000D8  C02C  FFE8         	movff	??_Lows_ISR+1,wreg
  6616  0000DC  C02B  FFD8         	movff	??_Lows_ISR,status
  6617  0000E0  0010               	retfie	
  6618  0000E2                     __end_of_Lows_ISR:
  6619                           	opt stack 0
  6620                           pclatu	equ	0xFFB
  6621                           pclath	equ	0xFFA
  6622                           tblptru	equ	0xFF8
  6623                           tblptrh	equ	0xFF7
  6624                           tblptrl	equ	0xFF6
  6625                           tablat	equ	0xFF5
  6626                           prodh	equ	0xFF4
  6627                           prodl	equ	0xFF3
  6628                           intcon	equ	0xFF2
  6629                           intcon2	equ	0xFF1
  6630                           postinc0	equ	0xFEE
  6631                           fsr0h	equ	0xFEA
  6632                           fsr0l	equ	0xFE9
  6633                           wreg	equ	0xFE8
  6634                           indf1	equ	0xFE7
  6635                           postinc1	equ	0xFE6
  6636                           fsr1h	equ	0xFE2
  6637                           fsr1l	equ	0xFE1
  6638                           bsr	equ	0xFE0
  6639                           indf2	equ	0xFDF
  6640                           postinc2	equ	0xFDE
  6641                           postdec2	equ	0xFDD
  6642                           fsr2h	equ	0xFDA
  6643                           fsr2l	equ	0xFD9
  6644                           status	equ	0xFD8
  6645                           
  6646 ;; *************** function _bsp_SoftTimerDec *****************
  6647 ;; Defined at:
  6648 ;;		line 42 in file "source/timer.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  _tmr            2    0[COMRAM] PTR volatile struct .
  6651 ;;		 -> s_tTmr(12), 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;Total ram usage:        4 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    2
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_Lows_ISR
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text30
  6678  001394                     __ptext30:
  6679                           	opt stack 0
  6680  001394                     _bsp_SoftTimerDec:
  6681                           	opt stack 21
  6682                           
  6683                           ;timer.c: 44: if (_tmr->Count > 0)
  6684                           
  6685                           ;incstack = 0
  6686  001394  EE20 F002          	lfsr	2,2
  6687  001398  5027               	movf	bsp_SoftTimerDec@_tmr,w,c
  6688  00139A  26D9               	addwf	fsr2l,f,c
  6689  00139C  5028               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  6690  00139E  22DA               	addwfc	fsr2h,f,c
  6691  0013A0  50DE               	movf	postinc2,w,c
  6692  0013A2  10DE               	iorwf	postinc2,w,c
  6693  0013A4  B4D8               	btfsc	status,2,c
  6694  0013A6  0012               	return	
  6695                           
  6696                           ;timer.c: 45: {
  6697                           ;timer.c: 47: if (--_tmr->Count == 0)
  6698  0013A8  EE20 F002          	lfsr	2,2
  6699  0013AC  5027               	movf	bsp_SoftTimerDec@_tmr,w,c
  6700  0013AE  26D9               	addwf	fsr2l,f,c
  6701  0013B0  5028               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  6702  0013B2  22DA               	addwfc	fsr2h,f,c
  6703  0013B4  06DE               	decf	postinc2,f,c
  6704  0013B6  0E00               	movlw	0
  6705  0013B8  5ADD               	subwfb	postdec2,f,c
  6706  0013BA  50DE               	movf	postinc2,w,c
  6707  0013BC  10DE               	iorwf	postinc2,w,c
  6708  0013BE  A4D8               	btfss	status,2,c
  6709  0013C0  0012               	return	
  6710                           
  6711                           ;timer.c: 48: {
  6712                           ;timer.c: 49: _tmr->Flag = 1;
  6713  0013C2  EE20 F001          	lfsr	2,1
  6714  0013C6  5027               	movf	bsp_SoftTimerDec@_tmr,w,c
  6715  0013C8  26D9               	addwf	fsr2l,f,c
  6716  0013CA  5028               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  6717  0013CC  22DA               	addwfc	fsr2h,f,c
  6718  0013CE  0E01               	movlw	1
  6719  0013D0  6EDF               	movwf	indf2,c
  6720                           
  6721                           ;timer.c: 52: if(_tmr->Mode == TMR_AUTO_MODE)
  6722  0013D2  C027  FFD9         	movff	bsp_SoftTimerDec@_tmr,fsr2l
  6723  0013D6  C028  FFDA         	movff	bsp_SoftTimerDec@_tmr+1,fsr2h
  6724  0013DA  04DE               	decf	postinc2,w,c
  6725  0013DC  A4D8               	btfss	status,2,c
  6726  0013DE  0012               	return	
  6727                           
  6728                           ;timer.c: 53: {
  6729                           ;timer.c: 54: _tmr->Count = _tmr->PreLoad;
  6730  0013E0  EE20 F004          	lfsr	2,4
  6731  0013E4  5027               	movf	bsp_SoftTimerDec@_tmr,w,c
  6732  0013E6  26D9               	addwf	fsr2l,f,c
  6733  0013E8  5028               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  6734  0013EA  22DA               	addwfc	fsr2h,f,c
  6735  0013EC  EE10 F002          	lfsr	1,2
  6736  0013F0  5027               	movf	bsp_SoftTimerDec@_tmr,w,c
  6737  0013F2  26E1               	addwf	fsr1l,f,c
  6738  0013F4  5028               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  6739  0013F6  22E2               	addwfc	fsr1h,f,c
  6740  0013F8  CFDE FFE6          	movff	postinc2,postinc1
  6741  0013FC  CFDD FFE5          	movff	postdec2,postdec1
  6742  001400  0012               	return	
  6743  001402  0012               	return		;funcret
  6744  001404                     __end_of_bsp_SoftTimerDec:
  6745                           	opt stack 0
  6746                           pclatu	equ	0xFFB
  6747                           pclath	equ	0xFFA
  6748                           tblptru	equ	0xFF8
  6749                           tblptrh	equ	0xFF7
  6750                           tblptrl	equ	0xFF6
  6751                           tablat	equ	0xFF5
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           intcon2	equ	0xFF1
  6756                           postinc0	equ	0xFEE
  6757                           fsr0h	equ	0xFEA
  6758                           fsr0l	equ	0xFE9
  6759                           wreg	equ	0xFE8
  6760                           indf1	equ	0xFE7
  6761                           postinc1	equ	0xFE6
  6762                           postdec1	equ	0xFE5
  6763                           fsr1h	equ	0xFE2
  6764                           fsr1l	equ	0xFE1
  6765                           bsr	equ	0xFE0
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function _High_ISR *****************
  6774 ;; Defined at:
  6775 ;;		line 347 in file "source/ecan.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  LastKnowNPOR    1   28[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;		None               void
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6791 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;Total ram usage:       15 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    1
  6796 ;; This function calls:
  6797 ;;		_ECAN_Receive
  6798 ;; This function is called by:
  6799 ;;		Interrupt level 2
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	intcode
  6804  000008                     __pintcode:
  6805                           	opt stack 0
  6806  000008                     _High_ISR:
  6807                           	opt stack 21
  6808                           
  6809                           ;incstack = 0
  6810  000008  CFFA F0B2          	movff	pclath,??_High_ISR
  6811  00000C  CFFB F0B3          	movff	pclatu,??_High_ISR+1
  6812  000010  CFE9 F0B4          	movff	fsr0l,??_High_ISR+2
  6813  000014  EF7F  F007         	goto	int_func
  6814                           pclatu	equ	0xFFB
  6815                           pclath	equ	0xFFA
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           intcon	equ	0xFF2
  6823                           intcon2	equ	0xFF1
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           indf1	equ	0xFE7
  6829                           postinc1	equ	0xFE6
  6830                           postdec1	equ	0xFE5
  6831                           fsr1h	equ	0xFE2
  6832                           fsr1l	equ	0xFE1
  6833                           bsr	equ	0xFE0
  6834                           indf2	equ	0xFDF
  6835                           postinc2	equ	0xFDE
  6836                           postdec2	equ	0xFDD
  6837                           fsr2h	equ	0xFDA
  6838                           fsr2l	equ	0xFD9
  6839                           status	equ	0xFD8
  6840                           
  6841                           	psect	intcode_body
  6842  000EFE                     __pintcode_body:
  6843                           	opt stack 21
  6844  000EFE                     int_func:
  6845                           	opt stack 21
  6846  000EFE  CFEA F0B5          	movff	fsr0h,??_High_ISR+3
  6847  000F02  CFE1 F0B6          	movff	fsr1l,??_High_ISR+4
  6848  000F06  CFE2 F0B7          	movff	fsr1h,??_High_ISR+5
  6849  000F0A  CFD9 F0B8          	movff	fsr2l,??_High_ISR+6
  6850  000F0E  CFDA F0B9          	movff	fsr2h,??_High_ISR+7
  6851  000F12  CFF3 F0BA          	movff	prodl,??_High_ISR+8
  6852  000F16  CFF4 F0BB          	movff	prodh,??_High_ISR+9
  6853  000F1A  CFF6 F0BC          	movff	tblptrl,??_High_ISR+10
  6854  000F1E  CFF7 F0BD          	movff	tblptrh,??_High_ISR+11
  6855  000F22  CFF8 F0BE          	movff	tblptru,??_High_ISR+12
  6856  000F26  CFF5 F0BF          	movff	tablat,??_High_ISR+13
  6857                           
  6858                           ;ecan.c: 349: uint8_t LastKnowNPORTB;
  6859                           ;ecan.c: 351: if(INTCONbits.RBIF == 1)
  6860  000F2A  A0F2               	btfss	intcon,0,c	;volatile
  6861  000F2C  D004               	goto	i2l507
  6862                           
  6863                           ;ecan.c: 352: {
  6864                           ;ecan.c: 353: LastKnowNPORTB = PORTB;
  6865  000F2E  CF81 F043          	movff	3969,High_ISR@LastKnowNPORTB	;volatile
  6866                           
  6867                           ;ecan.c: 354: __nop();
  6868  000F32  F000               	nop	
  6869                           
  6870                           ;ecan.c: 355: INTCONbits.RBIF = 0;
  6871  000F34  90F2               	bcf	intcon,0,c	;volatile
  6872  000F36                     i2l507:
  6873                           
  6874                           ;ecan.c: 356: }
  6875                           ;ecan.c: 357: if(PIR5bits.WAKIF == 1)
  6876  000F36  BC77               	btfsc	3959,6,c	;volatile
  6877                           
  6878                           ;ecan.c: 358: {
  6879                           ;ecan.c: 359: PIR5bits.WAKIF = 0;
  6880  000F38  9C77               	bcf	3959,6,c	;volatile
  6881                           
  6882                           ;ecan.c: 360: }
  6883                           ;ecan.c: 365: if(PIR5bits.RXB0IF == 1)
  6884  000F3A  A077               	btfss	3959,0,c	;volatile
  6885  000F3C  D02C               	goto	i2l519
  6886                           
  6887                           ;ecan.c: 366: {
  6888                           ;ecan.c: 367: PIR5bits.RXB0IF=0;
  6889  000F3E  9077               	bcf	3959,0,c	;volatile
  6890                           
  6891                           ;ecan.c: 368: ECAN_Receive(&g_tCanRxMsg);
  6892  000F40  0E8B               	movlw	low _g_tCanRxMsg
  6893  000F42  6E3D               	movwf	ECAN_Receive@RxMessage,c
  6894  000F44  0E00               	movlw	high _g_tCanRxMsg
  6895  000F46  6E3E               	movwf	ECAN_Receive@RxMessage+1,c
  6896  000F48  EC84  F006         	call	_ECAN_Receive	;wreg free
  6897                           
  6898                           ;ecan.c: 373: if ((g_tCanRxMsg.StdId == 0X110) && (g_tCanRxMsg.IDE == 0X00) && (g_tCanRx
      +                          Msg.DLC == 0x08))
  6899  000F4C  0E10               	movlw	16
  6900  000F4E  0100               	movlb	0	; () banked
  6901  000F50  198B               	xorwf	_g_tCanRxMsg& (0+255),w,b
  6902  000F52  E121               	bnz	i2l519
  6903  000F54  0100               	movlb	0	; () banked
  6904  000F56  058C               	decf	(_g_tCanRxMsg+1)& (0+255),w,b
  6905  000F58  A4D8               	btfss	status,2,c
  6906  000F5A  D01D               	goto	i2l519
  6907                           
  6908                           ; BSR set to: 0
  6909  000F5C  0100               	movlb	0	; () banked
  6910  000F5E  518F               	movf	(_g_tCanRxMsg+4)& (0+255),w,b
  6911  000F60  A4D8               	btfss	status,2,c
  6912  000F62  D019               	goto	i2l519
  6913                           
  6914                           ; BSR set to: 0
  6915  000F64  0E08               	movlw	8
  6916  000F66  0100               	movlb	0	; () banked
  6917  000F68  1991               	xorwf	(_g_tCanRxMsg+6)& (0+255),w,b
  6918  000F6A  A4D8               	btfss	status,2,c
  6919  000F6C  D014               	goto	i2l519
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;ecan.c: 374: {
  6923                           ;ecan.c: 376: if(((g_tCanRxMsg.Data[5]&(0x02u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x08u)) 
      +                          == 0))
  6924  000F6E  0100               	movlb	0	; () banked
  6925  000F70  A397               	btfss	(_g_tCanRxMsg+12)& (0+255),1,b
  6926  000F72  D003               	goto	i2l4131
  6927                           
  6928                           ; BSR set to: 0
  6929  000F74  0100               	movlb	0	; () banked
  6930  000F76  B797               	btfsc	(_g_tCanRxMsg+12)& (0+255),3,b
  6931  000F78  D002               	goto	i2l4133
  6932  000F7A                     i2l4131:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;ecan.c: 377: {
  6936                           ;ecan.c: 378: SysRunData.PedalRunFlag |= (1<<0);
  6937  000F7A  801A               	bsf	_SysRunData+24,0,c
  6938                           
  6939                           ;ecan.c: 379: }
  6940  000F7C  D002               	goto	i2l4135
  6941  000F7E                     i2l4133:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;ecan.c: 380: else
  6945                           ;ecan.c: 381: {
  6946                           ;ecan.c: 382: SysRunData.PedalRunFlag &= ~(1<<0);
  6947  000F7E  901A               	bcf	_SysRunData+24,0,c
  6948  000F80  D000               	goto	i2l4135
  6949  000F82                     i2l4135:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;ecan.c: 383: }
  6953                           ;ecan.c: 385: if(((g_tCanRxMsg.Data[5]&(0x01u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x04u)) 
      +                          == 0))
  6954  000F82  0100               	movlb	0	; () banked
  6955  000F84  A197               	btfss	(_g_tCanRxMsg+12)& (0+255),0,b
  6956  000F86  D003               	goto	i2l4139
  6957                           
  6958                           ; BSR set to: 0
  6959  000F88  0100               	movlb	0	; () banked
  6960  000F8A  B597               	btfsc	(_g_tCanRxMsg+12)& (0+255),2,b
  6961  000F8C  D002               	goto	i2l4141
  6962  000F8E                     i2l4139:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;ecan.c: 386: {
  6966                           ;ecan.c: 387: SysRunData.PedalRunFlag |= (1<<1);
  6967  000F8E  821A               	bsf	_SysRunData+24,1,c
  6968                           
  6969                           ;ecan.c: 388: }
  6970  000F90  D002               	goto	i2l519
  6971  000F92                     i2l4141:
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;ecan.c: 389: else
  6975                           ;ecan.c: 390: {
  6976                           ;ecan.c: 391: SysRunData.PedalRunFlag &= ~(1<<1);
  6977  000F92  921A               	bcf	_SysRunData+24,1,c
  6978                           
  6979                           ; BSR set to: 0
  6980                           
  6981                           ; BSR set to: 0
  6982  000F94  D000               	goto	i2l519
  6983  000F96                     i2l519:
  6984  000F96  C0BF  FFF5         	movff	??_High_ISR+13,tablat
  6985  000F9A  C0BE  FFF8         	movff	??_High_ISR+12,tblptru
  6986  000F9E  C0BD  FFF7         	movff	??_High_ISR+11,tblptrh
  6987  000FA2  C0BC  FFF6         	movff	??_High_ISR+10,tblptrl
  6988  000FA6  C0BB  FFF4         	movff	??_High_ISR+9,prodh
  6989  000FAA  C0BA  FFF3         	movff	??_High_ISR+8,prodl
  6990  000FAE  C0B9  FFDA         	movff	??_High_ISR+7,fsr2h
  6991  000FB2  C0B8  FFD9         	movff	??_High_ISR+6,fsr2l
  6992  000FB6  C0B7  FFE2         	movff	??_High_ISR+5,fsr1h
  6993  000FBA  C0B6  FFE1         	movff	??_High_ISR+4,fsr1l
  6994  000FBE  C0B5  FFEA         	movff	??_High_ISR+3,fsr0h
  6995  000FC2  C0B4  FFE9         	movff	??_High_ISR+2,fsr0l
  6996  000FC6  C0B3  FFFB         	movff	??_High_ISR+1,pclatu
  6997  000FCA  C0B2  FFFA         	movff	??_High_ISR,pclath
  6998  000FCE  0011               	retfie		f
  6999  000FD0                     __end_of_High_ISR:
  7000                           	opt stack 0
  7001                           pclatu	equ	0xFFB
  7002                           pclath	equ	0xFFA
  7003                           tblptru	equ	0xFF8
  7004                           tblptrh	equ	0xFF7
  7005                           tblptrl	equ	0xFF6
  7006                           tablat	equ	0xFF5
  7007                           prodh	equ	0xFF4
  7008                           prodl	equ	0xFF3
  7009                           intcon	equ	0xFF2
  7010                           intcon2	equ	0xFF1
  7011                           postinc0	equ	0xFEE
  7012                           fsr0h	equ	0xFEA
  7013                           fsr0l	equ	0xFE9
  7014                           wreg	equ	0xFE8
  7015                           indf1	equ	0xFE7
  7016                           postinc1	equ	0xFE6
  7017                           postdec1	equ	0xFE5
  7018                           fsr1h	equ	0xFE2
  7019                           fsr1l	equ	0xFE1
  7020                           bsr	equ	0xFE0
  7021                           indf2	equ	0xFDF
  7022                           postinc2	equ	0xFDE
  7023                           postdec2	equ	0xFDD
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028 ;; *************** function _ECAN_Receive *****************
  7029 ;; Defined at:
  7030 ;;		line 164 in file "source/ecan.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  RxMessage       2   22[COMRAM] PTR struct .
  7033 ;;		 -> g_tCanRxMsg(16), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;		None               void
  7038 ;; Registers used:
  7039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;Total ram usage:        6 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_High_ISR
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text32
  7059  000D08                     __ptext32:
  7060                           	opt stack 0
  7061  000D08                     _ECAN_Receive:
  7062                           	opt stack 21
  7063                           
  7064                           ;ecan.c: 166: if (RXB0CONbits.RXFUL)
  7065                           
  7066                           ;incstack = 0
  7067  000D08  AE60               	btfss	3936,7,c	;volatile
  7068  000D0A  0012               	return	
  7069                           
  7070                           ;ecan.c: 169: {
  7071                           ;ecan.c: 171: RxMessage->IDE = RXB0SIDLbits.EXID;
  7072  000D0C  EE20 F004          	lfsr	2,4
  7073  000D10  503D               	movf	ECAN_Receive@RxMessage,w,c
  7074  000D12  26D9               	addwf	fsr2l,f,c
  7075  000D14  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7076  000D16  22DA               	addwfc	fsr2h,f,c
  7077  000D18  A662               	btfss	3938,3,c	;volatile
  7078  000D1A  D002               	goto	i2u257_40
  7079  000D1C  0E01               	movlw	1
  7080  000D1E  D001               	goto	i2u257_46
  7081  000D20                     i2u257_40:
  7082  000D20  0E00               	movlw	0
  7083  000D22                     i2u257_46:
  7084  000D22  6EDF               	movwf	indf2,c
  7085                           
  7086                           ;ecan.c: 172: if (RxMessage->IDE == 0X00)
  7087  000D24  EE20 F004          	lfsr	2,4
  7088  000D28  503D               	movf	ECAN_Receive@RxMessage,w,c
  7089  000D2A  26D9               	addwf	fsr2l,f,c
  7090  000D2C  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7091  000D2E  22DA               	addwfc	fsr2h,f,c
  7092  000D30  50DF               	movf	indf2,w,c
  7093  000D32  A4D8               	btfss	status,2,c
  7094  000D34  D021               	goto	i2l3129
  7095                           
  7096                           ;ecan.c: 173: {
  7097                           ;ecan.c: 174: RxMessage->StdId = (uint16_t)RXB0SIDH<<3 | (RXB0SIDL>>5);
  7098  000D36  CF62 F03F          	movff	3938,??_ECAN_Receive	;volatile
  7099  000D3A  0E05               	movlw	5
  7100  000D3C  6E40               	movwf	(??_ECAN_Receive+1)& (0+255),c
  7101  000D3E                     i2u259_45:
  7102  000D3E  90D8               	bcf	status,0,c
  7103  000D40  323F               	rrcf	??_ECAN_Receive,f,c
  7104  000D42  2E40               	decfsz	(??_ECAN_Receive+1)& (0+255),f,c
  7105  000D44  D7FC               	goto	i2u259_45
  7106  000D46  503F               	movf	??_ECAN_Receive,w,c
  7107  000D48  CF61 F041          	movff	3937,??_ECAN_Receive+2	;volatile
  7108  000D4C  6A42               	clrf	(??_ECAN_Receive+3)& (0+255),c
  7109  000D4E  90D8               	bcf	status,0,c
  7110  000D50  3641               	rlcf	??_ECAN_Receive+2,f,c
  7111  000D52  3642               	rlcf	??_ECAN_Receive+3,f,c
  7112  000D54  90D8               	bcf	status,0,c
  7113  000D56  3641               	rlcf	??_ECAN_Receive+2,f,c
  7114  000D58  3642               	rlcf	??_ECAN_Receive+3,f,c
  7115  000D5A  90D8               	bcf	status,0,c
  7116  000D5C  3641               	rlcf	??_ECAN_Receive+2,f,c
  7117  000D5E  3642               	rlcf	??_ECAN_Receive+3,f,c
  7118  000D60  1241               	iorwf	??_ECAN_Receive+2,f,c
  7119  000D62  0E00               	movlw	0
  7120  000D64  1242               	iorwf	??_ECAN_Receive+3,f,c
  7121  000D66  C03D  FFD9         	movff	ECAN_Receive@RxMessage,fsr2l
  7122  000D6A  C03E  FFDA         	movff	ECAN_Receive@RxMessage+1,fsr2h
  7123  000D6E  C041  FFDE         	movff	??_ECAN_Receive+2,postinc2
  7124  000D72  C042  FFDD         	movff	??_ECAN_Receive+3,postdec2
  7125                           
  7126                           ;ecan.c: 175: }
  7127  000D76  D000               	goto	i2l3129
  7128  000D78                     i2l3129:
  7129                           
  7130                           ;ecan.c: 179: }
  7131                           ;ecan.c: 181: RxMessage->RTR = RXB0DLCbits.RXRTR;
  7132  000D78  EE20 F005          	lfsr	2,5
  7133  000D7C  503D               	movf	ECAN_Receive@RxMessage,w,c
  7134  000D7E  26D9               	addwf	fsr2l,f,c
  7135  000D80  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7136  000D82  22DA               	addwfc	fsr2h,f,c
  7137  000D84  AC65               	btfss	3941,6,c	;volatile
  7138  000D86  D002               	goto	i2u260_40
  7139  000D88  0E01               	movlw	1
  7140  000D8A  D001               	goto	i2u260_46
  7141  000D8C                     i2u260_40:
  7142  000D8C  0E00               	movlw	0
  7143  000D8E                     i2u260_46:
  7144  000D8E  6EDF               	movwf	indf2,c
  7145                           
  7146                           ;ecan.c: 183: RxMessage->DLC = RXB0DLC&0x0F;
  7147  000D90  EE20 F006          	lfsr	2,6
  7148  000D94  503D               	movf	ECAN_Receive@RxMessage,w,c
  7149  000D96  26D9               	addwf	fsr2l,f,c
  7150  000D98  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7151  000D9A  22DA               	addwfc	fsr2h,f,c
  7152  000D9C  5065               	movf	3941,w,c	;volatile
  7153  000D9E  0B0F               	andlw	15
  7154  000DA0  6EDF               	movwf	indf2,c
  7155                           
  7156                           ;ecan.c: 187: RxMessage->Data[0] = RXB0D0;
  7157  000DA2  EE20 F007          	lfsr	2,7
  7158  000DA6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7159  000DA8  26D9               	addwf	fsr2l,f,c
  7160  000DAA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7161  000DAC  22DA               	addwfc	fsr2h,f,c
  7162  000DAE  CF66 FFDF          	movff	3942,indf2	;volatile
  7163                           
  7164                           ;ecan.c: 188: RxMessage->Data[1] = RXB0D1;
  7165  000DB2  EE20 F008          	lfsr	2,8
  7166  000DB6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7167  000DB8  26D9               	addwf	fsr2l,f,c
  7168  000DBA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7169  000DBC  22DA               	addwfc	fsr2h,f,c
  7170  000DBE  CF67 FFDF          	movff	3943,indf2	;volatile
  7171                           
  7172                           ;ecan.c: 189: RxMessage->Data[2] = RXB0D2;
  7173  000DC2  EE20 F009          	lfsr	2,9
  7174  000DC6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7175  000DC8  26D9               	addwf	fsr2l,f,c
  7176  000DCA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7177  000DCC  22DA               	addwfc	fsr2h,f,c
  7178  000DCE  CF68 FFDF          	movff	3944,indf2	;volatile
  7179                           
  7180                           ;ecan.c: 190: RxMessage->Data[3] = RXB0D3;
  7181  000DD2  EE20 F00A          	lfsr	2,10
  7182  000DD6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7183  000DD8  26D9               	addwf	fsr2l,f,c
  7184  000DDA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7185  000DDC  22DA               	addwfc	fsr2h,f,c
  7186  000DDE  CF69 FFDF          	movff	3945,indf2	;volatile
  7187                           
  7188                           ;ecan.c: 191: RxMessage->Data[4] = RXB0D4;
  7189  000DE2  EE20 F00B          	lfsr	2,11
  7190  000DE6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7191  000DE8  26D9               	addwf	fsr2l,f,c
  7192  000DEA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7193  000DEC  22DA               	addwfc	fsr2h,f,c
  7194  000DEE  CF6A FFDF          	movff	3946,indf2	;volatile
  7195                           
  7196                           ;ecan.c: 192: RxMessage->Data[5] = RXB0D5;
  7197  000DF2  EE20 F00C          	lfsr	2,12
  7198  000DF6  503D               	movf	ECAN_Receive@RxMessage,w,c
  7199  000DF8  26D9               	addwf	fsr2l,f,c
  7200  000DFA  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7201  000DFC  22DA               	addwfc	fsr2h,f,c
  7202  000DFE  CF6B FFDF          	movff	3947,indf2	;volatile
  7203                           
  7204                           ;ecan.c: 193: RxMessage->Data[6] = RXB0D6;
  7205  000E02  EE20 F00D          	lfsr	2,13
  7206  000E06  503D               	movf	ECAN_Receive@RxMessage,w,c
  7207  000E08  26D9               	addwf	fsr2l,f,c
  7208  000E0A  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7209  000E0C  22DA               	addwfc	fsr2h,f,c
  7210  000E0E  CF6C FFDF          	movff	3948,indf2	;volatile
  7211                           
  7212                           ;ecan.c: 194: RxMessage->Data[7] = RXB0D7;
  7213  000E12  EE20 F00E          	lfsr	2,14
  7214  000E16  503D               	movf	ECAN_Receive@RxMessage,w,c
  7215  000E18  26D9               	addwf	fsr2l,f,c
  7216  000E1A  503E               	movf	ECAN_Receive@RxMessage+1,w,c
  7217  000E1C  22DA               	addwfc	fsr2h,f,c
  7218  000E1E  CF6D FFDF          	movff	3949,indf2	;volatile
  7219                           
  7220                           ;ecan.c: 195: RXB0CONbits.RXFUL = 0;
  7221  000E22  9E60               	bcf	3936,7,c	;volatile
  7222  000E24  0012               	return	
  7223  000E26  0012               	return		;funcret
  7224  000E28                     __end_of_ECAN_Receive:
  7225                           	opt stack 0
  7226  0000                     pclatu	equ	0xFFB
  7227                           pclath	equ	0xFFA
  7228                           tblptru	equ	0xFF8
  7229                           tblptrh	equ	0xFF7
  7230                           tblptrl	equ	0xFF6
  7231                           tablat	equ	0xFF5
  7232                           prodh	equ	0xFF4
  7233                           prodl	equ	0xFF3
  7234                           intcon	equ	0xFF2
  7235                           intcon2	equ	0xFF1
  7236                           postinc0	equ	0xFEE
  7237                           fsr0h	equ	0xFEA
  7238                           fsr0l	equ	0xFE9
  7239                           wreg	equ	0xFE8
  7240                           indf1	equ	0xFE7
  7241                           postinc1	equ	0xFE6
  7242                           postdec1	equ	0xFE5
  7243                           fsr1h	equ	0xFE2
  7244                           fsr1l	equ	0xFE1
  7245                           bsr	equ	0xFE0
  7246                           indf2	equ	0xFDF
  7247                           postinc2	equ	0xFDE
  7248                           postdec2	equ	0xFDD
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8
  7252                           pclatu	equ	0xFFB
  7253                           pclath	equ	0xFFA
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           intcon	equ	0xFF2
  7261                           intcon2	equ	0xFF1
  7262                           postinc0	equ	0xFEE
  7263                           fsr0h	equ	0xFEA
  7264                           fsr0l	equ	0xFE9
  7265                           wreg	equ	0xFE8
  7266                           indf1	equ	0xFE7
  7267                           postinc1	equ	0xFE6
  7268                           postdec1	equ	0xFE5
  7269                           fsr1h	equ	0xFE2
  7270                           fsr1l	equ	0xFE1
  7271                           bsr	equ	0xFE0
  7272                           indf2	equ	0xFDF
  7273                           postinc2	equ	0xFDE
  7274                           postdec2	equ	0xFDD
  7275                           fsr2h	equ	0xFDA
  7276                           fsr2l	equ	0xFD9
  7277                           status	equ	0xFD8
  7278                           
  7279                           	psect	rparam
  7280  0000                     pclatu	equ	0xFFB
  7281                           pclath	equ	0xFFA
  7282                           tblptru	equ	0xFF8
  7283                           tblptrh	equ	0xFF7
  7284                           tblptrl	equ	0xFF6
  7285                           tablat	equ	0xFF5
  7286                           prodh	equ	0xFF4
  7287                           prodl	equ	0xFF3
  7288                           intcon	equ	0xFF2
  7289                           intcon2	equ	0xFF1
  7290                           postinc0	equ	0xFEE
  7291                           fsr0h	equ	0xFEA
  7292                           fsr0l	equ	0xFE9
  7293                           wreg	equ	0xFE8
  7294                           indf1	equ	0xFE7
  7295                           postinc1	equ	0xFE6
  7296                           postdec1	equ	0xFE5
  7297                           fsr1h	equ	0xFE2
  7298                           fsr1l	equ	0xFE1
  7299                           bsr	equ	0xFE0
  7300                           indf2	equ	0xFDF
  7301                           postinc2	equ	0xFDE
  7302                           postdec2	equ	0xFDD
  7303                           fsr2h	equ	0xFDA
  7304                           fsr2l	equ	0xFD9
  7305                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      68
    BANK0           160     49     132
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    bsp_DetectKey@pBtn	PTR struct . size(2) Largest target is 8
		 -> s_tBtn(BANK0[8]), 

    bsp_SoftTimerDec@_tmr	PTR volatile struct . size(2) Largest target is 12
		 -> s_tTmr(COMRAM[12]), 

    ECAN_Transmit@TxMessage	PTR struct . size(2) Largest target is 15
		 -> g_tCanTxMsg(BANK0[15]), 

    ECAN_Receive@RxMessage	PTR struct . size(2) Largest target is 16
		 -> g_tCanRxMsg(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _High_ISR in COMRAM

    _High_ISR->_ECAN_Receive

Critical Paths under _Lows_ISR in COMRAM

    _Lows_ISR->_bsp_SoftTimerDec

Critical Paths under _main in BANK0

    _RemoteCtrl_Process->_bsp_DetectKey
    _SysEnterSleep->_ADC_Cmd
    _App_System_Init->_ConfigTimer0
    _ConfigTimer0->___lldiv
    ___lldiv->___lmul
    _ADC_Init->_ADC_StartConversion
    _CAN_TX_TestInfo->_ECAN_Transmit
    _AdcPro->_ADC_GetConversionValue
    _AdcPro->___lwdiv

Critical Paths under _High_ISR in BANK0

    None.

Critical Paths under _Lows_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_ISR in BANK1

    None.

Critical Paths under _Lows_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_ISR in BANK2

    None.

Critical Paths under _Lows_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _High_ISR in BANK3

    None.

Critical Paths under _Lows_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _High_ISR in BANK4

    None.

Critical Paths under _Lows_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _High_ISR in BANK5

    None.

Critical Paths under _Lows_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _High_ISR in BANK6

    None.

Critical Paths under _Lows_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _High_ISR in BANK7

    None.

Critical Paths under _Lows_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _High_ISR in BANK8

    None.

Critical Paths under _Lows_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _High_ISR in BANK9

    None.

Critical Paths under _Lows_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _High_ISR in BANK10

    None.

Critical Paths under _Lows_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _High_ISR in BANK11

    None.

Critical Paths under _Lows_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _High_ISR in BANK12

    None.

Critical Paths under _Lows_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _High_ISR in BANK13

    None.

Critical Paths under _Lows_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _High_ISR in BANK14

    None.

Critical Paths under _Lows_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7598
                _AppTask_PollHandler
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _AppTask_PollHandler                                  0     0      0    5310
                             _AdcPro
                      _Pedal_Process
                 _RemoteCtrl_Process
                     _bsp_CheckTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_CheckTimer                                       2     2      0      66
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _RemoteCtrl_Process                                   0     0      0     809
                      _bsp_DetectKey
 ---------------------------------------------------------------------------------
 (3) _bsp_DetectKey                                        6     6      0     809
                                             14 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Pedal_Process                                        0     0      0    3256
                    _CAN_TX_TestInfo
                         _Pedal_Back
                          _Pedal_Out
                         _Pedal_Stop
                 _SysNormalWaitSleep
 ---------------------------------------------------------------------------------
 (3) _SysNormalWaitSleep                                   0     0      0    2288
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _SysEnterSleep                                        0     0      0     423
                            _ADC_Cmd
                        _CAN_SetMode
 ---------------------------------------------------------------------------------
 (1) _App_System_Init                                      0     0      0    1865
                            _ADC_Cmd
                           _ADC_Init
                        _CAN_SetMode
                       _ConfigTimer0
                          _ECAN_Init
                           _RLY_Init
                    _RemoteCtrl_Init
                        _SetSysClock
                 _bsp_StartAutoTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_StartAutoTimer                                   3     1      2     371
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SetSysClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RemoteCtrl_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RLY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigTimer0                                        10     8      2    1040
                                             39 BANK0     10     8      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     395
                                             26 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CAN_SetMode                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0      31
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Cmd                                              2     1      1     401
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _Pedal_Stop                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Out                                            1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Back                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CAN_TX_TestInfo                                      1     1      0     836
                                             18 BANK0      1     1      0
                      _ECAN_Transmit
 ---------------------------------------------------------------------------------
 (4) _ECAN_Transmit                                        4     2      2     588
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _AdcPro                                               3     3      0    1179
                                             21 BANK0      3     3      0
             _ADC_GetConversionValue
                _ADC_StartConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  2     2      0      31
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversionValue                               7     5      2      37
                                             14 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lows_ISR                                            18    18      0     264
                                              4 COMRAM    18    18      0
                   _bsp_SoftTimerDec
 ---------------------------------------------------------------------------------
 (8) _bsp_SoftTimerDec                                     4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _High_ISR                                            15    15      0     353
                                             28 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _ECAN_Receive
 ---------------------------------------------------------------------------------
 (10) _ECAN_Receive                                        6     4      2     350
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppTask_PollHandler
     _AdcPro
       _ADC_GetConversionValue
       _ADC_StartConversion
       ___lwdiv
     _Pedal_Process
       _CAN_TX_TestInfo
         _ECAN_Transmit
       _Pedal_Back
       _Pedal_Out
       _Pedal_Stop
       _SysNormalWaitSleep
         _App_System_Init
           _ADC_Cmd
           _ADC_Init
             _ADC_StartConversion
           _CAN_SetMode
           _ConfigTimer0
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _ECAN_Init
           _RLY_Init
           _RemoteCtrl_Init
           _SetSysClock
           _bsp_StartAutoTimer
         _SysEnterSleep
           _ADC_Cmd
           _CAN_SetMode
     _RemoteCtrl_Process
       _bsp_DetectKey
     _bsp_CheckTimer
   _App_System_Init
     _ADC_Cmd
     _ADC_Init
       _ADC_StartConversion
     _CAN_SetMode
     _ConfigTimer0
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _ECAN_Init
     _RLY_Init
     _RemoteCtrl_Init
     _SetSysClock
     _bsp_StartAutoTimer
   _SysEnterSleep
     _ADC_Cmd
     _CAN_SetMode

 _Lows_ISR (ROOT)
   _bsp_SoftTimerDec

 _High_ISR (ROOT)
   _ECAN_Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      44       1       71.6%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C8       6        0.0%
DATA                 0      0      C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 28 16:44:54 2017

                                l52 168C                                  l29 16D2  
                                l59 169C            __size_of_App_System_Init 0068  
               _AppTask_PollHandler 16A2                                  bsr 000FE0  
                   ??_bsp_DetectKey 00C0                         __CFG_BORV$3 000000  
                __size_of_ECAN_Init 00A8                        __CFG_CP0$OFF 000000  
                      __CFG_CP1$OFF 000000                        __CFG_CP2$OFF 000000  
                      __CFG_CP3$OFF 000000                                 l175 042C  
                               l451 11A8                                 l443 1164  
                               l611 1786                                 l603 1776  
                               l445 1168                                 l613 178A  
                               l605 177A                                 l623 1734  
                               l615 178E                                 l607 177E  
                               l480 0D00                                 l297 098E  
                               l609 1782                                 l643 176C  
                               l651 170C                                 l467 17DE  
                               l556 1216                                 l637 175C  
                               l629 1744                                 l558 1214  
                               l657 171C                                 l688 0A0A  
                               l697 0B64                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                     __end_of_ADC_Cmd 16A2  
                               prod 000FF3                                 wreg 000FE8  
                     _SysEnterSleep 14D4                                l1226 1310  
                              l1163 114E                                l4013 0672  
                              l4021 0690                                l4101 17C2  
                              l4015 0676                                l4007 065E  
                              l3241 10DA                                l3225 132E  
                              l3401 09CA                                l3251 113A  
                              l3243 10E4                                l4027 06A4  
                              l3229 1356                                l4061 0734  
                              l4045 06F8                                l3413 0A5E  
                              l3405 09E4                                l3263 1690  
                              l3239 10C8                                l4055 0720  
                              l4047 0702                                l4039 06D4  
                              l3423 0AC8                                l3601 08B8  
                              l3513 1600                                l4057 072A  
                              l4065 073E                                l3441 0B40  
                              l3523 12B6                                l3283 11F2  
                              l3267 116C                                l3371 1516  
                              l4067 0772                                l3427 0AE2  
                              l3419 0AAC                                l3525 12C4  
                              l3381 0C46                                l3453 1710  
                              l3277 118E                                l3269 1172  
                              l3535 1300                                l3527 12CE  
                              l3615 0928                                l3607 08E4  
                              l3711 01A8                                l3703 018A  
                              l3625 095E                                l3481 104E  
                              l3473 102A                                l3465 1004  
                              l3457 1738                                l3449 0B4C  
                              l3545 1540                                l3619 0932  
                              l3571 07E6                                l3811 032C  
                              l3555 1582                                l3485 105C  
                              l3477 1038                                l3469 1016  
                              l3493 1088                                l3813 0330  
                              l3805 0318                                l3725 01D8  
                              l3653 144E                                l3591 0882  
                              l3567 07DC                                l3583 083E  
                              l3719 01C4                                l3647 143C  
                              l3577 0812                                l3489 106A  
                              l3497 1760                                l3913 04EE  
                              l3905 04D0                                l3921 050A  
                              l3825 035E                                l3681 012E  
                              l3665 00EE                                l3595 088C  
                              l3843 03B2                                l3819 034A  
                              l3747 0226                                l3739 020E  
                              l3755 0234                                l3659 1460  
                              l3941 0554                                l3853 03DA  
                              l3845 03BC                                l3837 038E  
                              l3781 02B4                                l3765 0276  
                              l3757 025E                                l3927 051E  
                              l3855 03E4                                l3679 012A  
                              l3863 03F8                                l3881 0470  
                              l3883 0474                                l3867 0434  
                              l3859 03EE                                l3949 056C  
                              l3957 057A                                l3983 05FA  
                              l3967 05BC                                l3959 05A4  
SysNormalWaitSleep@tempPedalRunFlag 0044                                _T0RH 0089  
                              _T0RL 008A                                u3510 0158  
                              u3610 02DE                                u3530 0170  
                              u3700 0440                                u3630 02F6  
                              u3550 01E8                                u3800 05C8  
                              u3480 00FA                                u4097 1528  
                              u3730 049E                                u3650 036E  
                              u3580 0282                                u3830 0624  
                              u3750 04B6                ?_AppTask_PollHandler 0027  
                              u2935 0BD6                                u3850 063C  
                              u3770 052E                                u3870 06B4  
                              _PIR5 000F77                     ConfigTimer0@tmp 00DF  
                _bsp_StartAutoTimer 1208                                _main 17B4  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                  __end_of_ADC_Init 16FA                                pclat 000FFA  
                              prodh 000FF4                                prodl 000FF3  
                   _RemoteCtrl_Init 160C                                start 00E2  
                     __CFG_IESO$OFF 000000                       __CFG_FOSC$HS1 000000  
               ?_bsp_StartAutoTimer 00C0                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000010                       _Pedal_Process 00E6  
                             ?_main 0027                     __end_of___lldiv 1160  
                             _T0CON 000FD5                               _LATC0 007C58  
                             _LATC1 007C59                               _LATB5 007C55  
                             _LATC4 007C5C                               _LATB6 007C56  
                             _LATB7 007C57                               _LATC7 007C5F  
                   __end_of___lwdiv 131A                               i1l582 009C  
                             i2l507 0F36                               i2l519 0F96  
                             _TMR0H 000FD7                               _TMR0L 000FD6  
                             _PORTB 000F81                ??_bsp_StartAutoTimer 00C2  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                 ___lmul@multiplicand 00C4  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                      ?_SysEnterSleep 0027  
              __size_of_CAN_SetMode 0018                      __CFG_EBTRB$OFF 000000  
             ??_AppTask_PollHandler 00E3                    __end_of_RLY_Init 1794  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                 __end_of_ECAN_Init 1208                               status 000FD8  
                  ?_CAN_TX_TestInfo 0027               __size_of_ECAN_Receive 0120  
                  __end_of_High_ISR 0FD0                          _Pedal_Back 174A  
                   __initialization 1588                          _Pedal_Stop 16FA  
                    ?_Pedal_Process 0027                __end_of_ConfigTimer0 0EFE  
                      __end_of_main 17CC                           ??_ADC_Cmd 00C1  
                            ??_main 00E3                       __activetblptr 000002  
        ADC_StartConversion@channel 00C1                    __end_of_Lows_ISR 00E2  
                   CAN_SetMode@mode 00C0                      __CFG_RETEN$OFF 000000  
                 ??_App_System_Init 00E3                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _CANCON 000F6F  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _ANCON0 000F5D                       ??_SetSysClock 00C0  
           __end_of_RemoteCtrl_Init 1640                        _ECAN_Receive 0D08  
                            i1l3203 006E                              i1l3213 008E  
                            i1l3207 0076                     __CFG_BBSIZ$BB2K 000000  
                            i2l3129 0D78                              i2l4131 0F7A  
                            i2l4141 0F92                              i2l4133 0F7E  
                    __CFG_WDTEN$OFF 000000                              i2l4135 0F82  
                            i2l4139 0F8E                              _RXB0D0 000F66  
                            _RXB0D1 000F67                              _RXB0D2 000F68  
                            _RXB0D3 000F69                              _RXB0D4 000F6A  
                            _RXB0D5 000F6B                              _RXB0D6 000F6C  
                            _RXB0D7 000F6D                      __CFG_WDTPS$256 000000  
                            _TXB0D0 000F26                              _TXB0D1 000F27  
                            _TXB0D2 000F28                              _TXB0D3 000F29  
                            _TXB0D4 000F2A                              _TXB0D5 000F2B  
                            _TXB0D6 000F2C                              _TXB0D7 000F2D  
                __size_of_Pedal_Out 0028                              _TRISC0 007CA0  
                            _TRISB2 007C9A                              _TRISC1 007CA1  
                            _TRISB3 007C9B                              _TRISB4 007C9C  
                            _TRISB5 007C9D                              _TRISC4 007CA4  
                            _TRISB6 007C9E                              _TRISB7 007C9F  
                            _TRISC7 007CA7                              _AdcPro 079A  
        __end_of_RemoteCtrl_Process 146C                    _bsp_SoftTimerDec 1394  
                    __CFG_XINST$OFF 000000         __size_of_SysNormalWaitSleep 003E  
                            ___lmul 131A                        Pedal_Out@dir 00C0  
                         ??___lldiv 00D4                           ??___lwdiv 00C4  
                            _s_tBtn 00AA                              _s_tTmr 001B  
                            clear_0 158E                              clear_1 159A  
                      __pdataCOMRAM 0044                     ??_SysEnterSleep 00C2  
                         ?_ADC_Init 0027                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                 bsp_CheckTimer@_id 00C1                     __CFG_BORPWR$LOW 000000  
                        __accesstop 0060             __end_of__initialization 15C4  
                     ___rparam_used 000001                 __end_of_SetSysClock 17E8  
                   ??_Pedal_Process 00E3                         ?_Pedal_Back 0027  
                        _SysRunData 0002                         ?_Pedal_Stop 0027  
      __size_of_ADC_StartConversion 0020                      __pcstackCOMRAM 0027  
                      __pidataBANK0 17E9              __size_of_ECAN_Transmit 018E  
                         ?_RLY_Init 0027                   __end_of_Pedal_Out 174A  
  ADC_GetConversionValue@ADC_Result 00C5                          ??_ADC_Init 00C2  
                         ?_High_ISR 0027                    ?_RemoteCtrl_Init 0027  
                        __pbssBANK0 0060                     __CFG_PLLCFG$OFF 000000  
                           ?_AdcPro 0027               __size_of_ConfigTimer0 00D6  
                         ?_Lows_ISR 0027                             ?___lmul 00C0  
                        ADC_Cmd@sta 00C0                             AdcPro@i 00C9  
                           _ECANCON 000F72                             _ADC_Cmd 1672  
                    ___lmul@product 00C8                          ??_RLY_Init 00C0  
                           _BRGCON1 000E43                             _BRGCON2 000E44  
                           _BRGCON3 000E45               __end_of_bsp_DetectKey 0B7A  
                  __CFG_CANMX$PORTB 000000                       Pedal_Back@dir 00C0  
                           _RXB0DLC 000F65                             _RXB0CON 000F60  
               __size_of_Pedal_Back 0028                             _TXB0DLC 000F25  
                           _TXB0CON 000F20                          ??_High_ISR 00B2  
                           _RXFCON0 000E46                             _RXFCON1 000E47  
               __size_of_Pedal_Stop 0028                        _ConfigTimer0 0E28  
                     _ECAN_Transmit 0B7A                         _SetSysClock 17E4  
                         AdcPro@buf 0060                           AdcPro@sum 00C7  
                   __size_of_AdcPro 0204                     __CFG_PWRTEN$OFF 000000  
                    ADC_Cmd@channel 00C1                             __Hparam 0000  
                        ??_Lows_ISR 002B                           _ECAN_Init 1160  
                           __Lparam 0000                     _App_System_Init 146C  
                   __size_of___lmul 007A                             ___lldiv 109A  
                           ___lwdiv 1298            ??_ADC_GetConversionValue 00C2  
                   __CFG_STVREN$OFF 000000                             __pcinit 1588  
                           __ramtop 0F00                             __ptext0 17B4  
                           __ptext1 16A2                             __ptext2 1530  
                           __ptext3 1404                             __ptext4 099E  
                           __ptext5 00E6                             __ptext6 15CE  
                           __ptext7 14D4                             __ptext8 146C  
                           __ptext9 1208                           _T0CONbits 000FD5  
           __size_of_bsp_CheckTimer 0058                       Pedal_Stop@dir 00C0  
                     ??_CAN_SetMode 00C0            __end_of_bsp_SoftTimerDec 1404  
       __end_of_AppTask_PollHandler 16CE         __size_of_bsp_StartAutoTimer 0090  
                 __CFG_MSSPMSK$MSK7 000000                      ?_ECAN_Transmit 00C0  
                    __pintcode_body 0EFE                  __CFG_INTOSCSEL$LOW 000000  
              end_of_initialization 15C4                       __Lmediumconst 0000  
                           int_func 0EFE                     ___lldiv@divisor 00D0  
                        ?_ECAN_Init 0027                     ___lldiv@counter 00D8  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE            __size_of_CAN_TX_TestInfo 00CA  
                _RemoteCtrl_Process 1404                           _PORTBbits 000F81  
               ?_RemoteCtrl_Process 0027                           _TRISAbits 000F92  
               _ADC_StartConversion 1794                   __size_of_ADC_Init 002C  
               __end_of_CAN_SetMode 17E4                         AdcPro@index 00E3  
                    ConfigTimer0@ms 00D9                         AdcPro@write 0088  
           __end_of_App_System_Init 14D4          __end_of_SysNormalWaitSleep 160C  
                    __end_of_AdcPro 099E                ??_RemoteCtrl_Process 00C6  
                      ??_Pedal_Back 00C0                        ??_Pedal_Stop 00C0  
              ?_ADC_StartConversion 0027                      __end_of___lmul 1394  
   __size_of_ADC_GetConversionValue 0032                       __pidataCOMRAM 17E8  
                 __size_of_RLY_Init 0022                 start_initialization 1588  
                   ??_ECAN_Transmit 00C2                           _Pedal_Out 1722  
             __end_of_SysEnterSleep 1530                  __end_of_Pedal_Back 1772  
                __end_of_Pedal_Stop 1722                           Lows_ISR@i 003C  
                       _CANSTATbits 000F6E                   __size_of_High_ISR 0FC8  
                          ??_AdcPro 00C7                         ??_ECAN_Init 00C0  
             ??_ADC_StartConversion 00C0               __end_of_Pedal_Process 079A  
                          ??___lmul 00C8                   __size_of_Lows_ISR 00CA  
                       _g_tCanRxMsg 008B                         _g_tCanTxMsg 009B  
                       __pdataBANK0 00E3                            ?_ADC_Cmd 00C0  
                    _bsp_CheckTimer 1530                         _CAN_SetMode 17CC  
                       __pbssCOMRAM 0001                   ??_CAN_TX_TestInfo 00C4  
                     __pcstackBANK0 00B2                          ?_Pedal_Out 0027  
                      ?_SetSysClock 0027              _ADC_GetConversionValue 1640  
                  ?_App_System_Init 0027            __size_of_RemoteCtrl_Init 0034  
                  ___lwdiv@dividend 00C0                           __pintcode 0008  
                          ?___lldiv 00CC                            ?___lwdiv 00C0  
            __end_of_bsp_CheckTimer 1588                         __pintcodelo 0018  
                          _ADC_Init 16CE                   ?_bsp_SoftTimerDec 0027  
                  ___lwdiv@quotient 00C5                  ??_bsp_SoftTimerDec 0029  
                     ?_ECAN_Receive 003D                   bsp_DetectKey@pBtn 00C4  
                          _IOCBbits 000F5A                            _IPR5bits 000F78  
            __size_of_bsp_DetectKey 01DC                            _PIE5bits 000F76  
                          i2u260_40 0D8C                            i2u260_46 0D8E  
                          i2u257_40 0D20                            i2u257_46 0D22  
                          i2u259_45 0D3E                            _PIR5bits 000F77  
                          _RCONbits 000FD0                            _RXB0SIDH 000F61  
                          _RXB0SIDL 000F62                            _RXF0EIDH 000EE2  
                          _RXF0EIDL 000EE3                            _RXF0SIDH 000EE0  
                          _RXF0SIDL 000EE1                            _RXM0EIDH 000EFA  
                          _RXM0EIDL 000EFB                            _TXB0SIDH 000F21  
                          _TXB0SIDL 000F22                            _RXM0SIDH 000EF8  
                          _RXM0SIDL 000EF9                     ?_bsp_CheckTimer 0027  
              bsp_SoftTimerDec@_tmr 0027                    __size_of_ADC_Cmd 0030  
                          _RLY_Init 1772                          _ADCON0bits 000FC2  
                  __CFG_SOSCSEL$DIG 000000          __end_of_bsp_StartAutoTimer 1298  
                       ??_Pedal_Out 00C0                            _High_ISR 0008  
                    ??_ECAN_Receive 003F                   ___lmul@multiplier 00C0  
                       _INTCON2bits 000FF1        __size_of_AppTask_PollHandler 002C  
            High_ISR@LastKnowNPORTB 0043                          _ANCON1bits 000F5C  
                          __Hrparam 0000                        _RXB0SIDLbits 000F62  
                          _Lows_ISR 0018                            __Lrparam 0000  
                  __size_of___lldiv 00C6                    __size_of___lwdiv 0082  
                 ??_RemoteCtrl_Init 00C0                  _SysNormalWaitSleep 15CE  
         CAN_TX_TestInfo@TestInfoID 00C4               ECAN_Receive@RxMessage 003D  
                     _bsp_DetectKey 099E                 ?_SysNormalWaitSleep 0027  
                   ___lwdiv@divisor 00C2                     ___lwdiv@counter 00C4  
                          __ptext10 17E4                            __ptext11 160C  
                          __ptext20 16FA                            __ptext12 1772  
                          __ptext21 1722                            __ptext13 1160  
                          __ptext30 1394                            __ptext22 174A  
                          __ptext14 0E28                            __ptext23 0FD0  
                          __ptext15 131A                            __ptext32 0D08  
                          __ptext24 0B7A                            __ptext16 109A  
                          __ptext25 079A                            __ptext17 17CC  
                          __ptext26 1298                            __ptext18 16CE  
                          __ptext27 1794                            __ptext19 1672  
                          __ptext28 1640                __size_of_SetSysClock 0004  
                     __size_of_main 0018                        _TXB0SIDLbits 000F22  
              ??_SysNormalWaitSleep 00E3         __size_of_RemoteCtrl_Process 0068  
                   _CAN_TX_TestInfo 0FD0                         _RXB0DLCbits 000F65  
                    ?_bsp_DetectKey 0027                         _RXB0CONbits 000F60  
                      ?_CAN_SetMode 0027                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2               bsp_StartAutoTimer@_id 00C2  
           ?_ADC_GetConversionValue 00C0                       ?_ConfigTimer0 00D9  
             __end_of_ECAN_Transmit 0D08                            intlevel1 0000  
                          intlevel2 0000         __end_of_ADC_StartConversion 17B4  
                  ___lldiv@dividend 00CC                         _TXB0DLCbits 000F25  
                       _TXB0CONbits 000F20                          _OSCCONbits 000FD3  
            ECAN_Transmit@TxMessage 00C0              __size_of_SysEnterSleep 005C  
              __end_of_ECAN_Receive 0E28                    ___lldiv@quotient 00D4  
    __end_of_ADC_GetConversionValue 1672                      ??_ConfigTimer0 00DB  
         bsp_StartAutoTimer@_period 00C0              __size_of_Pedal_Process 06B4  
           __end_of_CAN_TX_TestInfo 109A           __size_of_bsp_SoftTimerDec 0070  
                   Lows_ISR@s_count 0001                    ??_bsp_CheckTimer 00C0  
