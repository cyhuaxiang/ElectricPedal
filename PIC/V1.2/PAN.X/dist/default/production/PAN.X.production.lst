

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 27 22:25:57 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  00121A                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for AdcPro@index
    50  00121A  01                 	db	1
    51                           
    52                           ;initializer for SysNormalWaitSleep@tempPedalRunFlag
    53  00121B  AA                 	db	170
    54  0000                     _BRGCON1	set	3651
    55  0000                     _BRGCON2	set	3652
    56  0000                     _BRGCON3	set	3653
    57  0000                     _RXF0EIDH	set	3810
    58  0000                     _RXF0EIDL	set	3811
    59  0000                     _RXF0SIDH	set	3808
    60  0000                     _RXF0SIDL	set	3809
    61  0000                     _RXFCON0	set	3654
    62  0000                     _RXFCON1	set	3655
    63  0000                     _RXM0EIDH	set	3834
    64  0000                     _RXM0EIDL	set	3835
    65  0000                     _RXM0SIDH	set	3832
    66  0000                     _RXM0SIDL	set	3833
    67  0000                     _ANCON0	set	3933
    68  0000                     _TXB0CON	set	3872
    69  0000                     _TXB0CONbits	set	3872
    70  0000                     _TXB0D0	set	3878
    71  0000                     _TXB0D1	set	3879
    72  0000                     _TXB0D2	set	3880
    73  0000                     _TXB0D3	set	3881
    74  0000                     _TXB0D4	set	3882
    75  0000                     _TXB0D5	set	3883
    76  0000                     _TXB0D6	set	3884
    77  0000                     _TXB0D7	set	3885
    78  0000                     _TXB0DLC	set	3877
    79  0000                     _TXB0DLCbits	set	3877
    80  0000                     _TXB0SIDH	set	3873
    81  0000                     _TXB0SIDL	set	3874
    82  0000                     _TXB0SIDLbits	set	3874
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADRESL	set	4035
    89  0000                     _CANCON	set	3951
    90  0000                     _CANSTATbits	set	3950
    91  0000                     _ECANCON	set	3954
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _INTCONbits	set	4082
    94  0000                     _IPR5bits	set	3960
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE5bits	set	3958
    98  0000                     _PIR5	set	3959
    99  0000                     _PIR5bits	set	3959
   100  0000                     _RCONbits	set	4048
   101  0000                     _RXB0CON	set	3936
   102  0000                     _RXB0CONbits	set	3936
   103  0000                     _RXB0D0	set	3942
   104  0000                     _RXB0D1	set	3943
   105  0000                     _RXB0D2	set	3944
   106  0000                     _RXB0D3	set	3945
   107  0000                     _RXB0D4	set	3946
   108  0000                     _RXB0D5	set	3947
   109  0000                     _RXB0D6	set	3948
   110  0000                     _RXB0D7	set	3949
   111  0000                     _RXB0DLC	set	3941
   112  0000                     _RXB0DLCbits	set	3941
   113  0000                     _RXB0SIDH	set	3937
   114  0000                     _RXB0SIDL	set	3938
   115  0000                     _RXB0SIDLbits	set	3938
   116  0000                     _T0CON	set	4053
   117  0000                     _T0CONbits	set	4053
   118  0000                     _TMR0H	set	4055
   119  0000                     _TMR0L	set	4054
   120  0000                     _TRISA	set	3986
   121  0000                     _LATB5	set	31829
   122  0000                     _LATB6	set	31830
   123  0000                     _LATB7	set	31831
   124  0000                     _LATC0	set	31832
   125  0000                     _LATC1	set	31833
   126  0000                     _LATC4	set	31836
   127  0000                     _LATC7	set	31839
   128  0000                     _TRISB2	set	31898
   129  0000                     _TRISB3	set	31899
   130  0000                     _TRISB5	set	31901
   131  0000                     _TRISB6	set	31902
   132  0000                     _TRISB7	set	31903
   133  0000                     _TRISC0	set	31904
   134  0000                     _TRISC1	set	31905
   135  0000                     _TRISC4	set	31908
   136  0000                     _TRISC7	set	31911
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  001042                     __pcinit:
   142                           	opt stack 0
   143  001042                     start_initialization:
   144                           	opt stack 0
   145  001042                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Clear objects allocated to BANK0 (71 bytes)
   149  001042  EE00  F060         	lfsr	0,__pbssBANK0
   150  001046  0E47               	movlw	71
   151  001048                     clear_0:
   152  001048  6AEE               	clrf	postinc0,c
   153  00104A  06E8               	decf	wreg,f,c
   154  00104C  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to COMRAM (37 bytes)
   157  00104E  EE00  F001         	lfsr	0,__pbssCOMRAM
   158  001052  0E25               	movlw	37
   159  001054                     clear_1:
   160  001054  6AEE               	clrf	postinc0,c
   161  001056  06E8               	decf	wreg,f,c
   162  001058  E1FD               	bnz	clear_1
   163                           
   164                           ; Initialize objects allocated to COMRAM (2 bytes)
   165                           ; load TBLPTR registers with __pidataCOMRAM
   166  00105A  0E1A               	movlw	low __pidataCOMRAM
   167  00105C  6EF6               	movwf	tblptrl,c
   168  00105E  0E12               	movlw	high __pidataCOMRAM
   169  001060  6EF7               	movwf	tblptrh,c
   170  001062  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   171  001064  6EF8               	movwf	tblptru,c
   172  001066  0009               	tblrd		*+	;fetch initializer
   173  001068  CFF5 F042          	movff	tablat,__pdataCOMRAM
   174  00106C  0009               	tblrd		*+	;fetch initializer
   175  00106E  CFF5 F043          	movff	tablat,__pdataCOMRAM+1
   176  001072                     end_of_initialization:
   177                           	opt stack 0
   178  001072                     __end_of__initialization:
   179                           	opt stack 0
   180  001072  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  001074  6EF8               	movwf	tblptru,c
   182  001076  0100               	movlb	0
   183  001078  EFF3  F008         	goto	_main	;jump to C main() function
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	bssCOMRAM
   192  000001                     __pbssCOMRAM:
   193                           	opt stack 0
   194  000001                     AdcPro@write:
   195                           	opt stack 0
   196  000001                     	ds	1
   197  000002                     _T0RH:
   198                           	opt stack 0
   199  000002                     	ds	1
   200  000003                     _T0RL:
   201                           	opt stack 0
   202  000003                     	ds	1
   203  000004                     _SysRunData:
   204                           	opt stack 0
   205  000004                     	ds	22
   206  00001A                     _s_tTmr:
   207                           	opt stack 0
   208  00001A                     	ds	12
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	dataCOMRAM
   217  000042                     __pdataCOMRAM:
   218                           	opt stack 0
   219  000042                     AdcPro@index:
   220                           	opt stack 0
   221  000042                     	ds	1
   222  000043                     SysNormalWaitSleep@tempPedalRunFlag:
   223                           	opt stack 0
   224  000043                     	ds	1
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	bssBANK0
   233  000060                     __pbssBANK0:
   234                           	opt stack 0
   235  000060                     AdcPro@buf:
   236                           	opt stack 0
   237  000060                     	ds	40
   238  000088                     _g_tCanRxMsg:
   239                           	opt stack 0
   240  000088                     	ds	16
   241  000098                     _g_tCanTxMsg:
   242                           	opt stack 0
   243  000098                     	ds	15
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	cstackBANK0
   252  0000A7                     __pcstackBANK0:
   253                           	opt stack 0
   254  0000A7                     ??_High_ISR:
   255                           
   256                           ; 0 bytes @ 0x0
   257  0000A7                     	ds	14
   258  0000B5                     ??_ADC_StartConversion:
   259  0000B5                     ?_ADC_GetConversionValue:
   260                           	opt stack 0
   261  0000B5                     ?___lwdiv:
   262                           	opt stack 0
   263  0000B5                     ?___lmul:
   264                           	opt stack 0
   265  0000B5                     ADC_Cmd@sta:
   266                           	opt stack 0
   267  0000B5                     CAN_SetMode@mode:
   268                           	opt stack 0
   269  0000B5                     Pedal_Out@dir:
   270                           	opt stack 0
   271  0000B5                     Pedal_Back@dir:
   272                           	opt stack 0
   273  0000B5                     Pedal_Stop@dir:
   274                           	opt stack 0
   275  0000B5                     bsp_StartAutoTimer@_period:
   276                           	opt stack 0
   277  0000B5                     ___lwdiv@dividend:
   278                           	opt stack 0
   279  0000B5                     ___lmul@multiplier:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0xE
   283  0000B5                     	ds	1
   284  0000B6                     ADC_StartConversion@channel:
   285                           	opt stack 0
   286  0000B6                     ADC_Cmd@channel:
   287                           	opt stack 0
   288  0000B6                     bsp_CheckTimer@_id:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0xF
   292  0000B6                     	ds	1
   293  0000B7                     ??_ADC_GetConversionValue:
   294  0000B7                     bsp_StartAutoTimer@_id:
   295                           	opt stack 0
   296  0000B7                     ___lwdiv@divisor:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x10
   300  0000B7                     	ds	2
   301  0000B9                     ___lwdiv@counter:
   302                           	opt stack 0
   303  0000B9                     ___lmul@multiplicand:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x12
   307  0000B9                     	ds	1
   308  0000BA                     ADC_GetConversionValue@ADC_Result:
   309                           	opt stack 0
   310  0000BA                     ___lwdiv@quotient:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x13
   314  0000BA                     	ds	2
   315  0000BC                     AdcPro@sum:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x15
   319  0000BC                     	ds	1
   320  0000BD                     ___lmul@product:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0x16
   324  0000BD                     	ds	1
   325  0000BE                     AdcPro@i:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x17
   329  0000BE                     	ds	3
   330  0000C1                     ?___lldiv:
   331                           	opt stack 0
   332  0000C1                     ___lldiv@dividend:
   333                           	opt stack 0
   334                           
   335                           ; 4 bytes @ 0x1A
   336  0000C1                     	ds	4
   337  0000C5                     ___lldiv@divisor:
   338                           	opt stack 0
   339                           
   340                           ; 4 bytes @ 0x1E
   341  0000C5                     	ds	4
   342  0000C9                     ___lldiv@quotient:
   343                           	opt stack 0
   344                           
   345                           ; 4 bytes @ 0x22
   346  0000C9                     	ds	4
   347  0000CD                     ___lldiv@counter:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x26
   351  0000CD                     	ds	1
   352  0000CE                     ConfigTimer0@ms:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x27
   356  0000CE                     	ds	2
   357  0000D0                     ??_ConfigTimer0:
   358                           
   359                           ; 0 bytes @ 0x29
   360  0000D0                     	ds	4
   361  0000D4                     ConfigTimer0@tmp:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0x2D
   365  0000D4                     	ds	4
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	cstackCOMRAM
   374  000026                     __pcstackCOMRAM:
   375                           	opt stack 0
   376  000026                     bsp_SoftTimerDec@_tmr:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x0
   380  000026                     	ds	2
   381  000028                     
   382                           ; 0 bytes @ 0x2
   383  000028                     	ds	2
   384  00002A                     ??_Lows_ISR:
   385                           
   386                           ; 0 bytes @ 0x4
   387  00002A                     	ds	17
   388  00003B                     Lows_ISR@i:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x15
   392  00003B                     	ds	1
   393  00003C                     ECAN_Receive@RxMessage:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x16
   397  00003C                     	ds	2
   398  00003E                     ??_ECAN_Receive:
   399                           
   400                           ; 0 bytes @ 0x18
   401  00003E                     	ds	4
   402  000042                     tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           
   409                           ; 0 bytes @ 0x1C
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 71 in file "source/main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  2  292[None  ] int 
   422 ;; Registers used:
   423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels required when called:   10
   435 ;; This function calls:
   436 ;;		_AppTask_PollHandler
   437 ;;		_App_System_Init
   438 ;;		_SysEnterSleep
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445  0011E6                     __ptext0:
   446                           	opt stack 0
   447  0011E6                     _main:
   448                           	opt stack 21
   449                           
   450                           ;main.c: 73: App_System_Init();
   451                           
   452                           ;incstack = 0
   453  0011E6  EC74  F007         	call	_App_System_Init	;wreg free
   454                           
   455                           ;main.c: 75: SysEnterSleep();
   456  0011EA  ECA8  F007         	call	_SysEnterSleep	;wreg free
   457                           
   458                           ;main.c: 76: App_System_Init();
   459  0011EE  EC74  F007         	call	_App_System_Init	;wreg free
   460  0011F2  D000               	goto	l3450
   461  0011F4                     l3450:
   462                           
   463                           ;main.c: 78: {
   464                           ;main.c: 80: AppTask_PollHandler();
   465  0011F4  EC6F  F008         	call	_AppTask_PollHandler	;wreg free
   466  0011F8  D7FD               	goto	l3450
   467  0011FA  EF6B  F000         	goto	start
   468  0011FE                     __end_of_main:
   469                           	opt stack 0
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           
   477 ;; *************** function _AppTask_PollHandler *****************
   478 ;; Defined at:
   479 ;;		line 75 in file "source/app.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;		None               void
   486 ;; Registers used:
   487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    9
   500 ;; This function calls:
   501 ;;		_AdcPro
   502 ;;		_Pedal_Process
   503 ;;		_bsp_CheckTimer
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text1
   510  0010DE                     __ptext1:
   511                           	opt stack 0
   512  0010DE                     _AppTask_PollHandler:
   513                           	opt stack 21
   514                           
   515                           ;app.c: 77: if (bsp_CheckTimer(0))
   516                           
   517                           ;incstack = 0
   518  0010DE  0E00               	movlw	0
   519  0010E0  ECD6  F007         	call	_bsp_CheckTimer
   520  0010E4  0900               	iorlw	0
   521  0010E6  A4D8               	btfss	status,2,c
   522                           
   523                           ;app.c: 78: {
   524                           ;app.c: 79: AdcPro();
   525  0010E8  EC6B  F003         	call	_AdcPro	;wreg free
   526                           
   527                           ;app.c: 82: }
   528                           ;app.c: 83: if (bsp_CheckTimer(1))
   529  0010EC  0E01               	movlw	1
   530  0010EE  ECD6  F007         	call	_bsp_CheckTimer
   531  0010F2  0900               	iorlw	0
   532  0010F4  B4D8               	btfsc	status,2,c
   533  0010F6  0012               	return	
   534                           
   535                           ;app.c: 84: {
   536                           ;app.c: 85: if(SysRunData.SysSta == SYS_NORMAL)
   537  0010F8  5006               	movf	_SysRunData+2,w,c
   538  0010FA  A4D8               	btfss	status,2,c
   539  0010FC  0012               	return	
   540                           
   541                           ;app.c: 86: {
   542                           ;app.c: 87: Pedal_Process();
   543  0010FE  EC6D  F000         	call	_Pedal_Process	;wreg free
   544                           
   545                           ;app.c: 89: else
   546                           ;app.c: 90: {
   547                           
   548                           ;app.c: 88: }
   549  001102  0012               	return	
   550  001104  0012               	return		;funcret
   551  001106                     __end_of_AppTask_PollHandler:
   552                           	opt stack 0
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _bsp_CheckTimer *****************
   562 ;; Defined at:
   563 ;;		line 152 in file "source/timer.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  _id             1    wreg     unsigned char 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  _id             1   15[BANK0 ] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      unsigned char 
   570 ;; Registers used:
   571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;Total ram usage:        2 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    4
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_AppTask_PollHandler
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text2
   592  000FAC                     __ptext2:
   593                           	opt stack 0
   594  000FAC                     _bsp_CheckTimer:
   595                           	opt stack 25
   596                           
   597                           ;incstack = 0
   598                           ;bsp_CheckTimer@_id stored from wreg
   599  000FAC  0100               	movlb	0	; () banked
   600  000FAE  6FB6               	movwf	bsp_CheckTimer@_id& (0+255),b
   601                           
   602                           ; BSR set to: 0
   603                           ;timer.c: 154: if (_id >= 2)
   604  000FB0  0E01               	movlw	1
   605  000FB2  0100               	movlb	0	; () banked
   606  000FB4  65B6               	cpfsgt	bsp_CheckTimer@_id& (0+255),b
   607  000FB6  D002               	goto	l2964
   608                           
   609                           ; BSR set to: 0
   610                           ;timer.c: 155: {
   611                           ;timer.c: 156: return 0;
   612  000FB8  0E00               	movlw	0
   613                           
   614                           ; BSR set to: 0
   615  000FBA  0012               	return	
   616  000FBC                     l2964:
   617                           
   618                           ; BSR set to: 0
   619                           ;timer.c: 157: }
   620                           ;timer.c: 159: if (s_tTmr[_id].Flag == 1)
   621  000FBC  0100               	movlb	0	; () banked
   622  000FBE  51B6               	movf	bsp_CheckTimer@_id& (0+255),w,b
   623  000FC0  0D06               	mullw	6
   624  000FC2  0E01               	movlw	1
   625  000FC4  26F3               	addwf	prodl,f,c
   626  000FC6  0E00               	movlw	0
   627  000FC8  22F4               	addwfc	prodh,f,c
   628  000FCA  0E1A               	movlw	low _s_tTmr
   629  000FCC  24F3               	addwf	prodl,w,c
   630  000FCE  6ED9               	movwf	fsr2l,c
   631  000FD0  0E00               	movlw	high _s_tTmr
   632  000FD2  20F4               	addwfc	prodh,w,c
   633  000FD4  6EDA               	movwf	fsr2h,c
   634  000FD6  04DE               	decf	postinc2,w,c
   635  000FD8  A4D8               	btfss	status,2,c
   636  000FDA  D011               	goto	l2974
   637                           
   638                           ; BSR set to: 0
   639                           ;timer.c: 160: {
   640                           ;timer.c: 161: s_tTmr[_id].Flag = 0;
   641  000FDC  0100               	movlb	0	; () banked
   642  000FDE  51B6               	movf	bsp_CheckTimer@_id& (0+255),w,b
   643  000FE0  0D06               	mullw	6
   644  000FE2  0E01               	movlw	1
   645  000FE4  26F3               	addwf	prodl,f,c
   646  000FE6  0E00               	movlw	0
   647  000FE8  22F4               	addwfc	prodh,f,c
   648  000FEA  0E1A               	movlw	low _s_tTmr
   649  000FEC  24F3               	addwf	prodl,w,c
   650  000FEE  6ED9               	movwf	fsr2l,c
   651  000FF0  0E00               	movlw	high _s_tTmr
   652  000FF2  20F4               	addwfc	prodh,w,c
   653  000FF4  6EDA               	movwf	fsr2h,c
   654  000FF6  0E00               	movlw	0
   655  000FF8  6EDF               	movwf	indf2,c
   656                           
   657                           ; BSR set to: 0
   658                           ;timer.c: 162: return 1;
   659  000FFA  0E01               	movlw	1
   660                           
   661                           ; BSR set to: 0
   662                           ;timer.c: 163: }
   663                           
   664                           ; BSR set to: 0
   665  000FFC  0012               	return	
   666  000FFE                     l2974:
   667                           
   668                           ; BSR set to: 0
   669                           ;timer.c: 164: else
   670                           ;timer.c: 165: {
   671                           ;timer.c: 166: return 0;
   672  000FFE  0E00               	movlw	0
   673                           
   674                           ; BSR set to: 0
   675  001000  0012               	return	
   676                           
   677                           ; BSR set to: 0
   678                           
   679                           ; BSR set to: 0
   680  001002  0012               	return		;funcret
   681  001004                     __end_of_bsp_CheckTimer:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           prodh	equ	0xFF4
   688                           prodl	equ	0xFF3
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           indf2	equ	0xFDF
   692                           postinc2	equ	0xFDE
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _Pedal_Process *****************
   698 ;; Defined at:
   699 ;;		line 103 in file "source/app.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    8
   720 ;; This function calls:
   721 ;;		_Pedal_Back
   722 ;;		_Pedal_Out
   723 ;;		_Pedal_Stop
   724 ;;		_SysNormalWaitSleep
   725 ;; This function is called by:
   726 ;;		_AppTask_PollHandler
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text3
   731  0000DA                     __ptext3:
   732                           	opt stack 0
   733  0000DA                     _Pedal_Process:
   734                           	opt stack 21
   735                           
   736                           ;app.c: 108: if((SysRunData.PedalRunFlag & (0x01u)) == (0x01u))
   737                           
   738                           ; BSR set to: 0
   739                           ;incstack = 0
   740  0000DA  B019               	btfsc	_SysRunData+21,0,c
   741  0000DC  D08C               	goto	l3134
   742  0000DE  D157               	goto	l3230
   743                           
   744                           ;app.c: 109: {
   745                           ;app.c: 110: switch(SysRunData.PedalSta[0])
   746  0000E0  D08A               	goto	l3134
   747  0000E2                     l3056:
   748                           
   749                           ;app.c: 113: if(SysRunData.ADC_Buf[0x03] > 985)
   750  0000E2  0EDA               	movlw	218
   751  0000E4  5C17               	subwf	_SysRunData+19,w,c
   752  0000E6  0E03               	movlw	3
   753  0000E8  5818               	subwfb	_SysRunData+20,w,c
   754  0000EA  A0D8               	btfss	status,0,c
   755  0000EC  D16A               	goto	l157
   756                           
   757                           ;app.c: 114: {
   758                           ;app.c: 115: Pedal_Stop(0);
   759  0000EE  0E00               	movlw	0
   760  0000F0  EC83  F008         	call	_Pedal_Stop
   761                           
   762                           ;app.c: 116: SysRunData.PedalRunCnt[0] = 0;
   763  0000F4  0E00               	movlw	0
   764  0000F6  6E08               	movwf	_SysRunData+4,c
   765  0000F8  0E00               	movlw	0
   766  0000FA  6E07               	movwf	_SysRunData+3,c
   767                           
   768                           ;app.c: 117: SysRunData.PedalWaitSleepCnt = 0;
   769  0000FC  0E00               	movlw	0
   770  0000FE  6E0C               	movwf	_SysRunData+8,c
   771  000100  0E00               	movlw	0
   772  000102  6E0B               	movwf	_SysRunData+7,c
   773                           
   774                           ;app.c: 118: SysRunData.PedalRunCnt[0] = 0;
   775  000104  0E00               	movlw	0
   776  000106  6E08               	movwf	_SysRunData+4,c
   777  000108  0E00               	movlw	0
   778  00010A  6E07               	movwf	_SysRunData+3,c
   779                           
   780                           ;app.c: 119: SysRunData.PedalSta[0] = PEDAL_ERROR_FAST_OUT;
   781  00010C  0E07               	movlw	7
   782  00010E  D05E               	goto	L5
   783                           
   784                           ;app.c: 132: }
   785                           ;app.c: 133: break;
   786  000110  D158               	goto	l157
   787  000112                     l3068:
   788                           
   789                           ;app.c: 135: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
   790  000112  0E01               	movlw	1
   791  000114  D05B               	goto	L5
   792  000116                     l3070:
   793                           
   794                           ;app.c: 138: if(SysRunData.PedalRunCnt[0] < 350)
   795  000116  0E5E               	movlw	94
   796  000118  5C07               	subwf	_SysRunData+3,w,c
   797  00011A  0E01               	movlw	1
   798  00011C  5808               	subwfb	_SysRunData+4,w,c
   799  00011E  B0D8               	btfsc	status,0,c
   800  000120  D032               	goto	l3098
   801                           
   802                           ;app.c: 139: {
   803                           ;app.c: 140: Pedal_Out(0);
   804  000122  0E00               	movlw	0
   805  000124  EC97  F008         	call	_Pedal_Out
   806                           
   807                           ;app.c: 141: SysRunData.PedalRunCnt[0]++;
   808  000128  4A07               	infsnz	_SysRunData+3,f,c
   809  00012A  2A08               	incf	_SysRunData+4,f,c
   810                           
   811                           ;app.c: 142: SysRunData.PedalWaitSleepCnt = 0;
   812  00012C  0E00               	movlw	0
   813  00012E  6E0C               	movwf	_SysRunData+8,c
   814  000130  0E00               	movlw	0
   815  000132  6E0B               	movwf	_SysRunData+7,c
   816                           
   817                           ;app.c: 144: if(SysRunData.PedalRunCnt[0] > 50)
   818  000134  5008               	movf	_SysRunData+4,w,c
   819  000136  E104               	bnz	u2330
   820  000138  0E33               	movlw	51
   821  00013A  5C07               	subwf	_SysRunData+3,w,c
   822  00013C  A0D8               	btfss	status,0,c
   823  00013E  D141               	goto	l157
   824  000140                     u2330:
   825                           
   826                           ;app.c: 145: {
   827                           ;app.c: 146: if(SysRunData.ADC_Buf[0x03] > 985)
   828  000140  0EDA               	movlw	218
   829  000142  5C17               	subwf	_SysRunData+19,w,c
   830  000144  0E03               	movlw	3
   831  000146  5818               	subwfb	_SysRunData+20,w,c
   832  000148  A0D8               	btfss	status,0,c
   833  00014A  D13B               	goto	l157
   834                           
   835                           ;app.c: 147: {
   836                           ;app.c: 148: if(SysRunData.PedalRunCnt[0] > 120)
   837  00014C  5008               	movf	_SysRunData+4,w,c
   838  00014E  E104               	bnz	u2350
   839  000150  0E79               	movlw	121
   840  000152  5C07               	subwf	_SysRunData+3,w,c
   841  000154  A0D8               	btfss	status,0,c
   842  000156  D009               	goto	l3090
   843  000158                     u2350:
   844                           
   845                           ;app.c: 149: {
   846                           ;app.c: 150: Pedal_Stop(0);
   847  000158  0E00               	movlw	0
   848  00015A  EC83  F008         	call	_Pedal_Stop
   849                           
   850                           ;app.c: 151: SysRunData.PedalRunCnt[0] = 0;
   851  00015E  0E00               	movlw	0
   852  000160  6E08               	movwf	_SysRunData+4,c
   853  000162  0E00               	movlw	0
   854  000164  6E07               	movwf	_SysRunData+3,c
   855                           
   856                           ;app.c: 152: SysRunData.PedalSta[0] = PEDAL_NORMAL_WAIT_BACK;
   857  000166  0E02               	movlw	2
   858  000168  D031               	goto	L5
   859  00016A                     l3090:
   860                           
   861                           ;app.c: 154: else
   862                           ;app.c: 155: {
   863                           ;app.c: 156: Pedal_Stop(0);
   864  00016A  0E00               	movlw	0
   865  00016C  EC83  F008         	call	_Pedal_Stop
   866                           
   867                           ;app.c: 157: SysRunData.PedalRunCnt[0] = 0;
   868  000170  0E00               	movlw	0
   869  000172  6E08               	movwf	_SysRunData+4,c
   870  000174  0E00               	movlw	0
   871  000176  6E07               	movwf	_SysRunData+3,c
   872                           
   873                           ;app.c: 158: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
   874  000178  0E04               	movlw	4
   875  00017A  6E04               	movwf	_SysRunData,c
   876                           
   877                           ;app.c: 159: Pedal_Back(0);
   878  00017C  0E00               	movlw	0
   879  00017E  ECAB  F008         	call	_Pedal_Back
   880  000182  D0F6               	goto	l3220
   881                           
   882                           ;app.c: 161: }
   883                           ;app.c: 162: }
   884                           ;app.c: 163: }
   885                           ;app.c: 164: }
   886                           
   887                           ;app.c: 160: SysRunData.PedalWaitSleepCnt = 0;
   888  000184  D11E               	goto	l157
   889  000186                     l3098:
   890                           
   891                           ;app.c: 165: else
   892                           ;app.c: 166: {
   893                           ;app.c: 167: Pedal_Stop(0);
   894  000186  0E00               	movlw	0
   895  000188  EC83  F008         	call	_Pedal_Stop
   896                           
   897                           ;app.c: 168: SysRunData.PedalRunCnt[0] = 0;
   898  00018C  0E00               	movlw	0
   899  00018E  6E08               	movwf	_SysRunData+4,c
   900  000190  0E00               	movlw	0
   901  000192  6E07               	movwf	_SysRunData+3,c
   902                           
   903                           ;app.c: 169: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
   904  000194  0E08               	movlw	8
   905  000196  D01A               	goto	L5
   906                           
   907                           ;app.c: 170: }
   908                           ;app.c: 171: break;
   909  000198  D114               	goto	l157
   910  00019A                     l3104:
   911                           
   912                           ;app.c: 174: SysRunData.PedalRunCnt[0]++;
   913  00019A  4A07               	infsnz	_SysRunData+3,f,c
   914  00019C  2A08               	incf	_SysRunData+4,f,c
   915                           
   916                           ;app.c: 175: if(SysRunData.PedalRunCnt[0] > 50)
   917  00019E  5008               	movf	_SysRunData+4,w,c
   918  0001A0  E104               	bnz	u2360
   919  0001A2  0E33               	movlw	51
   920  0001A4  5C07               	subwf	_SysRunData+3,w,c
   921  0001A6  A0D8               	btfss	status,0,c
   922  0001A8  D10C               	goto	l157
   923  0001AA                     u2360:
   924                           
   925                           ;app.c: 176: {
   926                           ;app.c: 177: if(SysRunData.ADC_Buf[0x03] > 985)
   927  0001AA  0EDA               	movlw	218
   928  0001AC  5C17               	subwf	_SysRunData+19,w,c
   929  0001AE  0E03               	movlw	3
   930  0001B0  5818               	subwfb	_SysRunData+20,w,c
   931  0001B2  A0D8               	btfss	status,0,c
   932  0001B4  D106               	goto	l157
   933                           
   934                           ;app.c: 178: {
   935                           ;app.c: 179: Pedal_Stop(0);
   936  0001B6  0E00               	movlw	0
   937  0001B8  EC83  F008         	call	_Pedal_Stop
   938                           
   939                           ;app.c: 180: SysRunData.PedalRunCnt[0] = 0;
   940  0001BC  0E00               	movlw	0
   941  0001BE  6E08               	movwf	_SysRunData+4,c
   942  0001C0  0E00               	movlw	0
   943  0001C2  6E07               	movwf	_SysRunData+3,c
   944                           
   945                           ;app.c: 181: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_BACK;
   946  0001C4  0E04               	movlw	4
   947  0001C6  D002               	goto	L5
   948                           
   949                           ;app.c: 182: }
   950                           ;app.c: 183: }
   951                           ;app.c: 184: break;
   952  0001C8  D0FC               	goto	l157
   953                           
   954                           ;app.c: 185: case PEDAL_STALL_WAIT_BACK:
   955  0001CA  D0B7               	goto	L16
   956  0001CC                     L5:
   957  0001CC  6E04               	movwf	_SysRunData,c
   958                           
   959                           ;app.c: 189: break;
   960  0001CE  D0F9               	goto	l157
   961  0001D0                     l3118:
   962                           
   963                           ;app.c: 191: if(SysRunData.PedalRunCnt[0] < 350)
   964  0001D0  0E5E               	movlw	94
   965  0001D2  5C07               	subwf	_SysRunData+3,w,c
   966  0001D4  0E01               	movlw	1
   967  0001D6  5808               	subwfb	_SysRunData+4,w,c
   968  0001D8  B0D8               	btfsc	status,0,c
   969  0001DA  D006               	goto	l3126
   970                           
   971                           ;app.c: 192: {
   972                           ;app.c: 193: Pedal_Out(0);
   973  0001DC  0E00               	movlw	0
   974  0001DE  EC97  F008         	call	_Pedal_Out
   975                           
   976                           ;app.c: 194: SysRunData.PedalRunCnt[0]++;
   977  0001E2  4A07               	infsnz	_SysRunData+3,f,c
   978  0001E4  2A08               	incf	_SysRunData+4,f,c
   979  0001E6  D0C4               	goto	l3220
   980  0001E8                     l3126:
   981                           
   982                           ;app.c: 197: else
   983                           ;app.c: 198: {
   984                           ;app.c: 199: SysRunData.PedalSta[0] = PEDAL_ERROR_OUT_TIMEOUT;
   985  0001E8  0E08               	movlw	8
   986  0001EA  6E04               	movwf	_SysRunData,c
   987                           
   988                           ;app.c: 200: Pedal_Stop(0);
   989  0001EC  0E00               	movlw	0
   990  0001EE  EC83  F008         	call	_Pedal_Stop
   991  0001F2  D0C8               	goto	l3226
   992                           
   993                           ;app.c: 206: }
   994                           
   995                           ;app.c: 205: break;
   996                           
   997                           ;app.c: 204: default:
   998                           
   999                           ;app.c: 202: }
  1000                           ;app.c: 203: break;
  1001                           
  1002                           ;app.c: 201: SysRunData.PedalRunCnt[0] = 0;
  1003  0001F4  D0E6               	goto	l157
  1004  0001F6                     l3134:
  1005  0001F6  5004               	movf	_SysRunData,w,c
  1006                           
  1007                           ; Switch size 1, requested type "space"
  1008                           ; Number of cases is 6, Range of values is 0 to 9
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte           19    10 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013  0001F8  0A00               	xorlw	0	; case 0
  1014  0001FA  B4D8               	btfsc	status,2,c
  1015  0001FC  D78C               	goto	l3070
  1016  0001FE  0A01               	xorlw	1	; case 1
  1017  000200  B4D8               	btfsc	status,2,c
  1018  000202  D76F               	goto	l3056
  1019  000204  0A02               	xorlw	2	; case 3
  1020  000206  B4D8               	btfsc	status,2,c
  1021  000208  D098               	goto	L16
  1022  00020A  0A07               	xorlw	7	; case 4
  1023  00020C  B4D8               	btfsc	status,2,c
  1024  00020E  D7C5               	goto	l3104
  1025  000210  0A02               	xorlw	2	; case 6
  1026  000212  B4D8               	btfsc	status,2,c
  1027  000214  D77E               	goto	l3068
  1028  000216  0A0F               	xorlw	15	; case 9
  1029  000218  B4D8               	btfsc	status,2,c
  1030  00021A  D7DA               	goto	l3118
  1031                           
  1032                           ;app.c: 207: }
  1033  00021C  D0D2               	goto	l157
  1034                           
  1035                           ;app.c: 208: else
  1036                           ;app.c: 209: {
  1037                           ;app.c: 210: switch(SysRunData.PedalSta[0])
  1038  00021E  D0B7               	goto	l3230
  1039  000220                     l3136:
  1040                           
  1041                           ;app.c: 213: if(++SysRunData.PedalWaitBackCnt[0] >= 0)
  1042  000220  4A0D               	infsnz	_SysRunData+9,f,c
  1043  000222  2A0E               	incf	_SysRunData+10,f,c
  1044                           
  1045                           ;app.c: 214: {
  1046                           ;app.c: 215: SysRunData.PedalWaitBackCnt[0] = 0;
  1047  000224  0E00               	movlw	0
  1048  000226  6E0E               	movwf	_SysRunData+10,c
  1049  000228  0E00               	movlw	0
  1050  00022A  6E0D               	movwf	_SysRunData+9,c
  1051                           
  1052                           ;app.c: 216: SysRunData.PedalWaitSleepCnt = 0;
  1053  00022C  0E00               	movlw	0
  1054  00022E  6E0C               	movwf	_SysRunData+8,c
  1055  000230  0E00               	movlw	0
  1056  000232  6E0B               	movwf	_SysRunData+7,c
  1057  000234  D76E               	goto	l3068
  1058                           
  1059                           ;app.c: 218: }
  1060                           ;app.c: 219: break;
  1061                           
  1062                           ;app.c: 217: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1063  000236  D0C5               	goto	l157
  1064  000238                     l3144:
  1065                           
  1066                           ;app.c: 221: if(SysRunData.ADC_Buf[0x03] > 985)
  1067  000238  0EDA               	movlw	218
  1068  00023A  5C17               	subwf	_SysRunData+19,w,c
  1069  00023C  0E03               	movlw	3
  1070  00023E  5818               	subwfb	_SysRunData+20,w,c
  1071  000240  A0D8               	btfss	status,0,c
  1072  000242  D0BF               	goto	l157
  1073                           
  1074                           ;app.c: 222: {
  1075                           ;app.c: 223: Pedal_Stop(0);
  1076  000244  0E00               	movlw	0
  1077  000246  EC83  F008         	call	_Pedal_Stop
  1078                           
  1079                           ;app.c: 224: SysRunData.PedalRunCnt[0] = 0;
  1080  00024A  0E00               	movlw	0
  1081  00024C  6E08               	movwf	_SysRunData+4,c
  1082  00024E  0E00               	movlw	0
  1083  000250  6E07               	movwf	_SysRunData+3,c
  1084                           
  1085                           ;app.c: 225: SysRunData.PedalWaitSleepCnt = 0;
  1086  000252  0E00               	movlw	0
  1087  000254  6E0C               	movwf	_SysRunData+8,c
  1088  000256  0E00               	movlw	0
  1089  000258  6E0B               	movwf	_SysRunData+7,c
  1090                           
  1091                           ;app.c: 226: SysRunData.PedalRunCnt[0] = 0;
  1092  00025A  0E00               	movlw	0
  1093  00025C  6E08               	movwf	_SysRunData+4,c
  1094  00025E  0E00               	movlw	0
  1095  000260  6E07               	movwf	_SysRunData+3,c
  1096                           
  1097                           ;app.c: 227: SysRunData.PedalSta[0] = PEDAL_ERROR_FAST_BACK;
  1098  000262  0E06               	movlw	6
  1099  000264  D7B3               	goto	L5
  1100                           
  1101                           ;app.c: 240: }
  1102                           ;app.c: 241: break;
  1103  000266  D0AD               	goto	l157
  1104                           
  1105                           ;app.c: 242: case PEDAL_ERROR_FAST_OUT:
  1106  000268  D072               	goto	L12
  1107  00026A                     l3158:
  1108                           
  1109                           ;app.c: 246: if(SysRunData.PedalRunCnt[0] < 350)
  1110  00026A  0E5E               	movlw	94
  1111  00026C  5C07               	subwf	_SysRunData+3,w,c
  1112  00026E  0E01               	movlw	1
  1113  000270  5808               	subwfb	_SysRunData+4,w,c
  1114  000272  B0D8               	btfsc	status,0,c
  1115  000274  D034               	goto	l3186
  1116                           
  1117                           ;app.c: 247: {
  1118                           ;app.c: 248: Pedal_Back(0);
  1119  000276  0E00               	movlw	0
  1120  000278  ECAB  F008         	call	_Pedal_Back
  1121                           
  1122                           ;app.c: 249: SysRunData.PedalRunCnt[0]++;
  1123  00027C  4A07               	infsnz	_SysRunData+3,f,c
  1124  00027E  2A08               	incf	_SysRunData+4,f,c
  1125                           
  1126                           ;app.c: 250: SysRunData.PedalWaitSleepCnt = 0;
  1127  000280  0E00               	movlw	0
  1128  000282  6E0C               	movwf	_SysRunData+8,c
  1129  000284  0E00               	movlw	0
  1130  000286  6E0B               	movwf	_SysRunData+7,c
  1131                           
  1132                           ;app.c: 252: if(SysRunData.PedalRunCnt[0] > 50)
  1133  000288  5008               	movf	_SysRunData+4,w,c
  1134  00028A  E104               	bnz	u2410
  1135  00028C  0E33               	movlw	51
  1136  00028E  5C07               	subwf	_SysRunData+3,w,c
  1137  000290  A0D8               	btfss	status,0,c
  1138  000292  D097               	goto	l157
  1139  000294                     u2410:
  1140                           
  1141                           ;app.c: 253: {
  1142                           ;app.c: 254: if(SysRunData.ADC_Buf[0x03] > 985)
  1143  000294  0EDA               	movlw	218
  1144  000296  5C17               	subwf	_SysRunData+19,w,c
  1145  000298  0E03               	movlw	3
  1146  00029A  5818               	subwfb	_SysRunData+20,w,c
  1147  00029C  A0D8               	btfss	status,0,c
  1148  00029E  D091               	goto	l157
  1149                           
  1150                           ;app.c: 255: {
  1151                           ;app.c: 256: if(SysRunData.PedalRunCnt[0] > 120)
  1152  0002A0  5008               	movf	_SysRunData+4,w,c
  1153  0002A2  E104               	bnz	u2430
  1154  0002A4  0E79               	movlw	121
  1155  0002A6  5C07               	subwf	_SysRunData+3,w,c
  1156  0002A8  A0D8               	btfss	status,0,c
  1157  0002AA  D00C               	goto	l3180
  1158  0002AC                     u2430:
  1159                           
  1160                           ;app.c: 257: {
  1161                           ;app.c: 258: Pedal_Stop(0);
  1162  0002AC  0E00               	movlw	0
  1163  0002AE  EC83  F008         	call	_Pedal_Stop
  1164                           
  1165                           ;app.c: 259: SysRunData.PedalRunCnt[0] = 0;
  1166  0002B2  0E00               	movlw	0
  1167  0002B4  6E08               	movwf	_SysRunData+4,c
  1168  0002B6  0E00               	movlw	0
  1169  0002B8  6E07               	movwf	_SysRunData+3,c
  1170                           
  1171                           ;app.c: 260: SysRunData.PedalWaitSleepCnt = 0;
  1172  0002BA  0E00               	movlw	0
  1173  0002BC  6E0C               	movwf	_SysRunData+8,c
  1174  0002BE  0E00               	movlw	0
  1175  0002C0  6E0B               	movwf	_SysRunData+7,c
  1176  0002C2  D045               	goto	L12
  1177  0002C4                     l3180:
  1178                           
  1179                           ;app.c: 263: else
  1180                           ;app.c: 264: {
  1181                           ;app.c: 265: Pedal_Stop(0);
  1182  0002C4  0E00               	movlw	0
  1183  0002C6  EC83  F008         	call	_Pedal_Stop
  1184                           
  1185                           ;app.c: 266: SysRunData.PedalRunCnt[0] = 0;
  1186  0002CA  0E00               	movlw	0
  1187  0002CC  6E08               	movwf	_SysRunData+4,c
  1188  0002CE  0E00               	movlw	0
  1189  0002D0  6E07               	movwf	_SysRunData+3,c
  1190                           
  1191                           ;app.c: 267: SysRunData.PedalSta[0] = PEDAL_ERROR_STALL_OUT;
  1192  0002D2  0E05               	movlw	5
  1193  0002D4  6E04               	movwf	_SysRunData,c
  1194                           
  1195                           ;app.c: 268: Pedal_Out(0);
  1196  0002D6  0E00               	movlw	0
  1197  0002D8  EC97  F008         	call	_Pedal_Out
  1198                           
  1199                           ;app.c: 269: }
  1200                           ;app.c: 270: }
  1201                           ;app.c: 271: }
  1202                           ;app.c: 272: }
  1203  0002DC  D072               	goto	l157
  1204  0002DE                     l3186:
  1205                           
  1206                           ;app.c: 273: else
  1207                           ;app.c: 274: {
  1208                           ;app.c: 275: Pedal_Stop(0);
  1209  0002DE  0E00               	movlw	0
  1210  0002E0  EC83  F008         	call	_Pedal_Stop
  1211                           
  1212                           ;app.c: 276: SysRunData.PedalRunCnt[0] = 0;
  1213  0002E4  0E00               	movlw	0
  1214  0002E6  6E08               	movwf	_SysRunData+4,c
  1215  0002E8  0E00               	movlw	0
  1216  0002EA  6E07               	movwf	_SysRunData+3,c
  1217                           
  1218                           ;app.c: 277: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  1219  0002EC  0E09               	movlw	9
  1220  0002EE  D76E               	goto	L5
  1221                           
  1222                           ;app.c: 278: }
  1223                           ;app.c: 279: break;
  1224  0002F0  D068               	goto	l157
  1225  0002F2                     l3192:
  1226                           
  1227                           ;app.c: 282: SysRunData.PedalRunCnt[0]++;
  1228  0002F2  4A07               	infsnz	_SysRunData+3,f,c
  1229  0002F4  2A08               	incf	_SysRunData+4,f,c
  1230                           
  1231                           ;app.c: 283: if(SysRunData.PedalRunCnt[0] > 50)
  1232  0002F6  5008               	movf	_SysRunData+4,w,c
  1233  0002F8  E104               	bnz	u2440
  1234  0002FA  0E33               	movlw	51
  1235  0002FC  5C07               	subwf	_SysRunData+3,w,c
  1236  0002FE  A0D8               	btfss	status,0,c
  1237  000300  D060               	goto	l157
  1238  000302                     u2440:
  1239                           
  1240                           ;app.c: 284: {
  1241                           ;app.c: 285: if(SysRunData.ADC_Buf[0x03] > 985)
  1242  000302  0EDA               	movlw	218
  1243  000304  5C17               	subwf	_SysRunData+19,w,c
  1244  000306  0E03               	movlw	3
  1245  000308  5818               	subwfb	_SysRunData+20,w,c
  1246  00030A  A0D8               	btfss	status,0,c
  1247  00030C  D05A               	goto	l157
  1248                           
  1249                           ;app.c: 286: {
  1250                           ;app.c: 288: Pedal_Stop(0);
  1251  00030E  0E00               	movlw	0
  1252  000310  EC83  F008         	call	_Pedal_Stop
  1253                           
  1254                           ;app.c: 289: SysRunData.PedalRunCnt[0] = 0;
  1255  000314  0E00               	movlw	0
  1256  000316  6E08               	movwf	_SysRunData+4,c
  1257  000318  0E00               	movlw	0
  1258  00031A  6E07               	movwf	_SysRunData+3,c
  1259                           
  1260                           ;app.c: 290: SysRunData.PedalSta[0] = PEDAL_STALL_WAIT_BACK;
  1261  00031C  0E03               	movlw	3
  1262  00031E  D756               	goto	L5
  1263                           
  1264                           ;app.c: 291: }
  1265                           ;app.c: 292: }
  1266                           ;app.c: 293: break;
  1267  000320  D050               	goto	l157
  1268  000322                     l3204:
  1269                           
  1270                           ;app.c: 295: SysRunData.PedalWaitSleepCnt = 0;
  1271  000322  0E00               	movlw	0
  1272  000324  6E0C               	movwf	_SysRunData+8,c
  1273  000326  0E00               	movlw	0
  1274  000328  6E0B               	movwf	_SysRunData+7,c
  1275                           
  1276                           ;app.c: 296: if(++SysRunData.PedalWaitBackCnt[0] >= 1500)
  1277  00032A  4A0D               	infsnz	_SysRunData+9,f,c
  1278  00032C  2A0E               	incf	_SysRunData+10,f,c
  1279  00032E  0EDC               	movlw	220
  1280  000330  5C0D               	subwf	_SysRunData+9,w,c
  1281  000332  0E05               	movlw	5
  1282  000334  580E               	subwfb	_SysRunData+10,w,c
  1283  000336  A0D8               	btfss	status,0,c
  1284  000338  D044               	goto	l157
  1285  00033A                     L16:
  1286                           
  1287                           ;app.c: 297: {
  1288                           ;app.c: 298: SysRunData.PedalWaitBackCnt[0] = 0;
  1289  00033A  0E00               	movlw	0
  1290  00033C  6E0E               	movwf	_SysRunData+10,c
  1291  00033E  0E00               	movlw	0
  1292  000340  6E0D               	movwf	_SysRunData+9,c
  1293  000342  D6E7               	goto	l3068
  1294                           
  1295                           ;app.c: 300: }
  1296                           ;app.c: 301: break;
  1297                           
  1298                           ;app.c: 299: SysRunData.PedalSta[0] = PEDAL_DOWN_LIMIT;
  1299  000344  D03E               	goto	l157
  1300  000346                     l3210:
  1301                           
  1302                           ;app.c: 304: SysRunData.PedalRunCnt[0] = 0;
  1303  000346  0E00               	movlw	0
  1304  000348  6E08               	movwf	_SysRunData+4,c
  1305  00034A  0E00               	movlw	0
  1306  00034C  6E07               	movwf	_SysRunData+3,c
  1307  00034E                     L12:
  1308                           
  1309                           ;app.c: 305: SysRunData.PedalSta[0] = PEDAL_UP_LIMIT;
  1310  00034E  0E00               	movlw	0
  1311  000350  D73D               	goto	L5
  1312  000352                     l3212:
  1313                           
  1314                           ;app.c: 308: if(SysRunData.PedalRunCnt[0] < 350)
  1315  000352  0E5E               	movlw	94
  1316  000354  5C07               	subwf	_SysRunData+3,w,c
  1317  000356  0E01               	movlw	1
  1318  000358  5808               	subwfb	_SysRunData+4,w,c
  1319  00035A  B0D8               	btfsc	status,0,c
  1320  00035C  D00E               	goto	l3222
  1321                           
  1322                           ;app.c: 309: {
  1323                           ;app.c: 310: Pedal_Back(0);
  1324  00035E  0E00               	movlw	0
  1325  000360  ECAB  F008         	call	_Pedal_Back
  1326                           
  1327                           ;app.c: 311: SysRunData.PedalRunCnt[0]++;
  1328  000364  4A07               	infsnz	_SysRunData+3,f,c
  1329  000366  2A08               	incf	_SysRunData+4,f,c
  1330                           
  1331                           ;app.c: 312: SysRunData.PedalWaitSleepCnt = 0;
  1332  000368  0E00               	movlw	0
  1333  00036A  6E0C               	movwf	_SysRunData+8,c
  1334  00036C  0E00               	movlw	0
  1335  00036E  6E0B               	movwf	_SysRunData+7,c
  1336  000370                     l3220:
  1337                           
  1338                           ;app.c: 313: SysRunData.PedalWaitSleepCnt = 0;
  1339  000370  0E00               	movlw	0
  1340  000372  6E0C               	movwf	_SysRunData+8,c
  1341  000374  0E00               	movlw	0
  1342  000376  6E0B               	movwf	_SysRunData+7,c
  1343                           
  1344                           ;app.c: 314: }
  1345  000378  D024               	goto	l157
  1346  00037A                     l3222:
  1347                           
  1348                           ;app.c: 315: else
  1349                           ;app.c: 316: {
  1350                           ;app.c: 317: SysRunData.PedalSta[0] = PEDAL_ERROR_BACK_TIMEOUT;
  1351  00037A  0E09               	movlw	9
  1352  00037C  6E04               	movwf	_SysRunData,c
  1353                           
  1354                           ;app.c: 318: Pedal_Stop(0);
  1355  00037E  0E00               	movlw	0
  1356  000380  EC83  F008         	call	_Pedal_Stop
  1357  000384                     l3226:
  1358                           
  1359                           ;app.c: 319: SysRunData.PedalRunCnt[0] = 0;
  1360  000384  0E00               	movlw	0
  1361  000386  6E08               	movwf	_SysRunData+4,c
  1362  000388  0E00               	movlw	0
  1363  00038A  6E07               	movwf	_SysRunData+3,c
  1364                           
  1365                           ;app.c: 324: }
  1366                           
  1367                           ;app.c: 323: break;
  1368                           
  1369                           ;app.c: 322: default:
  1370                           
  1371                           ;app.c: 320: }
  1372                           ;app.c: 321: break;
  1373  00038C  D01A               	goto	l157
  1374  00038E                     l3230:
  1375  00038E  5004               	movf	_SysRunData,w,c
  1376                           
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 8, Range of values is 0 to 8
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           25    13 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383  000390  0A00               	xorlw	0	; case 0
  1384  000392  B4D8               	btfsc	status,2,c
  1385  000394  D751               	goto	l3144
  1386  000396  0A01               	xorlw	1	; case 1
  1387  000398  B4D8               	btfsc	status,2,c
  1388  00039A  D767               	goto	l3158
  1389  00039C  0A03               	xorlw	3	; case 2
  1390  00039E  B4D8               	btfsc	status,2,c
  1391  0003A0  D73F               	goto	l3136
  1392  0003A2  0A01               	xorlw	1	; case 3
  1393  0003A4  B4D8               	btfsc	status,2,c
  1394  0003A6  D7BD               	goto	l3204
  1395  0003A8  0A07               	xorlw	7	; case 4
  1396  0003AA  B4D8               	btfsc	status,2,c
  1397  0003AC  D7CC               	goto	l3210
  1398  0003AE  0A01               	xorlw	1	; case 5
  1399  0003B0  B4D8               	btfsc	status,2,c
  1400  0003B2  D79F               	goto	l3192
  1401  0003B4  0A02               	xorlw	2	; case 7
  1402  0003B6  B4D8               	btfsc	status,2,c
  1403  0003B8  D7CA               	goto	L12
  1404  0003BA  0A0F               	xorlw	15	; case 8
  1405  0003BC  B4D8               	btfsc	status,2,c
  1406  0003BE  D7C9               	goto	l3212
  1407  0003C0  D000               	goto	l157
  1408  0003C2                     l157:
  1409                           
  1410                           ;app.c: 325: }
  1411                           ;app.c: 330: if((SysRunData.PedalRunFlag & (0x02u)) == (0x02u))
  1412  0003C2  B219               	btfsc	_SysRunData+21,1,c
  1413  0003C4  D090               	goto	l3316
  1414  0003C6  D15D               	goto	l3416
  1415                           
  1416                           ;app.c: 331: {
  1417                           ;app.c: 332: switch(SysRunData.PedalSta[1])
  1418  0003C8  D08E               	goto	l3316
  1419  0003CA                     l3234:
  1420                           
  1421                           ;app.c: 335: if(SysRunData.ADC_Buf[0x02] > 985)
  1422  0003CA  0EDA               	movlw	218
  1423  0003CC  5C15               	subwf	_SysRunData+17,w,c
  1424  0003CE  0E03               	movlw	3
  1425  0003D0  5816               	subwfb	_SysRunData+18,w,c
  1426  0003D2  A0D8               	btfss	status,0,c
  1427  0003D4  D170               	goto	l3418
  1428                           
  1429                           ;app.c: 336: {
  1430                           ;app.c: 337: Pedal_Stop(1);
  1431  0003D6  0E01               	movlw	1
  1432  0003D8  EC83  F008         	call	_Pedal_Stop
  1433                           
  1434                           ;app.c: 338: SysRunData.PedalRunCnt[1] = 0;
  1435  0003DC  0E00               	movlw	0
  1436  0003DE  6E0A               	movwf	_SysRunData+6,c
  1437  0003E0  0E00               	movlw	0
  1438  0003E2  6E09               	movwf	_SysRunData+5,c
  1439                           
  1440                           ;app.c: 339: SysRunData.PedalWaitSleepCnt = 0;
  1441  0003E4  0E00               	movlw	0
  1442  0003E6  6E0C               	movwf	_SysRunData+8,c
  1443  0003E8  0E00               	movlw	0
  1444  0003EA  6E0B               	movwf	_SysRunData+7,c
  1445                           
  1446                           ;app.c: 340: SysRunData.PedalRunCnt[1] = 0;
  1447  0003EC  0E00               	movlw	0
  1448  0003EE  6E0A               	movwf	_SysRunData+6,c
  1449  0003F0  0E00               	movlw	0
  1450  0003F2  6E09               	movwf	_SysRunData+5,c
  1451                           
  1452                           ;app.c: 341: SysRunData.PedalSta[1] = PEDAL_ERROR_FAST_OUT;
  1453  0003F4  0E07               	movlw	7
  1454  0003F6  D05E               	goto	L10
  1455                           
  1456                           ;app.c: 354: }
  1457                           ;app.c: 355: break;
  1458  0003F8  D15E               	goto	l3418
  1459                           
  1460                           ;app.c: 356: case PEDAL_ERROR_FAST_BACK:
  1461  0003FA  D120               	goto	L13
  1462                           
  1463                           ;app.c: 359: break;
  1464                           
  1465                           ;app.c: 358: break;
  1466                           
  1467                           ;app.c: 357: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  1468  0003FC  D15C               	goto	l3418
  1469  0003FE                     l3250:
  1470                           
  1471                           ;app.c: 361: if(SysRunData.PedalRunCnt[1] < 350)
  1472  0003FE  0E5E               	movlw	94
  1473  000400  5C09               	subwf	_SysRunData+5,w,c
  1474  000402  0E01               	movlw	1
  1475  000404  580A               	subwfb	_SysRunData+6,w,c
  1476  000406  B0D8               	btfsc	status,0,c
  1477  000408  D032               	goto	l3278
  1478                           
  1479                           ;app.c: 362: {
  1480                           ;app.c: 363: Pedal_Out(1);
  1481  00040A  0E01               	movlw	1
  1482  00040C  EC97  F008         	call	_Pedal_Out
  1483                           
  1484                           ;app.c: 364: SysRunData.PedalRunCnt[1]++;
  1485  000410  4A09               	infsnz	_SysRunData+5,f,c
  1486  000412  2A0A               	incf	_SysRunData+6,f,c
  1487                           
  1488                           ;app.c: 365: SysRunData.PedalWaitSleepCnt = 0;
  1489  000414  0E00               	movlw	0
  1490  000416  6E0C               	movwf	_SysRunData+8,c
  1491  000418  0E00               	movlw	0
  1492  00041A  6E0B               	movwf	_SysRunData+7,c
  1493                           
  1494                           ;app.c: 366: if(SysRunData.PedalRunCnt[1] > 50)
  1495  00041C  500A               	movf	_SysRunData+6,w,c
  1496  00041E  E104               	bnz	u2510
  1497  000420  0E33               	movlw	51
  1498  000422  5C09               	subwf	_SysRunData+5,w,c
  1499  000424  A0D8               	btfss	status,0,c
  1500  000426  D147               	goto	l3418
  1501  000428                     u2510:
  1502                           
  1503                           ;app.c: 367: {
  1504                           ;app.c: 368: if(SysRunData.ADC_Buf[0x02] > 985)
  1505  000428  0EDA               	movlw	218
  1506  00042A  5C15               	subwf	_SysRunData+17,w,c
  1507  00042C  0E03               	movlw	3
  1508  00042E  5816               	subwfb	_SysRunData+18,w,c
  1509  000430  A0D8               	btfss	status,0,c
  1510  000432  D141               	goto	l3418
  1511                           
  1512                           ;app.c: 369: {
  1513                           ;app.c: 370: if(SysRunData.PedalRunCnt[1] > 120)
  1514  000434  500A               	movf	_SysRunData+6,w,c
  1515  000436  E104               	bnz	u2530
  1516  000438  0E79               	movlw	121
  1517  00043A  5C09               	subwf	_SysRunData+5,w,c
  1518  00043C  A0D8               	btfss	status,0,c
  1519  00043E  D009               	goto	l3270
  1520  000440                     u2530:
  1521                           
  1522                           ;app.c: 371: {
  1523                           ;app.c: 372: Pedal_Stop(1);
  1524  000440  0E01               	movlw	1
  1525  000442  EC83  F008         	call	_Pedal_Stop
  1526                           
  1527                           ;app.c: 373: SysRunData.PedalRunCnt[1] = 0;
  1528  000446  0E00               	movlw	0
  1529  000448  6E0A               	movwf	_SysRunData+6,c
  1530  00044A  0E00               	movlw	0
  1531  00044C  6E09               	movwf	_SysRunData+5,c
  1532                           
  1533                           ;app.c: 374: SysRunData.PedalSta[1] = PEDAL_NORMAL_WAIT_BACK;
  1534  00044E  0E02               	movlw	2
  1535  000450  D031               	goto	L10
  1536  000452                     l3270:
  1537                           
  1538                           ;app.c: 376: else
  1539                           ;app.c: 377: {
  1540                           ;app.c: 378: Pedal_Stop(1);
  1541  000452  0E01               	movlw	1
  1542  000454  EC83  F008         	call	_Pedal_Stop
  1543                           
  1544                           ;app.c: 379: SysRunData.PedalRunCnt[1] = 0;
  1545  000458  0E00               	movlw	0
  1546  00045A  6E0A               	movwf	_SysRunData+6,c
  1547  00045C  0E00               	movlw	0
  1548  00045E  6E09               	movwf	_SysRunData+5,c
  1549                           
  1550                           ;app.c: 380: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  1551  000460  0E04               	movlw	4
  1552  000462  6E05               	movwf	_SysRunData+1,c
  1553                           
  1554                           ;app.c: 381: Pedal_Back(1);
  1555  000464  0E01               	movlw	1
  1556  000466  ECAB  F008         	call	_Pedal_Back
  1557  00046A  D0FC               	goto	l3406
  1558                           
  1559                           ;app.c: 383: }
  1560                           ;app.c: 384: }
  1561                           ;app.c: 385: }
  1562                           ;app.c: 386: }
  1563                           
  1564                           ;app.c: 382: SysRunData.PedalWaitSleepCnt = 0;
  1565  00046C  D124               	goto	l3418
  1566  00046E                     l3278:
  1567                           
  1568                           ;app.c: 387: else
  1569                           ;app.c: 388: {
  1570                           ;app.c: 389: Pedal_Stop(1);
  1571  00046E  0E01               	movlw	1
  1572  000470  EC83  F008         	call	_Pedal_Stop
  1573                           
  1574                           ;app.c: 390: SysRunData.PedalRunCnt[1] = 0;
  1575  000474  0E00               	movlw	0
  1576  000476  6E0A               	movwf	_SysRunData+6,c
  1577  000478  0E00               	movlw	0
  1578  00047A  6E09               	movwf	_SysRunData+5,c
  1579                           
  1580                           ;app.c: 391: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  1581  00047C  0E08               	movlw	8
  1582  00047E  D01A               	goto	L10
  1583                           
  1584                           ;app.c: 392: }
  1585                           ;app.c: 393: break;
  1586  000480  D11A               	goto	l3418
  1587  000482                     l3284:
  1588                           
  1589                           ;app.c: 396: SysRunData.PedalRunCnt[1]++;
  1590  000482  4A09               	infsnz	_SysRunData+5,f,c
  1591  000484  2A0A               	incf	_SysRunData+6,f,c
  1592                           
  1593                           ;app.c: 397: if(SysRunData.PedalRunCnt[1] > 50)
  1594  000486  500A               	movf	_SysRunData+6,w,c
  1595  000488  E104               	bnz	u2540
  1596  00048A  0E33               	movlw	51
  1597  00048C  5C09               	subwf	_SysRunData+5,w,c
  1598  00048E  A0D8               	btfss	status,0,c
  1599  000490  D112               	goto	l3418
  1600  000492                     u2540:
  1601                           
  1602                           ;app.c: 398: {
  1603                           ;app.c: 399: if(SysRunData.ADC_Buf[0x02] > 985)
  1604  000492  0EDA               	movlw	218
  1605  000494  5C15               	subwf	_SysRunData+17,w,c
  1606  000496  0E03               	movlw	3
  1607  000498  5816               	subwfb	_SysRunData+18,w,c
  1608  00049A  A0D8               	btfss	status,0,c
  1609  00049C  D10C               	goto	l3418
  1610                           
  1611                           ;app.c: 400: {
  1612                           ;app.c: 401: Pedal_Stop(1);
  1613  00049E  0E01               	movlw	1
  1614  0004A0  EC83  F008         	call	_Pedal_Stop
  1615                           
  1616                           ;app.c: 402: SysRunData.PedalRunCnt[1] = 0;
  1617  0004A4  0E00               	movlw	0
  1618  0004A6  6E0A               	movwf	_SysRunData+6,c
  1619  0004A8  0E00               	movlw	0
  1620  0004AA  6E09               	movwf	_SysRunData+5,c
  1621                           
  1622                           ;app.c: 403: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_BACK;
  1623  0004AC  0E04               	movlw	4
  1624  0004AE  D002               	goto	L10
  1625                           
  1626                           ;app.c: 404: }
  1627                           ;app.c: 405: }
  1628                           ;app.c: 406: break;
  1629  0004B0  D102               	goto	l3418
  1630                           
  1631                           ;app.c: 407: case PEDAL_STALL_WAIT_BACK:
  1632  0004B2  D0C0               	goto	L15
  1633  0004B4                     L10:
  1634  0004B4  6E05               	movwf	_SysRunData+1,c
  1635                           
  1636                           ;app.c: 411: break;
  1637  0004B6  D0FF               	goto	l3418
  1638  0004B8                     l3298:
  1639                           
  1640                           ;app.c: 413: if(SysRunData.PedalRunCnt[1] < 350)
  1641  0004B8  0E5E               	movlw	94
  1642  0004BA  5C09               	subwf	_SysRunData+5,w,c
  1643  0004BC  0E01               	movlw	1
  1644  0004BE  580A               	subwfb	_SysRunData+6,w,c
  1645  0004C0  B0D8               	btfsc	status,0,c
  1646  0004C2  D00A               	goto	l3308
  1647                           
  1648                           ;app.c: 414: {
  1649                           ;app.c: 415: Pedal_Out(1);
  1650  0004C4  0E01               	movlw	1
  1651  0004C6  EC97  F008         	call	_Pedal_Out
  1652                           
  1653                           ;app.c: 416: SysRunData.PedalRunCnt[1]++;
  1654  0004CA  4A09               	infsnz	_SysRunData+5,f,c
  1655  0004CC  2A0A               	incf	_SysRunData+6,f,c
  1656                           
  1657                           ;app.c: 417: SysRunData.PedalWaitSleepCnt = 0;
  1658  0004CE  0E00               	movlw	0
  1659  0004D0  6E0C               	movwf	_SysRunData+8,c
  1660  0004D2  0E00               	movlw	0
  1661  0004D4  6E0B               	movwf	_SysRunData+7,c
  1662  0004D6  D0C6               	goto	l3406
  1663  0004D8                     l3308:
  1664                           
  1665                           ;app.c: 420: else
  1666                           ;app.c: 421: {
  1667                           ;app.c: 422: SysRunData.PedalSta[1] = PEDAL_ERROR_OUT_TIMEOUT;
  1668  0004D8  0E08               	movlw	8
  1669  0004DA  6E05               	movwf	_SysRunData+1,c
  1670                           
  1671                           ;app.c: 423: Pedal_Stop(1);
  1672  0004DC  0E01               	movlw	1
  1673  0004DE  EC83  F008         	call	_Pedal_Stop
  1674  0004E2  D0CA               	goto	l3412
  1675                           
  1676                           ;app.c: 429: }
  1677                           
  1678                           ;app.c: 428: break;
  1679                           
  1680                           ;app.c: 427: default:
  1681                           
  1682                           ;app.c: 425: }
  1683                           ;app.c: 426: break;
  1684                           
  1685                           ;app.c: 424: SysRunData.PedalRunCnt[1] = 0;
  1686  0004E4  D0E8               	goto	l3418
  1687  0004E6                     l3316:
  1688  0004E6  5005               	movf	_SysRunData+1,w,c
  1689                           
  1690                           ; Switch size 1, requested type "space"
  1691                           ; Number of cases is 6, Range of values is 0 to 9
  1692                           ; switch strategies available:
  1693                           ; Name         Instructions Cycles
  1694                           ; simple_byte           19    10 (average)
  1695                           ;	Chosen strategy is simple_byte
  1696  0004E8  0A00               	xorlw	0	; case 0
  1697  0004EA  B4D8               	btfsc	status,2,c
  1698  0004EC  D788               	goto	l3250
  1699  0004EE  0A01               	xorlw	1	; case 1
  1700  0004F0  B4D8               	btfsc	status,2,c
  1701  0004F2  D76B               	goto	l3234
  1702  0004F4  0A02               	xorlw	2	; case 3
  1703  0004F6  B4D8               	btfsc	status,2,c
  1704  0004F8  D09D               	goto	L15
  1705  0004FA  0A07               	xorlw	7	; case 4
  1706  0004FC  B4D8               	btfsc	status,2,c
  1707  0004FE  D7C1               	goto	l3284
  1708  000500  0A02               	xorlw	2	; case 6
  1709  000502  B4D8               	btfsc	status,2,c
  1710  000504  D09B               	goto	L13
  1711  000506  0A0F               	xorlw	15	; case 9
  1712  000508  B4D8               	btfsc	status,2,c
  1713  00050A  D7D6               	goto	l3298
  1714                           
  1715                           ;app.c: 430: }
  1716  00050C  D0D4               	goto	l3418
  1717                           
  1718                           ;app.c: 431: else
  1719                           ;app.c: 432: {
  1720                           ;app.c: 433: switch(SysRunData.PedalSta[1])
  1721  00050E  D0B9               	goto	l3416
  1722  000510                     l3318:
  1723                           
  1724                           ;app.c: 436: if(++SysRunData.PedalWaitBackCnt[1] >= 0)
  1725  000510  4A0F               	infsnz	_SysRunData+11,f,c
  1726  000512  2A10               	incf	_SysRunData+12,f,c
  1727                           
  1728                           ;app.c: 437: {
  1729                           ;app.c: 438: SysRunData.PedalWaitBackCnt[1] = 0;
  1730  000514  0E00               	movlw	0
  1731  000516  6E10               	movwf	_SysRunData+12,c
  1732  000518  0E00               	movlw	0
  1733  00051A  6E0F               	movwf	_SysRunData+11,c
  1734                           
  1735                           ;app.c: 439: SysRunData.PedalWaitSleepCnt = 0;
  1736  00051C  0E00               	movlw	0
  1737  00051E  6E0C               	movwf	_SysRunData+8,c
  1738  000520  0E00               	movlw	0
  1739  000522  6E0B               	movwf	_SysRunData+7,c
  1740  000524  D08B               	goto	L13
  1741                           
  1742                           ;app.c: 441: }
  1743                           ;app.c: 442: break;
  1744                           
  1745                           ;app.c: 440: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  1746  000526  D0C7               	goto	l3418
  1747  000528                     l3326:
  1748                           
  1749                           ;app.c: 444: if(SysRunData.ADC_Buf[0x02] > 985)
  1750  000528  0EDA               	movlw	218
  1751  00052A  5C15               	subwf	_SysRunData+17,w,c
  1752  00052C  0E03               	movlw	3
  1753  00052E  5816               	subwfb	_SysRunData+18,w,c
  1754  000530  A0D8               	btfss	status,0,c
  1755  000532  D0C1               	goto	l3418
  1756                           
  1757                           ;app.c: 445: {
  1758                           ;app.c: 446: Pedal_Stop(1);
  1759  000534  0E01               	movlw	1
  1760  000536  EC83  F008         	call	_Pedal_Stop
  1761                           
  1762                           ;app.c: 447: SysRunData.PedalRunCnt[1] = 0;
  1763  00053A  0E00               	movlw	0
  1764  00053C  6E0A               	movwf	_SysRunData+6,c
  1765  00053E  0E00               	movlw	0
  1766  000540  6E09               	movwf	_SysRunData+5,c
  1767                           
  1768                           ;app.c: 448: SysRunData.PedalWaitSleepCnt = 0;
  1769  000542  0E00               	movlw	0
  1770  000544  6E0C               	movwf	_SysRunData+8,c
  1771  000546  0E00               	movlw	0
  1772  000548  6E0B               	movwf	_SysRunData+7,c
  1773                           
  1774                           ;app.c: 449: SysRunData.PedalRunCnt[1] = 0;
  1775  00054A  0E00               	movlw	0
  1776  00054C  6E0A               	movwf	_SysRunData+6,c
  1777  00054E  0E00               	movlw	0
  1778  000550  6E09               	movwf	_SysRunData+5,c
  1779                           
  1780                           ;app.c: 450: SysRunData.PedalSta[1] = PEDAL_ERROR_FAST_BACK;
  1781  000552  0E06               	movlw	6
  1782  000554  D7AF               	goto	L10
  1783                           
  1784                           ;app.c: 463: }
  1785                           ;app.c: 464: break;
  1786  000556  D0AF               	goto	l3418
  1787                           
  1788                           ;app.c: 465: case PEDAL_ERROR_FAST_OUT:
  1789  000558  D078               	goto	L14
  1790                           
  1791                           ;app.c: 468: break;
  1792                           
  1793                           ;app.c: 467: break;
  1794                           
  1795                           ;app.c: 466: SysRunData.PedalSta[1] = PEDAL_UP_LIMIT;
  1796  00055A  D0AD               	goto	l3418
  1797  00055C                     l3342:
  1798                           
  1799                           ;app.c: 470: if(SysRunData.PedalRunCnt[1] < 350)
  1800  00055C  0E5E               	movlw	94
  1801  00055E  5C09               	subwf	_SysRunData+5,w,c
  1802  000560  0E01               	movlw	1
  1803  000562  580A               	subwfb	_SysRunData+6,w,c
  1804  000564  B0D8               	btfsc	status,0,c
  1805  000566  D038               	goto	l3374
  1806                           
  1807                           ;app.c: 471: {
  1808                           ;app.c: 472: Pedal_Back(1);
  1809  000568  0E01               	movlw	1
  1810  00056A  ECAB  F008         	call	_Pedal_Back
  1811                           
  1812                           ;app.c: 473: SysRunData.PedalRunCnt[1]++;
  1813  00056E  4A09               	infsnz	_SysRunData+5,f,c
  1814  000570  2A0A               	incf	_SysRunData+6,f,c
  1815                           
  1816                           ;app.c: 474: SysRunData.PedalWaitSleepCnt = 0;
  1817  000572  0E00               	movlw	0
  1818  000574  6E0C               	movwf	_SysRunData+8,c
  1819  000576  0E00               	movlw	0
  1820  000578  6E0B               	movwf	_SysRunData+7,c
  1821                           
  1822                           ;app.c: 476: if(SysRunData.PedalRunCnt[1] > 50)
  1823  00057A  500A               	movf	_SysRunData+6,w,c
  1824  00057C  E104               	bnz	u2590
  1825  00057E  0E33               	movlw	51
  1826  000580  5C09               	subwf	_SysRunData+5,w,c
  1827  000582  A0D8               	btfss	status,0,c
  1828  000584  D098               	goto	l3418
  1829  000586                     u2590:
  1830                           
  1831                           ;app.c: 477: {
  1832                           ;app.c: 478: if(SysRunData.ADC_Buf[0x02] > 985)
  1833  000586  0EDA               	movlw	218
  1834  000588  5C15               	subwf	_SysRunData+17,w,c
  1835  00058A  0E03               	movlw	3
  1836  00058C  5816               	subwfb	_SysRunData+18,w,c
  1837  00058E  A0D8               	btfss	status,0,c
  1838  000590  D092               	goto	l3418
  1839                           
  1840                           ;app.c: 479: {
  1841                           ;app.c: 480: if(SysRunData.PedalRunCnt[1] > 120)
  1842  000592  500A               	movf	_SysRunData+6,w,c
  1843  000594  E104               	bnz	u2610
  1844  000596  0E79               	movlw	121
  1845  000598  5C09               	subwf	_SysRunData+5,w,c
  1846  00059A  A0D8               	btfss	status,0,c
  1847  00059C  D00C               	goto	l3364
  1848  00059E                     u2610:
  1849                           
  1850                           ;app.c: 481: {
  1851                           ;app.c: 482: Pedal_Stop(1);
  1852  00059E  0E01               	movlw	1
  1853  0005A0  EC83  F008         	call	_Pedal_Stop
  1854                           
  1855                           ;app.c: 483: SysRunData.PedalRunCnt[1] = 0;
  1856  0005A4  0E00               	movlw	0
  1857  0005A6  6E0A               	movwf	_SysRunData+6,c
  1858  0005A8  0E00               	movlw	0
  1859  0005AA  6E09               	movwf	_SysRunData+5,c
  1860                           
  1861                           ;app.c: 484: SysRunData.PedalWaitSleepCnt = 0;
  1862  0005AC  0E00               	movlw	0
  1863  0005AE  6E0C               	movwf	_SysRunData+8,c
  1864  0005B0  0E00               	movlw	0
  1865  0005B2  6E0B               	movwf	_SysRunData+7,c
  1866  0005B4  D04A               	goto	L14
  1867  0005B6                     l3364:
  1868                           
  1869                           ;app.c: 487: else
  1870                           ;app.c: 488: {
  1871                           ;app.c: 489: Pedal_Stop(1);
  1872  0005B6  0E01               	movlw	1
  1873  0005B8  EC83  F008         	call	_Pedal_Stop
  1874                           
  1875                           ;app.c: 490: SysRunData.PedalRunCnt[1] = 0;
  1876  0005BC  0E00               	movlw	0
  1877  0005BE  6E0A               	movwf	_SysRunData+6,c
  1878  0005C0  0E00               	movlw	0
  1879  0005C2  6E09               	movwf	_SysRunData+5,c
  1880                           
  1881                           ;app.c: 491: SysRunData.PedalRunCnt[1] = 0;
  1882  0005C4  0E00               	movlw	0
  1883  0005C6  6E0A               	movwf	_SysRunData+6,c
  1884  0005C8  0E00               	movlw	0
  1885  0005CA  6E09               	movwf	_SysRunData+5,c
  1886                           
  1887                           ;app.c: 492: SysRunData.PedalSta[1] = PEDAL_ERROR_STALL_OUT;
  1888  0005CC  0E05               	movlw	5
  1889  0005CE  6E05               	movwf	_SysRunData+1,c
  1890                           
  1891                           ;app.c: 493: Pedal_Out(1);
  1892  0005D0  0E01               	movlw	1
  1893  0005D2  EC97  F008         	call	_Pedal_Out
  1894                           
  1895                           ;app.c: 495: }
  1896                           ;app.c: 496: }
  1897                           ;app.c: 497: }
  1898                           ;app.c: 498: }
  1899  0005D6  D06F               	goto	l3418
  1900  0005D8                     l3374:
  1901                           
  1902                           ;app.c: 499: else
  1903                           ;app.c: 500: {
  1904                           ;app.c: 501: Pedal_Stop(1);
  1905  0005D8  0E01               	movlw	1
  1906  0005DA  EC83  F008         	call	_Pedal_Stop
  1907                           
  1908                           ;app.c: 502: SysRunData.PedalRunCnt[1] = 0;
  1909  0005DE  0E00               	movlw	0
  1910  0005E0  6E0A               	movwf	_SysRunData+6,c
  1911  0005E2  0E00               	movlw	0
  1912  0005E4  6E09               	movwf	_SysRunData+5,c
  1913                           
  1914                           ;app.c: 503: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  1915  0005E6  0E09               	movlw	9
  1916  0005E8  D765               	goto	L10
  1917                           
  1918                           ;app.c: 504: }
  1919                           ;app.c: 505: break;
  1920  0005EA  D065               	goto	l3418
  1921  0005EC                     l3380:
  1922                           
  1923                           ;app.c: 508: SysRunData.PedalRunCnt[1]++;
  1924  0005EC  4A09               	infsnz	_SysRunData+5,f,c
  1925  0005EE  2A0A               	incf	_SysRunData+6,f,c
  1926                           
  1927                           ;app.c: 509: if(SysRunData.PedalRunCnt[1] > 50)
  1928  0005F0  500A               	movf	_SysRunData+6,w,c
  1929  0005F2  E104               	bnz	u2620
  1930  0005F4  0E33               	movlw	51
  1931  0005F6  5C09               	subwf	_SysRunData+5,w,c
  1932  0005F8  A0D8               	btfss	status,0,c
  1933  0005FA  D05D               	goto	l3418
  1934  0005FC                     u2620:
  1935                           
  1936                           ;app.c: 510: {
  1937                           ;app.c: 511: if(SysRunData.ADC_Buf[0x02] > 985)
  1938  0005FC  0EDA               	movlw	218
  1939  0005FE  5C15               	subwf	_SysRunData+17,w,c
  1940  000600  0E03               	movlw	3
  1941  000602  5816               	subwfb	_SysRunData+18,w,c
  1942  000604  A0D8               	btfss	status,0,c
  1943  000606  D057               	goto	l3418
  1944                           
  1945                           ;app.c: 512: {
  1946                           ;app.c: 514: Pedal_Stop(1);
  1947  000608  0E01               	movlw	1
  1948  00060A  EC83  F008         	call	_Pedal_Stop
  1949                           
  1950                           ;app.c: 515: SysRunData.PedalRunCnt[1] = 0;
  1951  00060E  0E00               	movlw	0
  1952  000610  6E0A               	movwf	_SysRunData+6,c
  1953  000612  0E00               	movlw	0
  1954  000614  6E09               	movwf	_SysRunData+5,c
  1955                           
  1956                           ;app.c: 516: SysRunData.PedalSta[1] = PEDAL_STALL_WAIT_BACK;
  1957  000616  0E03               	movlw	3
  1958  000618  D74D               	goto	L10
  1959                           
  1960                           ;app.c: 517: }
  1961                           ;app.c: 518: }
  1962                           ;app.c: 519: break;
  1963  00061A  D04D               	goto	l3418
  1964  00061C                     l3392:
  1965                           
  1966                           ;app.c: 521: SysRunData.PedalWaitSleepCnt = 0;
  1967  00061C  0E00               	movlw	0
  1968  00061E  6E0C               	movwf	_SysRunData+8,c
  1969  000620  0E00               	movlw	0
  1970  000622  6E0B               	movwf	_SysRunData+7,c
  1971                           
  1972                           ;app.c: 522: if(++SysRunData.PedalWaitBackCnt[1] >= 1500)
  1973  000624  4A0F               	infsnz	_SysRunData+11,f,c
  1974  000626  2A10               	incf	_SysRunData+12,f,c
  1975  000628  0EDC               	movlw	220
  1976  00062A  5C0F               	subwf	_SysRunData+11,w,c
  1977  00062C  0E05               	movlw	5
  1978  00062E  5810               	subwfb	_SysRunData+12,w,c
  1979  000630  A0D8               	btfss	status,0,c
  1980  000632  D041               	goto	l3418
  1981  000634                     L15:
  1982                           
  1983                           ;app.c: 523: {
  1984                           ;app.c: 524: SysRunData.PedalWaitBackCnt[1] = 0;
  1985  000634  0E00               	movlw	0
  1986  000636  6E10               	movwf	_SysRunData+12,c
  1987  000638  0E00               	movlw	0
  1988  00063A  6E0F               	movwf	_SysRunData+11,c
  1989  00063C                     L13:
  1990                           
  1991                           ;app.c: 525: SysRunData.PedalSta[1] = PEDAL_DOWN_LIMIT;
  1992  00063C  0E01               	movlw	1
  1993  00063E  D73A               	goto	L10
  1994                           
  1995                           ;app.c: 526: }
  1996                           ;app.c: 527: break;
  1997  000640  D03A               	goto	l3418
  1998  000642                     l3398:
  1999                           
  2000                           ;app.c: 530: SysRunData.PedalRunCnt[1] = 0;
  2001  000642  0E00               	movlw	0
  2002  000644  6E0A               	movwf	_SysRunData+6,c
  2003  000646  0E00               	movlw	0
  2004  000648  6E09               	movwf	_SysRunData+5,c
  2005  00064A                     L14:
  2006                           
  2007                           ;app.c: 531: SysRunData.PedalSta[1] = PEDAL_UP_LIMIT;
  2008  00064A  0E00               	movlw	0
  2009  00064C  D733               	goto	L10
  2010  00064E                     l3400:
  2011                           
  2012                           ;app.c: 534: if(SysRunData.PedalRunCnt[1] < 350)
  2013  00064E  0E5E               	movlw	94
  2014  000650  5C09               	subwf	_SysRunData+5,w,c
  2015  000652  0E01               	movlw	1
  2016  000654  580A               	subwfb	_SysRunData+6,w,c
  2017  000656  B0D8               	btfsc	status,0,c
  2018  000658  D00A               	goto	l3408
  2019                           
  2020                           ;app.c: 535: {
  2021                           ;app.c: 536: Pedal_Back(1);
  2022  00065A  0E01               	movlw	1
  2023  00065C  ECAB  F008         	call	_Pedal_Back
  2024                           
  2025                           ;app.c: 537: SysRunData.PedalRunCnt[1]++;
  2026  000660  4A09               	infsnz	_SysRunData+5,f,c
  2027  000662  2A0A               	incf	_SysRunData+6,f,c
  2028  000664                     l3406:
  2029                           
  2030                           ;app.c: 538: SysRunData.PedalWaitSleepCnt = 0;
  2031  000664  0E00               	movlw	0
  2032  000666  6E0C               	movwf	_SysRunData+8,c
  2033  000668  0E00               	movlw	0
  2034  00066A  6E0B               	movwf	_SysRunData+7,c
  2035                           
  2036                           ;app.c: 539: }
  2037  00066C  D024               	goto	l3418
  2038  00066E                     l3408:
  2039                           
  2040                           ;app.c: 540: else
  2041                           ;app.c: 541: {
  2042                           ;app.c: 542: SysRunData.PedalSta[1] = PEDAL_ERROR_BACK_TIMEOUT;
  2043  00066E  0E09               	movlw	9
  2044  000670  6E05               	movwf	_SysRunData+1,c
  2045                           
  2046                           ;app.c: 543: Pedal_Stop(1);
  2047  000672  0E01               	movlw	1
  2048  000674  EC83  F008         	call	_Pedal_Stop
  2049  000678                     l3412:
  2050                           
  2051                           ;app.c: 544: SysRunData.PedalRunCnt[1] = 0;
  2052  000678  0E00               	movlw	0
  2053  00067A  6E0A               	movwf	_SysRunData+6,c
  2054  00067C  0E00               	movlw	0
  2055  00067E  6E09               	movwf	_SysRunData+5,c
  2056                           
  2057                           ;app.c: 549: }
  2058                           
  2059                           ;app.c: 548: break;
  2060                           
  2061                           ;app.c: 547: default:
  2062                           
  2063                           ;app.c: 545: }
  2064                           ;app.c: 546: break;
  2065  000680  D01A               	goto	l3418
  2066  000682                     l3416:
  2067  000682  5005               	movf	_SysRunData+1,w,c
  2068                           
  2069                           ; Switch size 1, requested type "space"
  2070                           ; Number of cases is 8, Range of values is 0 to 8
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte           25    13 (average)
  2074                           ;	Chosen strategy is simple_byte
  2075  000684  0A00               	xorlw	0	; case 0
  2076  000686  B4D8               	btfsc	status,2,c
  2077  000688  D74F               	goto	l3326
  2078  00068A  0A01               	xorlw	1	; case 1
  2079  00068C  B4D8               	btfsc	status,2,c
  2080  00068E  D766               	goto	l3342
  2081  000690  0A03               	xorlw	3	; case 2
  2082  000692  B4D8               	btfsc	status,2,c
  2083  000694  D73D               	goto	l3318
  2084  000696  0A01               	xorlw	1	; case 3
  2085  000698  B4D8               	btfsc	status,2,c
  2086  00069A  D7C0               	goto	l3392
  2087  00069C  0A07               	xorlw	7	; case 4
  2088  00069E  B4D8               	btfsc	status,2,c
  2089  0006A0  D7D0               	goto	l3398
  2090  0006A2  0A01               	xorlw	1	; case 5
  2091  0006A4  B4D8               	btfsc	status,2,c
  2092  0006A6  D7A2               	goto	l3380
  2093  0006A8  0A02               	xorlw	2	; case 7
  2094  0006AA  B4D8               	btfsc	status,2,c
  2095  0006AC  D7CE               	goto	L14
  2096  0006AE  0A0F               	xorlw	15	; case 8
  2097  0006B0  B4D8               	btfsc	status,2,c
  2098  0006B2  D7CD               	goto	l3400
  2099  0006B4  D000               	goto	l3418
  2100  0006B6                     l3418:
  2101                           
  2102                           ;app.c: 550: }
  2103                           ;app.c: 552: if((SysRunData.PedalSta[0] != PEDAL_STALL_WAIT_BACK) || (SysRunData.PedalSt
      +                          a[1] != PEDAL_STALL_WAIT_BACK) && (SysRunData.PedalRunCnt[0] == 0))
  2104  0006B6  0E03               	movlw	3
  2105  0006B8  1804               	xorwf	_SysRunData,w,c
  2106  0006BA  A4D8               	btfss	status,2,c
  2107  0006BC  D008               	goto	l3424
  2108  0006BE  0E03               	movlw	3
  2109  0006C0  1805               	xorwf	_SysRunData+1,w,c
  2110  0006C2  B4D8               	btfsc	status,2,c
  2111  0006C4  0012               	return	
  2112  0006C6  5007               	movf	_SysRunData+3,w,c
  2113  0006C8  1008               	iorwf	_SysRunData+4,w,c
  2114  0006CA  A4D8               	btfss	status,2,c
  2115  0006CC  0012               	return	
  2116  0006CE                     l3424:
  2117                           
  2118                           ;app.c: 553: {
  2119                           ;app.c: 554: SysNormalWaitSleep();
  2120  0006CE  EC02  F008         	call	_SysNormalWaitSleep	;wreg free
  2121  0006D2  0012               	return	
  2122  0006D4  0012               	return		;funcret
  2123  0006D6                     __end_of_Pedal_Process:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function _SysNormalWaitSleep *****************
  2140 ;; Defined at:
  2141 ;;		line 580 in file "source/app.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    7
  2162 ;; This function calls:
  2163 ;;		_App_System_Init
  2164 ;;		_SysEnterSleep
  2165 ;; This function is called by:
  2166 ;;		_Pedal_Process
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text4
  2171  001004                     __ptext4:
  2172                           	opt stack 0
  2173  001004                     _SysNormalWaitSleep:
  2174                           	opt stack 21
  2175                           
  2176                           ;app.c: 582: static uint8_t tempPedalRunFlag = 0xAA;
  2177                           ;app.c: 584: if(SysRunData.PedalRunFlag != tempPedalRunFlag)
  2178                           
  2179                           ;incstack = 0
  2180  001004  5043               	movf	SysNormalWaitSleep@tempPedalRunFlag,w,c
  2181  001006  1819               	xorwf	_SysRunData+21,w,c
  2182  001008  B4D8               	btfsc	status,2,c
  2183  00100A  D015               	goto	l2932
  2184                           
  2185                           ;app.c: 585: {
  2186                           ;app.c: 586: tempPedalRunFlag = 0xAA;
  2187  00100C  0EAA               	movlw	170
  2188  00100E  6E43               	movwf	SysNormalWaitSleep@tempPedalRunFlag,c
  2189                           
  2190                           ;app.c: 587: if(++SysRunData.PedalWaitSleepCnt > 1500)
  2191  001010  4A0B               	infsnz	_SysRunData+7,f,c
  2192  001012  2A0C               	incf	_SysRunData+8,f,c
  2193  001014  0EDD               	movlw	221
  2194  001016  5C0B               	subwf	_SysRunData+7,w,c
  2195  001018  0E05               	movlw	5
  2196  00101A  580C               	subwfb	_SysRunData+8,w,c
  2197  00101C  A0D8               	btfss	status,0,c
  2198  00101E  0012               	return	
  2199                           
  2200                           ;app.c: 588: {
  2201                           ;app.c: 589: SysRunData.PedalWaitSleepCnt = 0;
  2202  001020  0E00               	movlw	0
  2203  001022  6E0C               	movwf	_SysRunData+8,c
  2204  001024  0E00               	movlw	0
  2205  001026  6E0B               	movwf	_SysRunData+7,c
  2206                           
  2207                           ;app.c: 590: tempPedalRunFlag = SysRunData.PedalRunFlag;
  2208  001028  C019  F043         	movff	_SysRunData+21,SysNormalWaitSleep@tempPedalRunFlag
  2209                           
  2210                           ;app.c: 591: SysEnterSleep();
  2211  00102C  ECA8  F007         	call	_SysEnterSleep	;wreg free
  2212                           
  2213                           ;app.c: 592: App_System_Init();
  2214  001030  EC74  F007         	call	_App_System_Init	;wreg free
  2215                           
  2216                           ;app.c: 593: }
  2217                           ;app.c: 594: }
  2218  001034  0012               	return	
  2219  001036                     l2932:
  2220                           
  2221                           ;app.c: 595: else
  2222                           ;app.c: 596: {
  2223                           ;app.c: 597: SysEnterSleep();
  2224  001036  ECA8  F007         	call	_SysEnterSleep	;wreg free
  2225                           
  2226                           ;app.c: 598: App_System_Init();
  2227  00103A  EC74  F007         	call	_App_System_Init	;wreg free
  2228  00103E  0012               	return	
  2229  001040  0012               	return		;funcret
  2230  001042                     __end_of_SysNormalWaitSleep:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodh	equ	0xFF4
  2237                           prodl	equ	0xFF3
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           indf2	equ	0xFDF
  2241                           postinc2	equ	0xFDE
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8
  2245                           
  2246 ;; *************** function _SysEnterSleep *****************
  2247 ;; Defined at:
  2248 ;;		line 609 in file "source/app.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;		None               void
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    5
  2269 ;; This function calls:
  2270 ;;		_ADC_Cmd
  2271 ;;		_CAN_SetMode
  2272 ;; This function is called by:
  2273 ;;		_SysNormalWaitSleep
  2274 ;;		_main
  2275 ;;		_SysErrorWaitSleep
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text5
  2280  000F50                     __ptext5:
  2281                           	opt stack 0
  2282  000F50                     _SysEnterSleep:
  2283                           	opt stack 25
  2284                           
  2285                           ;app.c: 611: CAN_SetMode(1);
  2286                           
  2287                           ;incstack = 0
  2288  000F50  0E01               	movlw	1
  2289  000F52  ECFF  F008         	call	_CAN_SetMode
  2290                           
  2291                           ;app.c: 612: ADC_Cmd(0x00,0);
  2292  000F56  0E00               	movlw	0
  2293  000F58  0100               	movlb	0	; () banked
  2294  000F5A  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2295  000F5C  0E00               	movlw	0
  2296  000F5E  EC57  F008         	call	_ADC_Cmd
  2297                           
  2298                           ;app.c: 613: ADC_Cmd(0x01,0);
  2299  000F62  0E00               	movlw	0
  2300  000F64  0100               	movlb	0	; () banked
  2301  000F66  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2302  000F68  0E01               	movlw	1
  2303  000F6A  EC57  F008         	call	_ADC_Cmd
  2304                           
  2305                           ;app.c: 614: SysRunData.PedalRunCnt[0] = 0;
  2306  000F6E  0E00               	movlw	0
  2307  000F70  6E08               	movwf	_SysRunData+4,c
  2308  000F72  0E00               	movlw	0
  2309  000F74  6E07               	movwf	_SysRunData+3,c
  2310                           
  2311                           ;app.c: 615: SysRunData.PedalRunCnt[1] = 0;
  2312  000F76  0E00               	movlw	0
  2313  000F78  6E0A               	movwf	_SysRunData+6,c
  2314  000F7A  0E00               	movlw	0
  2315  000F7C  6E09               	movwf	_SysRunData+5,c
  2316                           
  2317                           ;app.c: 616: SysRunData.PedalWaitSleepCnt = 0;
  2318  000F7E  0E00               	movlw	0
  2319  000F80  6E0C               	movwf	_SysRunData+8,c
  2320  000F82  0E00               	movlw	0
  2321  000F84  6E0B               	movwf	_SysRunData+7,c
  2322                           
  2323                           ;app.c: 617: PIR5bits.WAKIF = 0;
  2324  000F86  9C77               	bcf	3959,6,c	;volatile
  2325                           
  2326                           ;app.c: 618: PIE5bits.WAKIE = 1;
  2327  000F88  8C76               	bsf	3958,6,c	;volatile
  2328                           
  2329                           ;app.c: 619: IPR5bits.WAKIP = 1;
  2330  000F8A  8C78               	bsf	3960,6,c	;volatile
  2331                           
  2332                           ;app.c: 620: CANCON = 0x20;
  2333  000F8C  0E20               	movlw	32
  2334  000F8E  6E6F               	movwf	3951,c	;volatile
  2335                           
  2336                           ;app.c: 621: while(CANSTATbits.OPMODE !=0x01);
  2337  000F90  D000               	goto	l2894
  2338  000F92                     l2894:
  2339  000F92  386E               	swapf	3950,w,c	;volatile
  2340  000F94  32E8               	rrcf	wreg,f,c
  2341  000F96  0B07               	andlw	7
  2342  000F98  06E8               	decf	wreg,f,c
  2343  000F9A  A4D8               	btfss	status,2,c
  2344  000F9C  D7FA               	goto	l2894
  2345                           
  2346                           ;app.c: 622: OSCCONbits.IDLEN = 0;
  2347  000F9E  9ED3               	bcf	4051,7,c	;volatile
  2348  000FA0  0003               	sleep		;# 
  2349                           
  2350                           ;app.c: 624: _delay((unsigned long)((150)*(32000000UL/4000000.0)));
  2351  000FA2  0EF0               	movlw	240
  2352  000FA4                     u2827:
  2353  000FA4  D000               	nop2	
  2354  000FA6  2EE8               	decfsz	wreg,f,c
  2355  000FA8  D7FD               	goto	u2827
  2356  000FAA  0012               	return		;funcret
  2357  000FAC                     __end_of_SysEnterSleep:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           prodh	equ	0xFF4
  2364                           prodl	equ	0xFF3
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _App_System_Init *****************
  2374 ;; Defined at:
  2375 ;;		line 43 in file "source/app.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    6
  2396 ;; This function calls:
  2397 ;;		_ADC_Cmd
  2398 ;;		_ADC_Init
  2399 ;;		_CAN_SetMode
  2400 ;;		_ConfigTimer0
  2401 ;;		_ECAN_Init
  2402 ;;		_PORT_Init
  2403 ;;		_RLY_Init
  2404 ;;		_SetSysClock
  2405 ;;		_bsp_StartAutoTimer
  2406 ;; This function is called by:
  2407 ;;		_SysNormalWaitSleep
  2408 ;;		_main
  2409 ;;		_SysErrorWaitSleep
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text6
  2414  000EE8                     __ptext6:
  2415                           	opt stack 0
  2416  000EE8                     _App_System_Init:
  2417                           	opt stack 24
  2418                           
  2419                           ;app.c: 46: RCONbits.IPEN = 1;;
  2420                           
  2421                           ;incstack = 0
  2422  000EE8  8ED0               	bsf	4048,7,c	;volatile
  2423                           
  2424                           ;app.c: 48: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  2425  000EEA  8EF2               	bsf	intcon,7,c	;volatile
  2426  000EEC  8CF2               	bsf	intcon,6,c	;volatile
  2427                           
  2428                           ;app.c: 50: SetSysClock();
  2429  000EEE  EC0B  F009         	call	_SetSysClock	;wreg free
  2430                           
  2431                           ;app.c: 52: ADC_Init();
  2432  000EF2  ECBF  F008         	call	_ADC_Init	;wreg free
  2433                           
  2434                           ;app.c: 53: ECAN_Init();
  2435  000EF6  EC22  F006         	call	_ECAN_Init	;wreg free
  2436                           
  2437                           ;app.c: 54: RLY_Init();
  2438  000EFA  ECD2  F008         	call	_RLY_Init	;wreg free
  2439                           
  2440                           ;app.c: 55: PORT_Init();
  2441  000EFE  EC0E  F009         	call	_PORT_Init	;wreg free
  2442                           
  2443                           ;app.c: 57: ConfigTimer0(1);
  2444  000F02  0E00               	movlw	0
  2445  000F04  0100               	movlb	0	; () banked
  2446  000F06  6FCF               	movwf	(ConfigTimer0@ms+1)& (0+255),b
  2447  000F08  0E01               	movlw	1
  2448  000F0A  6FCE               	movwf	ConfigTimer0@ms& (0+255),b
  2449  000F0C  ECF1  F004         	call	_ConfigTimer0	;wreg free
  2450                           
  2451                           ;app.c: 59: CAN_SetMode(0);
  2452  000F10  0E00               	movlw	0
  2453  000F12  ECFF  F008         	call	_CAN_SetMode
  2454                           
  2455                           ;app.c: 61: ADC_Cmd(0x00,1);
  2456  000F16  0E01               	movlw	1
  2457  000F18  0100               	movlb	0	; () banked
  2458  000F1A  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2459  000F1C  0E00               	movlw	0
  2460  000F1E  EC57  F008         	call	_ADC_Cmd
  2461                           
  2462                           ;app.c: 62: ADC_Cmd(0x01,1);
  2463  000F22  0E01               	movlw	1
  2464  000F24  0100               	movlb	0	; () banked
  2465  000F26  6FB5               	movwf	ADC_Cmd@sta& (0+255),b
  2466  000F28  0E01               	movlw	1
  2467  000F2A  EC57  F008         	call	_ADC_Cmd
  2468                           
  2469                           ;app.c: 64: bsp_StartAutoTimer(1,10);
  2470  000F2E  0E00               	movlw	0
  2471  000F30  0100               	movlb	0	; () banked
  2472  000F32  6FB6               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  2473  000F34  0E0A               	movlw	10
  2474  000F36  6FB5               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  2475  000F38  0E01               	movlw	1
  2476  000F3A  EC76  F006         	call	_bsp_StartAutoTimer
  2477                           
  2478                           ;app.c: 65: bsp_StartAutoTimer(0,1);
  2479  000F3E  0E00               	movlw	0
  2480  000F40  0100               	movlb	0	; () banked
  2481  000F42  6FB6               	movwf	(bsp_StartAutoTimer@_period+1)& (0+255),b
  2482  000F44  0E01               	movlw	1
  2483  000F46  6FB5               	movwf	bsp_StartAutoTimer@_period& (0+255),b
  2484  000F48  0E00               	movlw	0
  2485  000F4A  EC76  F006         	call	_bsp_StartAutoTimer
  2486  000F4E  0012               	return		;funcret
  2487  000F50                     __end_of_App_System_Init:
  2488                           	opt stack 0
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           prodh	equ	0xFF4
  2494                           prodl	equ	0xFF3
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           fsr2h	equ	0xFDA
  2501                           fsr2l	equ	0xFD9
  2502                           status	equ	0xFD8
  2503                           
  2504 ;; *************** function _bsp_StartAutoTimer *****************
  2505 ;; Defined at:
  2506 ;;		line 98 in file "source/timer.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  _id             1    wreg     unsigned char 
  2509 ;;  _period         2   14[BANK0 ] unsigned int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  _id             1   16[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;		None               void
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;Total ram usage:        3 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    4
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_App_System_Init
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text7
  2536  000CEC                     __ptext7:
  2537                           	opt stack 0
  2538  000CEC                     _bsp_StartAutoTimer:
  2539                           	opt stack 25
  2540                           
  2541                           ;incstack = 0
  2542                           ;bsp_StartAutoTimer@_id stored from wreg
  2543  000CEC  0100               	movlb	0	; () banked
  2544  000CEE  6FB7               	movwf	bsp_StartAutoTimer@_id& (0+255),b
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;timer.c: 100: if (_id >= 2)
  2548  000CF0  0E01               	movlw	1
  2549  000CF2  0100               	movlb	0	; () banked
  2550  000CF4  65B7               	cpfsgt	bsp_StartAutoTimer@_id& (0+255),b
  2551  000CF6  D001               	goto	l514
  2552  000CF8                     
  2553                           ; BSR set to: 0
  2554  000CF8  D7FF               	goto	l516
  2555  000CFA                     l514:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;timer.c: 105: }
  2559                           ;timer.c: 107: INTCONbits.GIE = 0;INTCONbits.PEIE = 0;;
  2560  000CFA  9EF2               	bcf	intcon,7,c	;volatile
  2561  000CFC  9CF2               	bcf	intcon,6,c	;volatile
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;timer.c: 109: s_tTmr[_id].Count = _period;
  2565  000CFE  0100               	movlb	0	; () banked
  2566  000D00  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2567  000D02  0D06               	mullw	6
  2568  000D04  0E02               	movlw	2
  2569  000D06  26F3               	addwf	prodl,f,c
  2570  000D08  0E00               	movlw	0
  2571  000D0A  22F4               	addwfc	prodh,f,c
  2572  000D0C  0E1A               	movlw	low _s_tTmr
  2573  000D0E  24F3               	addwf	prodl,w,c
  2574  000D10  6ED9               	movwf	fsr2l,c
  2575  000D12  0E00               	movlw	high _s_tTmr
  2576  000D14  20F4               	addwfc	prodh,w,c
  2577  000D16  6EDA               	movwf	fsr2h,c
  2578  000D18  C0B5  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  2579  000D1C  C0B6  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  2580                           
  2581                           ;timer.c: 110: s_tTmr[_id].PreLoad = _period;
  2582  000D20  0100               	movlb	0	; () banked
  2583  000D22  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2584  000D24  0D06               	mullw	6
  2585  000D26  0E04               	movlw	4
  2586  000D28  26F3               	addwf	prodl,f,c
  2587  000D2A  0E00               	movlw	0
  2588  000D2C  22F4               	addwfc	prodh,f,c
  2589  000D2E  0E1A               	movlw	low _s_tTmr
  2590  000D30  24F3               	addwf	prodl,w,c
  2591  000D32  6ED9               	movwf	fsr2l,c
  2592  000D34  0E00               	movlw	high _s_tTmr
  2593  000D36  20F4               	addwfc	prodh,w,c
  2594  000D38  6EDA               	movwf	fsr2h,c
  2595  000D3A  C0B5  FFDE         	movff	bsp_StartAutoTimer@_period,postinc2
  2596  000D3E  C0B6  FFDD         	movff	bsp_StartAutoTimer@_period+1,postdec2
  2597                           
  2598                           ;timer.c: 111: s_tTmr[_id].Flag = 0;
  2599  000D42  0100               	movlb	0	; () banked
  2600  000D44  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2601  000D46  0D06               	mullw	6
  2602  000D48  0E01               	movlw	1
  2603  000D4A  26F3               	addwf	prodl,f,c
  2604  000D4C  0E00               	movlw	0
  2605  000D4E  22F4               	addwfc	prodh,f,c
  2606  000D50  0E1A               	movlw	low _s_tTmr
  2607  000D52  24F3               	addwf	prodl,w,c
  2608  000D54  6ED9               	movwf	fsr2l,c
  2609  000D56  0E00               	movlw	high _s_tTmr
  2610  000D58  20F4               	addwfc	prodh,w,c
  2611  000D5A  6EDA               	movwf	fsr2h,c
  2612  000D5C  0E00               	movlw	0
  2613  000D5E  6EDF               	movwf	indf2,c
  2614                           
  2615                           ;timer.c: 112: s_tTmr[_id].Mode = TMR_AUTO_MODE;
  2616  000D60  0100               	movlb	0	; () banked
  2617  000D62  51B7               	movf	bsp_StartAutoTimer@_id& (0+255),w,b
  2618  000D64  0D06               	mullw	6
  2619  000D66  0E1A               	movlw	low _s_tTmr
  2620  000D68  24F3               	addwf	prodl,w,c
  2621  000D6A  6ED9               	movwf	fsr2l,c
  2622  000D6C  0E00               	movlw	high _s_tTmr
  2623  000D6E  20F4               	addwfc	prodh,w,c
  2624  000D70  6EDA               	movwf	fsr2h,c
  2625  000D72  0E01               	movlw	1
  2626  000D74  6EDF               	movwf	indf2,c
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;timer.c: 114: INTCONbits.GIE = 1;INTCONbits.PEIE = 1;;
  2630  000D76  8EF2               	bsf	intcon,7,c	;volatile
  2631                           
  2632                           ; BSR set to: 0
  2633  000D78  8CF2               	bsf	intcon,6,c	;volatile
  2634                           
  2635                           ; BSR set to: 0
  2636  000D7A  0012               	return		;funcret
  2637  000D7C                     __end_of_bsp_StartAutoTimer:
  2638                           	opt stack 0
  2639                           tblptru	equ	0xFF8
  2640                           tblptrh	equ	0xFF7
  2641                           tblptrl	equ	0xFF6
  2642                           tablat	equ	0xFF5
  2643                           prodh	equ	0xFF4
  2644                           prodl	equ	0xFF3
  2645                           intcon	equ	0xFF2
  2646                           postinc0	equ	0xFEE
  2647                           wreg	equ	0xFE8
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _SetSysClock *****************
  2656 ;; Defined at:
  2657 ;;		line 566 in file "source/app.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		None
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_App_System_Init
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text8
  2686  001216                     __ptext8:
  2687                           	opt stack 0
  2688  001216                     _SetSysClock:
  2689                           	opt stack 25
  2690                           
  2691                           ;app.c: 569: OSCTUNEbits.PLLEN = 1;
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;incstack = 0
  2695  001216  8C9B               	bsf	3995,6,c	;volatile
  2696  001218  0012               	return		;funcret
  2697  00121A                     __end_of_SetSysClock:
  2698                           	opt stack 0
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           prodh	equ	0xFF4
  2704                           prodl	equ	0xFF3
  2705                           intcon	equ	0xFF2
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           postdec2	equ	0xFDD
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _RLY_Init *****************
  2716 ;; Defined at:
  2717 ;;		line 11 in file "source/rly.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;		None               void
  2724 ;; Registers used:
  2725 ;;		None
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    4
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_App_System_Init
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text9
  2746  0011A4                     __ptext9:
  2747                           	opt stack 0
  2748  0011A4                     _RLY_Init:
  2749                           	opt stack 25
  2750                           
  2751                           ;incstack = 0
  2752                           ;rly.c: 13: do { LATC1 = 0; } while(0);
  2753  0011A4  928B               	bcf	3979,1,c	;volatile
  2754  0011A6  D000               	goto	l558
  2755  0011A8                     l558:
  2756  0011A8  908B               	bcf	3979,0,c	;volatile
  2757  0011AA  D000               	goto	l560
  2758  0011AC                     l560:
  2759  0011AC  9E8B               	bcf	3979,7,c	;volatile
  2760  0011AE  D000               	goto	l562
  2761  0011B0                     l562:
  2762  0011B0  988B               	bcf	3979,4,c	;volatile
  2763  0011B2  D000               	goto	l564
  2764  0011B4                     l564:
  2765  0011B4  9294               	bcf	3988,1,c	;volatile
  2766  0011B6  D000               	goto	l566
  2767  0011B8                     l566:
  2768  0011B8  9094               	bcf	3988,0,c	;volatile
  2769  0011BA  D000               	goto	l568
  2770  0011BC                     l568:
  2771  0011BC  9E94               	bcf	3988,7,c	;volatile
  2772  0011BE  D000               	goto	l570
  2773  0011C0                     l570:
  2774  0011C0  9894               	bcf	3988,4,c	;volatile
  2775  0011C2  0012               	return	
  2776  0011C4  0012               	return		;funcret
  2777  0011C6                     __end_of_RLY_Init:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           intcon	equ	0xFF2
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           indf2	equ	0xFDF
  2789                           postinc2	equ	0xFDE
  2790                           postdec2	equ	0xFDD
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _PORT_Init *****************
  2796 ;; Defined at:
  2797 ;;		line 768 in file "source/app.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		None
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    4
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_App_System_Init
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text10
  2826  00121C                     __ptext10:
  2827                           	opt stack 0
  2828  00121C                     _PORT_Init:
  2829                           	opt stack 25
  2830                           
  2831                           ;incstack = 0
  2832  00121C  0012               	return		;funcret
  2833  00121E                     __end_of_PORT_Init:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _ECAN_Init *****************
  2852 ;; Defined at:
  2853 ;;		line 31 in file "source/ecan.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    4
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_App_System_Init
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text11
  2882  000C44                     __ptext11:
  2883                           	opt stack 0
  2884  000C44                     _ECAN_Init:
  2885                           	opt stack 25
  2886                           
  2887                           ;incstack = 0
  2888                           ;ecan.c: 33: do { TRISB5 = 0; } while(0);
  2889  000C44  9A93               	bcf	3987,5,c	;volatile
  2890  000C46  D000               	goto	l417
  2891  000C48                     l417:
  2892  000C48  9493               	bcf	3987,2,c	;volatile
  2893  000C4A  D000               	goto	l419
  2894  000C4C                     l419:
  2895  000C4C  8693               	bsf	3987,3,c	;volatile
  2896  000C4E  D000               	goto	l1262
  2897  000C50                     l1262:
  2898                           
  2899                           ;ecan.c: 37: CANCON = 0x80;
  2900  000C50  0E80               	movlw	128
  2901  000C52  6E6F               	movwf	3951,c	;volatile
  2902                           
  2903                           ;ecan.c: 38: while(!(CANSTATbits.OPMODE ==0x04));
  2904  000C54  D000               	goto	l1264
  2905  000C56                     l1264:
  2906  000C56  386E               	swapf	3950,w,c	;volatile
  2907  000C58  32E8               	rrcf	wreg,f,c
  2908  000C5A  0B07               	andlw	7
  2909  000C5C  0A04               	xorlw	4
  2910  000C5E  A4D8               	btfss	status,2,c
  2911  000C60  D7FA               	goto	l1264
  2912                           
  2913                           ;ecan.c: 40: ECANCON = 0x00;
  2914  000C62  0E00               	movlw	0
  2915  000C64  6E72               	movwf	3954,c	;volatile
  2916                           
  2917                           ;ecan.c: 48: if (0==1)
  2918  000C66  D005               	goto	l1272
  2919                           
  2920                           ;ecan.c: 49: {
  2921                           ;ecan.c: 51: BRGCON1 = 0x13;
  2922  000C68  0E13               	movlw	19
  2923  000C6A  D007               	goto	L19
  2924                           
  2925                           ; BSR set to: 14
  2926                           ;ecan.c: 55: else if (0==1)
  2927                           
  2928                           ;ecan.c: 54: }
  2929                           
  2930                           ;ecan.c: 53: BRGCON3 = 0x02;
  2931                           
  2932                           ;ecan.c: 52: BRGCON2 = 0x90;
  2933  000C6C  D002               	goto	l1272
  2934                           
  2935                           ; BSR set to: 14
  2936                           ;ecan.c: 56: {
  2937                           ;ecan.c: 58: BRGCON1 = 0x0F;
  2938  000C6E  0E0F               	movlw	15
  2939  000C70  D004               	goto	L19
  2940  000C72                     l1272:
  2941                           
  2942                           ;ecan.c: 63: {
  2943                           ;ecan.c: 65: BRGCON1 = 0x03;
  2944  000C72  0E03               	movlw	3
  2945  000C74  D002               	goto	L19
  2946                           
  2947                           ; BSR set to: 14
  2948                           ;ecan.c: 69: else if (0==1)
  2949                           
  2950                           ;ecan.c: 68: }
  2951                           
  2952                           ;ecan.c: 67: BRGCON3 = 0x02;
  2953                           
  2954                           ;ecan.c: 66: BRGCON2 = 0x90;
  2955  000C76  D00A               	goto	l425
  2956                           
  2957                           ; BSR set to: 14
  2958                           ;ecan.c: 70: {
  2959                           ;ecan.c: 72: BRGCON1 = 0x01;
  2960  000C78  0E01               	movlw	1
  2961  000C7A                     L19:
  2962  000C7A  010E               	movlb	14	; () banked
  2963  000C7C  6F43               	movwf	67,b	;volatile
  2964                           
  2965                           ;ecan.c: 73: BRGCON2 = 0x90;
  2966  000C7E  0E90               	movlw	144
  2967  000C80  010E               	movlb	14	; () banked
  2968  000C82  6F44               	movwf	68,b	;volatile
  2969                           
  2970                           ;ecan.c: 74: BRGCON3 = 0x02;
  2971  000C84  0E02               	movlw	2
  2972  000C86  010E               	movlb	14	; () banked
  2973  000C88  6F45               	movwf	69,b	;volatile
  2974                           
  2975                           ; BSR set to: 14
  2976                           
  2977                           ; BSR set to: 14
  2978  000C8A  D000               	goto	l425
  2979  000C8C                     l425:
  2980                           
  2981                           ; BSR set to: 14
  2982                           ;ecan.c: 75: }
  2983                           ;ecan.c: 78: RXM0EIDH = 0x00;
  2984  000C8C  0E00               	movlw	0
  2985  000C8E  010E               	movlb	14	; () banked
  2986  000C90  6FFA               	movwf	250,b	;volatile
  2987                           
  2988                           ;ecan.c: 79: RXM0EIDL = 0x00;
  2989  000C92  0E00               	movlw	0
  2990  000C94  010E               	movlb	14	; () banked
  2991  000C96  6FFB               	movwf	251,b	;volatile
  2992                           
  2993                           ; BSR set to: 14
  2994                           ;ecan.c: 80: RXM0SIDH = 0xFF;
  2995  000C98  010E               	movlb	14	; () banked
  2996  000C9A  69F8               	setf	248,b	;volatile
  2997                           
  2998                           ;ecan.c: 81: RXM0SIDL = 0xE0;
  2999  000C9C  0EE0               	movlw	224
  3000  000C9E  010E               	movlb	14	; () banked
  3001  000CA0  6FF9               	movwf	249,b	;volatile
  3002                           
  3003                           ;ecan.c: 86: RXFCON0 = 0x01;
  3004  000CA2  0E01               	movlw	1
  3005  000CA4  010E               	movlb	14	; () banked
  3006  000CA6  6F46               	movwf	70,b	;volatile
  3007                           
  3008                           ;ecan.c: 87: RXFCON1 = 0x00;
  3009  000CA8  0E00               	movlw	0
  3010  000CAA  010E               	movlb	14	; () banked
  3011  000CAC  6F47               	movwf	71,b	;volatile
  3012                           
  3013                           ;ecan.c: 92: RXF0EIDH = 0x00;
  3014  000CAE  0E00               	movlw	0
  3015  000CB0  010E               	movlb	14	; () banked
  3016  000CB2  6FE2               	movwf	226,b	;volatile
  3017                           
  3018                           ;ecan.c: 93: RXF0EIDL = 0x00;
  3019  000CB4  0E00               	movlw	0
  3020  000CB6  010E               	movlb	14	; () banked
  3021  000CB8  6FE3               	movwf	227,b	;volatile
  3022                           
  3023                           ;ecan.c: 94: RXF0SIDH = (uint8_t)(0X110>>3);
  3024  000CBA  0E22               	movlw	34
  3025  000CBC  010E               	movlb	14	; () banked
  3026  000CBE  6FE0               	movwf	224,b	;volatile
  3027                           
  3028                           ;ecan.c: 95: RXF0SIDL = (uint8_t)(0X110<<5)&0xE0;
  3029  000CC0  0E00               	movlw	0
  3030  000CC2  010E               	movlb	14	; () banked
  3031  000CC4  6FE1               	movwf	225,b	;volatile
  3032                           
  3033                           ;ecan.c: 107: TXB0CON=0X03;
  3034  000CC6  0E03               	movlw	3
  3035  000CC8  010F               	movlb	15	; () banked
  3036  000CCA  6F20               	movwf	32,b	;volatile
  3037                           
  3038                           ;ecan.c: 108: RXB0CON = 0x20;
  3039  000CCC  0E20               	movlw	32
  3040  000CCE  6E60               	movwf	3936,c	;volatile
  3041                           
  3042                           ;ecan.c: 112: CANCON = 0x00;
  3043  000CD0  0E00               	movlw	0
  3044  000CD2  6E6F               	movwf	3951,c	;volatile
  3045                           
  3046                           ; BSR set to: 15
  3047                           
  3048                           ;ecan.c: 113: while(CANSTATbits.OPMODE==0x00);
  3049  000CD4  D000               	goto	l1278
  3050  000CD6                     l1278:
  3051  000CD6  386E               	swapf	3950,w,c	;volatile
  3052  000CD8  32E8               	rrcf	wreg,f,c
  3053  000CDA  0B07               	andlw	7
  3054  000CDC  0900               	iorlw	0
  3055  000CDE  B4D8               	btfsc	status,2,c
  3056  000CE0  D7FA               	goto	l1278
  3057                           
  3058                           ;ecan.c: 115: PIR5=0X00;
  3059  000CE2  0E00               	movlw	0
  3060  000CE4  6E77               	movwf	3959,c	;volatile
  3061                           
  3062                           ;ecan.c: 116: PIE5bits.RXB0IE = 1;
  3063  000CE6  8076               	bsf	3958,0,c	;volatile
  3064                           
  3065                           ;ecan.c: 117: IPR5bits.RXB0IP = 1;
  3066  000CE8  8078               	bsf	3960,0,c	;volatile
  3067  000CEA  0012               	return		;funcret
  3068  000CEC                     __end_of_ECAN_Init:
  3069                           	opt stack 0
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           wreg	equ	0xFE8
  3079                           indf2	equ	0xFDF
  3080                           postinc2	equ	0xFDE
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _ConfigTimer0 *****************
  3087 ;; Defined at:
  3088 ;;		line 16 in file "source/timer.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  ms              2   39[BANK0 ] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  tmp             4   45[BANK0 ] unsigned long 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;Total ram usage:       10 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    5
  3109 ;; This function calls:
  3110 ;;		___lldiv
  3111 ;;		___lmul
  3112 ;; This function is called by:
  3113 ;;		_App_System_Init
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text12
  3118  0009E2                     __ptext12:
  3119                           	opt stack 0
  3120  0009E2                     _ConfigTimer0:
  3121                           	opt stack 24
  3122                           
  3123                           ;timer.c: 18: uint32_t tmp;
  3124                           ;timer.c: 20: T0CON = 0X02;
  3125                           
  3126                           ;incstack = 0
  3127  0009E2  0E02               	movlw	2
  3128  0009E4  6ED5               	movwf	4053,c	;volatile
  3129                           
  3130                           ;timer.c: 21: T0CONbits.T08BIT = 0;
  3131  0009E6  9CD5               	bcf	4053,6,c	;volatile
  3132                           
  3133                           ;timer.c: 22: tmp = 32000000UL/4/8;
  3134  0009E8  0E40               	movlw	64
  3135  0009EA  0100               	movlb	0	; () banked
  3136  0009EC  6FD4               	movwf	ConfigTimer0@tmp& (0+255),b
  3137  0009EE  0E42               	movlw	66
  3138  0009F0  6FD5               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  3139  0009F2  0E0F               	movlw	15
  3140  0009F4  6FD6               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  3141  0009F6  0E00               	movlw	0
  3142  0009F8  6FD7               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;timer.c: 23: tmp = (tmp * ms)/1000;
  3146  0009FA  C0CE  F0B5         	movff	ConfigTimer0@ms,___lmul@multiplier
  3147  0009FE  C0CF  F0B6         	movff	ConfigTimer0@ms+1,___lmul@multiplier+1
  3148  000A02  0100               	movlb	0	; () banked
  3149  000A04  6BB7               	clrf	(___lmul@multiplier+2)& (0+255),b
  3150  000A06  6BB8               	clrf	(___lmul@multiplier+3)& (0+255),b
  3151  000A08  C0D4  F0B9         	movff	ConfigTimer0@tmp,___lmul@multiplicand
  3152  000A0C  C0D5  F0BA         	movff	ConfigTimer0@tmp+1,___lmul@multiplicand+1
  3153  000A10  C0D6  F0BB         	movff	ConfigTimer0@tmp+2,___lmul@multiplicand+2
  3154  000A14  C0D7  F0BC         	movff	ConfigTimer0@tmp+3,___lmul@multiplicand+3
  3155  000A18  ECFF  F006         	call	___lmul	;wreg free
  3156  000A1C  C0B5  F0C1         	movff	?___lmul,___lldiv@dividend
  3157  000A20  C0B6  F0C2         	movff	?___lmul+1,___lldiv@dividend+1
  3158  000A24  C0B7  F0C3         	movff	?___lmul+2,___lldiv@dividend+2
  3159  000A28  C0B8  F0C4         	movff	?___lmul+3,___lldiv@dividend+3
  3160  000A2C  0EE8               	movlw	232
  3161  000A2E  0100               	movlb	0	; () banked
  3162  000A30  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3163  000A32  0E03               	movlw	3
  3164  000A34  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3165  000A36  0E00               	movlw	0
  3166  000A38  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3167  000A3A  0E00               	movlw	0
  3168  000A3C  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3169  000A3E  EC5C  F005         	call	___lldiv	;wreg free
  3170  000A42  C0C1  F0D4         	movff	?___lldiv,ConfigTimer0@tmp
  3171  000A46  C0C2  F0D5         	movff	?___lldiv+1,ConfigTimer0@tmp+1
  3172  000A4A  C0C3  F0D6         	movff	?___lldiv+2,ConfigTimer0@tmp+2
  3173  000A4E  C0C4  F0D7         	movff	?___lldiv+3,ConfigTimer0@tmp+3
  3174                           
  3175                           ;timer.c: 24: tmp = 65536 - tmp;
  3176  000A52  C0D4  F0D0         	movff	ConfigTimer0@tmp,??_ConfigTimer0
  3177  000A56  C0D5  F0D1         	movff	ConfigTimer0@tmp+1,??_ConfigTimer0+1
  3178  000A5A  C0D6  F0D2         	movff	ConfigTimer0@tmp+2,??_ConfigTimer0+2
  3179  000A5E  C0D7  F0D3         	movff	ConfigTimer0@tmp+3,??_ConfigTimer0+3
  3180  000A62  0100               	movlb	0	; () banked
  3181  000A64  1FD0               	comf	??_ConfigTimer0& (0+255),f,b
  3182  000A66  1FD1               	comf	(??_ConfigTimer0+1)& (0+255),f,b
  3183  000A68  1FD2               	comf	(??_ConfigTimer0+2)& (0+255),f,b
  3184  000A6A  1FD3               	comf	(??_ConfigTimer0+3)& (0+255),f,b
  3185  000A6C  2BD0               	incf	??_ConfigTimer0& (0+255),f,b
  3186  000A6E  0E00               	movlw	0
  3187  000A70  23D1               	addwfc	(??_ConfigTimer0+1)& (0+255),f,b
  3188  000A72  23D2               	addwfc	(??_ConfigTimer0+2)& (0+255),f,b
  3189  000A74  23D3               	addwfc	(??_ConfigTimer0+3)& (0+255),f,b
  3190  000A76  0E00               	movlw	0
  3191  000A78  0100               	movlb	0	; () banked
  3192  000A7A  25D0               	addwf	??_ConfigTimer0& (0+255),w,b
  3193  000A7C  0100               	movlb	0	; () banked
  3194  000A7E  6FD4               	movwf	ConfigTimer0@tmp& (0+255),b
  3195  000A80  0E00               	movlw	0
  3196  000A82  0100               	movlb	0	; () banked
  3197  000A84  21D1               	addwfc	(??_ConfigTimer0+1)& (0+255),w,b
  3198  000A86  0100               	movlb	0	; () banked
  3199  000A88  6FD5               	movwf	(ConfigTimer0@tmp+1)& (0+255),b
  3200  000A8A  0E01               	movlw	1
  3201  000A8C  0100               	movlb	0	; () banked
  3202  000A8E  21D2               	addwfc	(??_ConfigTimer0+2)& (0+255),w,b
  3203  000A90  0100               	movlb	0	; () banked
  3204  000A92  6FD6               	movwf	(ConfigTimer0@tmp+2)& (0+255),b
  3205  000A94  0E00               	movlw	0
  3206  000A96  0100               	movlb	0	; () banked
  3207  000A98  21D3               	addwfc	(??_ConfigTimer0+3)& (0+255),w,b
  3208  000A9A  0100               	movlb	0	; () banked
  3209  000A9C  6FD7               	movwf	(ConfigTimer0@tmp+3)& (0+255),b
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;timer.c: 25: T0RH = (uint8_t)(tmp>>8);
  3213  000A9E  C0D5  F002         	movff	ConfigTimer0@tmp+1,_T0RH
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;timer.c: 26: T0RL = (uint8_t)tmp;
  3217  000AA2  C0D4  F003         	movff	ConfigTimer0@tmp,_T0RL
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;timer.c: 27: T0CONbits.TMR0ON = 1;
  3221  000AA6  8ED5               	bsf	4053,7,c	;volatile
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;timer.c: 28: TMR0H = T0RH;
  3225  000AA8  C002  FFD7         	movff	_T0RH,4055	;volatile
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;timer.c: 29: TMR0L = T0RL;
  3229  000AAC  C003  FFD6         	movff	_T0RL,4054	;volatile
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;timer.c: 30: INTCONbits.TMR0IF = 0;
  3233  000AB0  94F2               	bcf	intcon,2,c	;volatile
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;timer.c: 31: INTCONbits.TMR0IE = 1;
  3237  000AB2  8AF2               	bsf	intcon,5,c	;volatile
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;timer.c: 32: INTCON2bits.TMR0IP = 0;
  3241  000AB4  94F1               	bcf	intcon2,2,c	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244  000AB6  0012               	return		;funcret
  3245  000AB8                     __end_of_ConfigTimer0:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           intcon2	equ	0xFF1
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           indf2	equ	0xFDF
  3258                           postinc2	equ	0xFDE
  3259                           postdec2	equ	0xFDD
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function ___lmul *****************
  3265 ;; Defined at:
  3266 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  multiplier      4   14[BANK0 ] unsigned long 
  3269 ;;  multiplicand    4   18[BANK0 ] unsigned long 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  product         4   22[BANK0 ] unsigned long 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  4   14[BANK0 ] unsigned long 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3281 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;Total ram usage:       12 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    4
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_ConfigTimer0
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text13
  3296  000DFE                     __ptext13:
  3297                           	opt stack 0
  3298  000DFE                     ___lmul:
  3299                           	opt stack 24
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;incstack = 0
  3303  000DFE  0E00               	movlw	0
  3304  000E00  0100               	movlb	0	; () banked
  3305  000E02  6FBD               	movwf	___lmul@product& (0+255),b
  3306  000E04  0E00               	movlw	0
  3307  000E06  6FBE               	movwf	(___lmul@product+1)& (0+255),b
  3308  000E08  0E00               	movlw	0
  3309  000E0A  6FBF               	movwf	(___lmul@product+2)& (0+255),b
  3310  000E0C  0E00               	movlw	0
  3311  000E0E  6FC0               	movwf	(___lmul@product+3)& (0+255),b
  3312  000E10  D000               	goto	l2802
  3313  000E12                     l2802:
  3314                           
  3315                           ; BSR set to: 0
  3316  000E12  0100               	movlb	0	; () banked
  3317  000E14  A1B5               	btfss	___lmul@multiplier& (0+255),0,b
  3318  000E16  D011               	goto	l2806
  3319                           
  3320                           ; BSR set to: 0
  3321  000E18  0100               	movlb	0	; () banked
  3322  000E1A  51B9               	movf	___lmul@multiplicand& (0+255),w,b
  3323  000E1C  0100               	movlb	0	; () banked
  3324  000E1E  27BD               	addwf	___lmul@product& (0+255),f,b
  3325  000E20  0100               	movlb	0	; () banked
  3326  000E22  51BA               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3327  000E24  0100               	movlb	0	; () banked
  3328  000E26  23BE               	addwfc	(___lmul@product+1)& (0+255),f,b
  3329  000E28  0100               	movlb	0	; () banked
  3330  000E2A  51BB               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3331  000E2C  0100               	movlb	0	; () banked
  3332  000E2E  23BF               	addwfc	(___lmul@product+2)& (0+255),f,b
  3333  000E30  0100               	movlb	0	; () banked
  3334  000E32  51BC               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3335  000E34  0100               	movlb	0	; () banked
  3336  000E36  23C0               	addwfc	(___lmul@product+3)& (0+255),f,b
  3337  000E38  D000               	goto	l2806
  3338  000E3A                     l2806:
  3339                           
  3340                           ; BSR set to: 0
  3341  000E3A  0100               	movlb	0	; () banked
  3342  000E3C  90D8               	bcf	status,0,c
  3343  000E3E  37B9               	rlcf	___lmul@multiplicand& (0+255),f,b
  3344  000E40  37BA               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3345  000E42  37BB               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3346  000E44  37BC               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3347                           
  3348                           ; BSR set to: 0
  3349  000E46  0100               	movlb	0	; () banked
  3350  000E48  90D8               	bcf	status,0,c
  3351  000E4A  33B8               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3352  000E4C  33B7               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3353  000E4E  33B6               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3354  000E50  33B5               	rrcf	___lmul@multiplier& (0+255),f,b
  3355  000E52  0100               	movlb	0	; () banked
  3356  000E54  51B5               	movf	___lmul@multiplier& (0+255),w,b
  3357  000E56  0100               	movlb	0	; () banked
  3358  000E58  11B6               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3359  000E5A  0100               	movlb	0	; () banked
  3360  000E5C  11B7               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3361  000E5E  0100               	movlb	0	; () banked
  3362  000E60  11B8               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3363  000E62  A4D8               	btfss	status,2,c
  3364  000E64  D7D6               	goto	l2802
  3365                           
  3366                           ; BSR set to: 0
  3367  000E66  C0BD  F0B5         	movff	___lmul@product,?___lmul
  3368  000E6A  C0BE  F0B6         	movff	___lmul@product+1,?___lmul+1
  3369  000E6E  C0BF  F0B7         	movff	___lmul@product+2,?___lmul+2
  3370  000E72  C0C0  F0B8         	movff	___lmul@product+3,?___lmul+3
  3371                           
  3372                           ; BSR set to: 0
  3373  000E76  0012               	return		;funcret
  3374  000E78                     __end_of___lmul:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           prodh	equ	0xFF4
  3381                           prodl	equ	0xFF3
  3382                           intcon	equ	0xFF2
  3383                           intcon2	equ	0xFF1
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           postdec2	equ	0xFDD
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function ___lldiv *****************
  3394 ;; Defined at:
  3395 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  dividend        4   26[BANK0 ] unsigned long 
  3398 ;;  divisor         4   30[BANK0 ] unsigned long 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  quotient        4   34[BANK0 ] unsigned long 
  3401 ;;  counter         1   38[BANK0 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  4   26[BANK0 ] unsigned long 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3411 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;Total ram usage:       13 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_ConfigTimer0
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text14
  3426  000AB8                     __ptext14:
  3427                           	opt stack 0
  3428  000AB8                     ___lldiv:
  3429                           	opt stack 24
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;incstack = 0
  3433  000AB8  0E00               	movlw	0
  3434  000ABA  0100               	movlb	0	; () banked
  3435  000ABC  6FC9               	movwf	___lldiv@quotient& (0+255),b
  3436  000ABE  0E00               	movlw	0
  3437  000AC0  6FCA               	movwf	(___lldiv@quotient+1)& (0+255),b
  3438  000AC2  0E00               	movlw	0
  3439  000AC4  6FCB               	movwf	(___lldiv@quotient+2)& (0+255),b
  3440  000AC6  0E00               	movlw	0
  3441  000AC8  6FCC               	movwf	(___lldiv@quotient+3)& (0+255),b
  3442                           
  3443                           ; BSR set to: 0
  3444  000ACA  0100               	movlb	0	; () banked
  3445  000ACC  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3446  000ACE  0100               	movlb	0	; () banked
  3447  000AD0  11C6               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3448  000AD2  0100               	movlb	0	; () banked
  3449  000AD4  11C7               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3450  000AD6  0100               	movlb	0	; () banked
  3451  000AD8  11C8               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3452  000ADA  B4D8               	btfsc	status,2,c
  3453  000ADC  D047               	goto	l1072
  3454                           
  3455                           ; BSR set to: 0
  3456  000ADE  0E01               	movlw	1
  3457  000AE0  0100               	movlb	0	; () banked
  3458  000AE2  6FCD               	movwf	___lldiv@counter& (0+255),b
  3459  000AE4  D009               	goto	l2080
  3460  000AE6                     l2078:
  3461                           
  3462                           ; BSR set to: 0
  3463  000AE6  0100               	movlb	0	; () banked
  3464  000AE8  90D8               	bcf	status,0,c
  3465  000AEA  37C5               	rlcf	___lldiv@divisor& (0+255),f,b
  3466  000AEC  37C6               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3467  000AEE  37C7               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3468  000AF0  37C8               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3469  000AF2  0100               	movlb	0	; () banked
  3470  000AF4  2BCD               	incf	___lldiv@counter& (0+255),f,b
  3471  000AF6  D000               	goto	l2080
  3472  000AF8                     l2080:
  3473                           
  3474                           ; BSR set to: 0
  3475  000AF8  0100               	movlb	0	; () banked
  3476  000AFA  BFC8               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  3477  000AFC  D002               	goto	l2082
  3478  000AFE  D7F3               	goto	l2078
  3479                           
  3480                           ; BSR set to: 0
  3481  000B00  D000               	goto	l2082
  3482  000B02                     l2082:
  3483                           
  3484                           ; BSR set to: 0
  3485  000B02  0100               	movlb	0	; () banked
  3486  000B04  90D8               	bcf	status,0,c
  3487  000B06  37C9               	rlcf	___lldiv@quotient& (0+255),f,b
  3488  000B08  37CA               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3489  000B0A  37CB               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3490  000B0C  37CC               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3491                           
  3492                           ; BSR set to: 0
  3493  000B0E  0100               	movlb	0	; () banked
  3494  000B10  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3495  000B12  0100               	movlb	0	; () banked
  3496  000B14  5DC1               	subwf	___lldiv@dividend& (0+255),w,b
  3497  000B16  0100               	movlb	0	; () banked
  3498  000B18  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3499  000B1A  0100               	movlb	0	; () banked
  3500  000B1C  59C2               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3501  000B1E  0100               	movlb	0	; () banked
  3502  000B20  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3503  000B22  0100               	movlb	0	; () banked
  3504  000B24  59C3               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3505  000B26  0100               	movlb	0	; () banked
  3506  000B28  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3507  000B2A  0100               	movlb	0	; () banked
  3508  000B2C  59C4               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3509  000B2E  A0D8               	btfss	status,0,c
  3510  000B30  D013               	goto	l2090
  3511                           
  3512                           ; BSR set to: 0
  3513  000B32  0100               	movlb	0	; () banked
  3514  000B34  51C5               	movf	___lldiv@divisor& (0+255),w,b
  3515  000B36  0100               	movlb	0	; () banked
  3516  000B38  5FC1               	subwf	___lldiv@dividend& (0+255),f,b
  3517  000B3A  0100               	movlb	0	; () banked
  3518  000B3C  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3519  000B3E  0100               	movlb	0	; () banked
  3520  000B40  5BC2               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3521  000B42  0100               	movlb	0	; () banked
  3522  000B44  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3523  000B46  0100               	movlb	0	; () banked
  3524  000B48  5BC3               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3525  000B4A  0100               	movlb	0	; () banked
  3526  000B4C  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3527  000B4E  0100               	movlb	0	; () banked
  3528  000B50  5BC4               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3529                           
  3530                           ; BSR set to: 0
  3531  000B52  0100               	movlb	0	; () banked
  3532  000B54  81C9               	bsf	___lldiv@quotient& (0+255),0,b
  3533  000B56  D000               	goto	l2090
  3534  000B58                     l2090:
  3535                           
  3536                           ; BSR set to: 0
  3537  000B58  0100               	movlb	0	; () banked
  3538  000B5A  90D8               	bcf	status,0,c
  3539  000B5C  33C8               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3540  000B5E  33C7               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3541  000B60  33C6               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3542  000B62  33C5               	rrcf	___lldiv@divisor& (0+255),f,b
  3543                           
  3544                           ; BSR set to: 0
  3545  000B64  0100               	movlb	0	; () banked
  3546  000B66  2FCD               	decfsz	___lldiv@counter& (0+255),f,b
  3547  000B68  D7CC               	goto	l2082
  3548  000B6A  D000               	goto	l1072
  3549  000B6C                     l1072:
  3550                           
  3551                           ; BSR set to: 0
  3552  000B6C  C0C9  F0C1         	movff	___lldiv@quotient,?___lldiv
  3553  000B70  C0CA  F0C2         	movff	___lldiv@quotient+1,?___lldiv+1
  3554  000B74  C0CB  F0C3         	movff	___lldiv@quotient+2,?___lldiv+2
  3555  000B78  C0CC  F0C4         	movff	___lldiv@quotient+3,?___lldiv+3
  3556                           
  3557                           ; BSR set to: 0
  3558  000B7C  0012               	return		;funcret
  3559  000B7E                     __end_of___lldiv:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           intcon2	equ	0xFF1
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _CAN_SetMode *****************
  3579 ;; Defined at:
  3580 ;;		line 142 in file "source/ecan.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  mode            1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  mode            1   14[BANK0 ] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, status,2
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    4
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_App_System_Init
  3605 ;;		_SysEnterSleep
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text15
  3610  0011FE                     __ptext15:
  3611                           	opt stack 0
  3612  0011FE                     _CAN_SetMode:
  3613                           	opt stack 25
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;incstack = 0
  3617                           ;CAN_SetMode@mode stored from wreg
  3618  0011FE  0100               	movlb	0	; () banked
  3619  001200  6FB5               	movwf	CAN_SetMode@mode& (0+255),b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;ecan.c: 144: if(mode == 0)
  3623  001202  0100               	movlb	0	; () banked
  3624  001204  51B5               	movf	CAN_SetMode@mode& (0+255),w,b
  3625  001206  0100               	movlb	0	; () banked
  3626  001208  A4D8               	btfss	status,2,c
  3627  00120A  D002               	goto	l441
  3628                           
  3629                           ; BSR set to: 0
  3630                           
  3631                           ;ecan.c: 145: {
  3632                           ;ecan.c: 146: do { LATB5 = 0; } while(0);
  3633  00120C  9A8A               	bcf	3978,5,c	;volatile
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;ecan.c: 147: }
  3637  00120E  0012               	return	
  3638  001210                     l441:
  3639                           
  3640                           ; BSR set to: 0
  3641  001210  8A8A               	bsf	3978,5,c	;volatile
  3642                           
  3643                           ; BSR set to: 0
  3644  001212  0012               	return	
  3645                           
  3646                           ; BSR set to: 0
  3647                           
  3648                           ; BSR set to: 0
  3649  001214  0012               	return		;funcret
  3650  001216                     __end_of_CAN_SetMode:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           intcon2	equ	0xFF1
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _ADC_Init *****************
  3670 ;; Defined at:
  3671 ;;		line 11 in file "source/adc.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		_ADC_StartConversion
  3694 ;; This function is called by:
  3695 ;;		_App_System_Init
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text16
  3700  00117E                     __ptext16:
  3701                           	opt stack 0
  3702  00117E                     _ADC_Init:
  3703                           	opt stack 24
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;incstack = 0
  3707                           ;adc.c: 13: do { TRISB6 = 0; } while(0);
  3708  00117E  9C93               	bcf	3987,6,c	;volatile
  3709  001180  D000               	goto	l29
  3710  001182                     l29:
  3711  001182  9E93               	bcf	3987,7,c	;volatile
  3712                           
  3713                           ;adc.c: 15: TRISA = 0xFF;
  3714  001184  6892               	setf	3986,c	;volatile
  3715                           
  3716                           ;adc.c: 16: ANCON0 = 0X0F;
  3717  001186  0E0F               	movlw	15
  3718  001188  010F               	movlb	15	; () banked
  3719  00118A  6F5D               	movwf	93,b	;volatile
  3720                           
  3721                           ;adc.c: 18: ADCON1 = 0x00;
  3722  00118C  0E00               	movlw	0
  3723  00118E  6EC1               	movwf	4033,c	;volatile
  3724                           
  3725                           ;adc.c: 19: ADCON2 = 0xAA;
  3726  001190  0EAA               	movlw	170
  3727  001192  6EC0               	movwf	4032,c	;volatile
  3728                           
  3729                           ;adc.c: 20: ADRESH = 0;
  3730  001194  0E00               	movlw	0
  3731  001196  6EC4               	movwf	4036,c	;volatile
  3732                           
  3733                           ;adc.c: 21: ADRESL = 0;
  3734  001198  0E00               	movlw	0
  3735  00119A  6EC3               	movwf	4035,c	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738                           ;adc.c: 22: ADC_StartConversion(0x01);
  3739  00119C  0E01               	movlw	1
  3740  00119E  ECE3  F008         	call	_ADC_StartConversion
  3741  0011A2  0012               	return		;funcret
  3742  0011A4                     __end_of_ADC_Init:
  3743                           	opt stack 0
  3744                           tblptru	equ	0xFF8
  3745                           tblptrh	equ	0xFF7
  3746                           tblptrl	equ	0xFF6
  3747                           tablat	equ	0xFF5
  3748                           prodh	equ	0xFF4
  3749                           prodl	equ	0xFF3
  3750                           intcon	equ	0xFF2
  3751                           intcon2	equ	0xFF1
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _ADC_Cmd *****************
  3762 ;; Defined at:
  3763 ;;		line 94 in file "source/adc.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  channel         1    wreg     unsigned char 
  3766 ;;  sta             1   14[BANK0 ] unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  channel         1   15[BANK0 ] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3778 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_App_System_Init
  3789 ;;		_SysEnterSleep
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text17
  3794  0010AE                     __ptext17:
  3795                           	opt stack 0
  3796  0010AE                     _ADC_Cmd:
  3797                           	opt stack 25
  3798                           
  3799                           ;incstack = 0
  3800                           ;ADC_Cmd@channel stored from wreg
  3801  0010AE  0100               	movlb	0	; () banked
  3802  0010B0  6FB6               	movwf	ADC_Cmd@channel& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;adc.c: 96: if(sta != 0)
  3806  0010B2  0100               	movlb	0	; () banked
  3807  0010B4  51B5               	movf	ADC_Cmd@sta& (0+255),w,b
  3808  0010B6  0100               	movlb	0	; () banked
  3809  0010B8  B4D8               	btfsc	status,2,c
  3810  0010BA  D008               	goto	l2818
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;adc.c: 97: {
  3814                           ;adc.c: 98: if(channel == 1)
  3815  0010BC  0100               	movlb	0	; () banked
  3816  0010BE  05B6               	decf	ADC_Cmd@channel& (0+255),w,b
  3817  0010C0  A4D8               	btfss	status,2,c
  3818  0010C2  D002               	goto	l52
  3819                           
  3820                           ; BSR set to: 0
  3821                           
  3822                           ;adc.c: 99: {
  3823                           ;adc.c: 100: do { LATB6 = 1; } while(0);
  3824  0010C4  8C8A               	bsf	3978,6,c	;volatile
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;adc.c: 101: }
  3828  0010C6  0012               	return	
  3829  0010C8                     l52:
  3830                           
  3831                           ; BSR set to: 0
  3832  0010C8  8E8A               	bsf	3978,7,c	;volatile
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;adc.c: 105: }
  3836                           ;adc.c: 106: }
  3837                           
  3838                           ; BSR set to: 0
  3839  0010CA  0012               	return	
  3840  0010CC                     l2818:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;adc.c: 107: else
  3844                           ;adc.c: 108: {
  3845                           ;adc.c: 109: if(channel == 1)
  3846  0010CC  0100               	movlb	0	; () banked
  3847  0010CE  05B6               	decf	ADC_Cmd@channel& (0+255),w,b
  3848  0010D0  A4D8               	btfss	status,2,c
  3849  0010D2  D002               	goto	l59
  3850                           
  3851                           ; BSR set to: 0
  3852                           
  3853                           ;adc.c: 110: {
  3854                           ;adc.c: 111: do { LATB6 = 0; } while(0);
  3855  0010D4  9C8A               	bcf	3978,6,c	;volatile
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;adc.c: 112: }
  3859  0010D6  0012               	return	
  3860  0010D8                     l59:
  3861                           
  3862                           ; BSR set to: 0
  3863  0010D8  9E8A               	bcf	3978,7,c	;volatile
  3864                           
  3865                           ; BSR set to: 0
  3866                           
  3867                           ; BSR set to: 0
  3868  0010DA  0012               	return	
  3869                           
  3870                           ; BSR set to: 0
  3871                           
  3872                           ; BSR set to: 0
  3873  0010DC  0012               	return		;funcret
  3874  0010DE                     __end_of_ADC_Cmd:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           intcon	equ	0xFF2
  3883                           intcon2	equ	0xFF1
  3884                           postinc0	equ	0xFEE
  3885                           wreg	equ	0xFE8
  3886                           indf2	equ	0xFDF
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _Pedal_Stop *****************
  3894 ;; Defined at:
  3895 ;;		line 72 in file "source/rly.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  dir             1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  dir             1   14[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;		None               void
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;Total ram usage:        1 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    4
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_Pedal_Process
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text18
  3924  001106                     __ptext18:
  3925                           	opt stack 0
  3926  001106                     _Pedal_Stop:
  3927                           	opt stack 24
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;incstack = 0
  3931                           ;Pedal_Stop@dir stored from wreg
  3932  001106  0100               	movlb	0	; () banked
  3933  001108  6FB5               	movwf	Pedal_Stop@dir& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;rly.c: 74: if(dir == 0)
  3937  00110A  0100               	movlb	0	; () banked
  3938  00110C  51B5               	movf	Pedal_Stop@dir& (0+255),w,b
  3939  00110E  0100               	movlb	0	; () banked
  3940  001110  A4D8               	btfss	status,2,c
  3941  001112  D004               	goto	l2908
  3942                           
  3943                           ; BSR set to: 0
  3944                           
  3945                           ;rly.c: 75: {
  3946                           ;rly.c: 76: do { LATC1 = 0; } while(0);
  3947  001114  928B               	bcf	3979,1,c	;volatile
  3948  001116  D000               	goto	l606
  3949  001118                     l606:
  3950                           
  3951                           ; BSR set to: 0
  3952  001118  908B               	bcf	3979,0,c	;volatile
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;rly.c: 78: }
  3956  00111A  0012               	return	
  3957  00111C                     l2908:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;rly.c: 79: else if(dir == 1)
  3961  00111C  0100               	movlb	0	; () banked
  3962  00111E  05B5               	decf	Pedal_Stop@dir& (0+255),w,b
  3963  001120  A4D8               	btfss	status,2,c
  3964  001122  0012               	return	
  3965                           
  3966                           ; BSR set to: 0
  3967                           
  3968                           ;rly.c: 80: {
  3969                           ;rly.c: 81: do { LATC7 = 0; } while(0);
  3970  001124  9E8B               	bcf	3979,7,c	;volatile
  3971  001126  D000               	goto	l612
  3972  001128                     l612:
  3973                           
  3974                           ; BSR set to: 0
  3975  001128  988B               	bcf	3979,4,c	;volatile
  3976                           
  3977                           ; BSR set to: 0
  3978                           
  3979                           ; BSR set to: 0
  3980  00112A  0012               	return	
  3981                           
  3982                           ; BSR set to: 0
  3983                           
  3984                           ; BSR set to: 0
  3985  00112C  0012               	return		;funcret
  3986  00112E                     __end_of_Pedal_Stop:
  3987                           	opt stack 0
  3988                           tblptru	equ	0xFF8
  3989                           tblptrh	equ	0xFF7
  3990                           tblptrl	equ	0xFF6
  3991                           tablat	equ	0xFF5
  3992                           prodh	equ	0xFF4
  3993                           prodl	equ	0xFF3
  3994                           intcon	equ	0xFF2
  3995                           intcon2	equ	0xFF1
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           indf2	equ	0xFDF
  3999                           postinc2	equ	0xFDE
  4000                           postdec2	equ	0xFDD
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _Pedal_Out *****************
  4006 ;; Defined at:
  4007 ;;		line 30 in file "source/rly.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  dir             1    wreg     unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  dir             1   14[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;Total ram usage:        1 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    4
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_Pedal_Process
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text19
  4036  00112E                     __ptext19:
  4037                           	opt stack 0
  4038  00112E                     _Pedal_Out:
  4039                           	opt stack 24
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;incstack = 0
  4043                           ;Pedal_Out@dir stored from wreg
  4044  00112E  0100               	movlb	0	; () banked
  4045  001130  6FB5               	movwf	Pedal_Out@dir& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;rly.c: 32: if(dir == 0)
  4049  001132  0100               	movlb	0	; () banked
  4050  001134  51B5               	movf	Pedal_Out@dir& (0+255),w,b
  4051  001136  0100               	movlb	0	; () banked
  4052  001138  A4D8               	btfss	status,2,c
  4053  00113A  D004               	goto	l2912
  4054                           
  4055                           ; BSR set to: 0
  4056                           
  4057                           ;rly.c: 33: {
  4058                           ;rly.c: 34: do { LATC1 = 1; } while(0);
  4059  00113C  828B               	bsf	3979,1,c	;volatile
  4060  00113E  D000               	goto	l578
  4061  001140                     l578:
  4062                           
  4063                           ; BSR set to: 0
  4064  001140  908B               	bcf	3979,0,c	;volatile
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;rly.c: 36: }
  4068  001142  0012               	return	
  4069  001144                     l2912:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;rly.c: 37: else if(dir == 1)
  4073  001144  0100               	movlb	0	; () banked
  4074  001146  05B5               	decf	Pedal_Out@dir& (0+255),w,b
  4075  001148  A4D8               	btfss	status,2,c
  4076  00114A  0012               	return	
  4077                           
  4078                           ; BSR set to: 0
  4079                           
  4080                           ;rly.c: 38: {
  4081                           ;rly.c: 39: do { LATC7 = 0; } while(0);
  4082  00114C  9E8B               	bcf	3979,7,c	;volatile
  4083  00114E  D000               	goto	l584
  4084  001150                     l584:
  4085                           
  4086                           ; BSR set to: 0
  4087  001150  888B               	bsf	3979,4,c	;volatile
  4088                           
  4089                           ; BSR set to: 0
  4090                           
  4091                           ; BSR set to: 0
  4092  001152  0012               	return	
  4093                           
  4094                           ; BSR set to: 0
  4095                           
  4096                           ; BSR set to: 0
  4097  001154  0012               	return		;funcret
  4098  001156                     __end_of_Pedal_Out:
  4099                           	opt stack 0
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           intcon2	equ	0xFF1
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           indf2	equ	0xFDF
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117 ;; *************** function _Pedal_Back *****************
  4118 ;; Defined at:
  4119 ;;		line 51 in file "source/rly.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  dir             1    wreg     unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  dir             1   14[BANK0 ] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;		None               void
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4137 ;;Total ram usage:        1 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    4
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_Pedal_Process
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text20
  4148  001156                     __ptext20:
  4149                           	opt stack 0
  4150  001156                     _Pedal_Back:
  4151                           	opt stack 24
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;incstack = 0
  4155                           ;Pedal_Back@dir stored from wreg
  4156  001156  0100               	movlb	0	; () banked
  4157  001158  6FB5               	movwf	Pedal_Back@dir& (0+255),b
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;rly.c: 53: if(dir == 0)
  4161  00115A  0100               	movlb	0	; () banked
  4162  00115C  51B5               	movf	Pedal_Back@dir& (0+255),w,b
  4163  00115E  0100               	movlb	0	; () banked
  4164  001160  A4D8               	btfss	status,2,c
  4165  001162  D004               	goto	l2916
  4166                           
  4167                           ; BSR set to: 0
  4168                           
  4169                           ;rly.c: 54: {
  4170                           ;rly.c: 55: do { LATC1 = 0; } while(0);
  4171  001164  928B               	bcf	3979,1,c	;volatile
  4172  001166  D000               	goto	l592
  4173  001168                     l592:
  4174                           
  4175                           ; BSR set to: 0
  4176  001168  808B               	bsf	3979,0,c	;volatile
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;rly.c: 57: }
  4180  00116A  0012               	return	
  4181  00116C                     l2916:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;rly.c: 58: else if(dir == 1)
  4185  00116C  0100               	movlb	0	; () banked
  4186  00116E  05B5               	decf	Pedal_Back@dir& (0+255),w,b
  4187  001170  A4D8               	btfss	status,2,c
  4188  001172  0012               	return	
  4189                           
  4190                           ; BSR set to: 0
  4191                           
  4192                           ;rly.c: 59: {
  4193                           ;rly.c: 60: do { LATC7 = 1; } while(0);
  4194  001174  8E8B               	bsf	3979,7,c	;volatile
  4195  001176  D000               	goto	l598
  4196  001178                     l598:
  4197                           
  4198                           ; BSR set to: 0
  4199  001178  988B               	bcf	3979,4,c	;volatile
  4200                           
  4201                           ; BSR set to: 0
  4202                           
  4203                           ; BSR set to: 0
  4204  00117A  0012               	return	
  4205                           
  4206                           ; BSR set to: 0
  4207                           
  4208                           ; BSR set to: 0
  4209  00117C  0012               	return		;funcret
  4210  00117E                     __end_of_Pedal_Back:
  4211                           	opt stack 0
  4212                           tblptru	equ	0xFF8
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           prodh	equ	0xFF4
  4217                           prodl	equ	0xFF3
  4218                           intcon	equ	0xFF2
  4219                           intcon2	equ	0xFF1
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           indf2	equ	0xFDF
  4223                           postinc2	equ	0xFDE
  4224                           postdec2	equ	0xFDD
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _AdcPro *****************
  4230 ;; Defined at:
  4231 ;;		line 655 in file "source/app.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  sum             2   21[BANK0 ] unsigned int 
  4236 ;;  i               1   23[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;		None               void
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;Total ram usage:        3 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    5
  4253 ;; This function calls:
  4254 ;;		_ADC_GetConversionValue
  4255 ;;		_ADC_StartConversion
  4256 ;;		___lwdiv
  4257 ;; This function is called by:
  4258 ;;		_AppTask_PollHandler
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text21
  4263  0006D6                     __ptext21:
  4264                           	opt stack 0
  4265  0006D6                     _AdcPro:
  4266                           	opt stack 24
  4267                           
  4268                           ;app.c: 657: static uint16_t buf[5][4];
  4269                           ;app.c: 658: static uint8_t write;
  4270                           ;app.c: 659: static uint8_t index = 0x01;
  4271                           ;app.c: 660: uint16_t sum;
  4272                           ;app.c: 661: uint8_t i;
  4273                           ;app.c: 663: if(index == 0x01)
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;incstack = 0
  4277  0006D6  0442               	decf	AdcPro@index,w,c
  4278  0006D8  A4D8               	btfss	status,2,c
  4279  0006DA  D04C               	goto	l3002
  4280                           
  4281                           ;app.c: 664: {
  4282                           ;app.c: 665: buf[write][0x01] = ADC_GetConversionValue();
  4283  0006DC  EC3E  F008         	call	_ADC_GetConversionValue	;wreg free
  4284  0006E0  5001               	movf	AdcPro@write,w,c
  4285  0006E2  0D08               	mullw	8
  4286  0006E4  0E02               	movlw	2
  4287  0006E6  26F3               	addwf	prodl,f,c
  4288  0006E8  0E00               	movlw	0
  4289  0006EA  22F4               	addwfc	prodh,f,c
  4290  0006EC  0E60               	movlw	low AdcPro@buf
  4291  0006EE  24F3               	addwf	prodl,w,c
  4292  0006F0  6ED9               	movwf	fsr2l,c
  4293  0006F2  0E00               	movlw	high AdcPro@buf
  4294  0006F4  20F4               	addwfc	prodh,w,c
  4295  0006F6  6EDA               	movwf	fsr2h,c
  4296  0006F8  0100               	movlb	0	; () banked
  4297  0006FA  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4298  0006FE  0100               	movlb	0	; () banked
  4299  000700  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;app.c: 670: sum = 0;
  4303  000704  0E00               	movlw	0
  4304  000706  0100               	movlb	0	; () banked
  4305  000708  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4306  00070A  0E00               	movlw	0
  4307  00070C  6FBC               	movwf	AdcPro@sum& (0+255),b
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;app.c: 671: for (i = 0; i < 5; i++)
  4311  00070E  0E00               	movlw	0
  4312  000710  0100               	movlb	0	; () banked
  4313  000712  6FBE               	movwf	AdcPro@i& (0+255),b
  4314  000714                     l2986:
  4315                           
  4316                           ; BSR set to: 0
  4317  000714  0E04               	movlw	4
  4318  000716  0100               	movlb	0	; () banked
  4319  000718  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4320  00071A  D001               	goto	l2990
  4321                           
  4322                           ; BSR set to: 0
  4323  00071C  D016               	goto	l2996
  4324  00071E                     l2990:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;app.c: 672: {
  4328                           ;app.c: 673: sum += buf[i][0x01];
  4329  00071E  0100               	movlb	0	; () banked
  4330  000720  51BE               	movf	AdcPro@i& (0+255),w,b
  4331  000722  0D08               	mullw	8
  4332  000724  0E02               	movlw	2
  4333  000726  26F3               	addwf	prodl,f,c
  4334  000728  0E00               	movlw	0
  4335  00072A  22F4               	addwfc	prodh,f,c
  4336  00072C  0E60               	movlw	low AdcPro@buf
  4337  00072E  24F3               	addwf	prodl,w,c
  4338  000730  6ED9               	movwf	fsr2l,c
  4339  000732  0E00               	movlw	high AdcPro@buf
  4340  000734  20F4               	addwfc	prodh,w,c
  4341  000736  6EDA               	movwf	fsr2h,c
  4342  000738  50DE               	movf	postinc2,w,c
  4343  00073A  0100               	movlb	0	; () banked
  4344  00073C  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4345  00073E  50DD               	movf	postdec2,w,c
  4346  000740  0100               	movlb	0	; () banked
  4347  000742  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4348                           
  4349                           ; BSR set to: 0
  4350  000744  0100               	movlb	0	; () banked
  4351  000746  2BBE               	incf	AdcPro@i& (0+255),f,b
  4352  000748  D7E5               	goto	l2986
  4353  00074A                     l2996:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;app.c: 674: }
  4357                           ;app.c: 675: SysRunData.ADC_Buf[0x01] = sum / 5;
  4358  00074A  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4359  00074E  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4360  000752  0E00               	movlw	0
  4361  000754  0100               	movlb	0	; () banked
  4362  000756  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4363  000758  0E05               	movlw	5
  4364  00075A  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4365  00075C  ECBE  F006         	call	___lwdiv	;wreg free
  4366  000760  C0B5  F013         	movff	?___lwdiv,_SysRunData+15
  4367  000764  C0B6  F014         	movff	?___lwdiv+1,_SysRunData+16
  4368                           
  4369                           ;app.c: 676: index = 0x02;
  4370  000768  0E02               	movlw	2
  4371  00076A  6E42               	movwf	AdcPro@index,c
  4372                           
  4373                           ;app.c: 677: ADC_StartConversion(0x02);
  4374  00076C  0E02               	movlw	2
  4375  00076E  ECE3  F008         	call	_ADC_StartConversion
  4376                           
  4377                           ;app.c: 678: }
  4378  000772  0012               	return	
  4379  000774                     l3002:
  4380                           
  4381                           ;app.c: 679: else if(index == 0x02)
  4382  000774  0E02               	movlw	2
  4383  000776  1842               	xorwf	AdcPro@index,w,c
  4384  000778  A4D8               	btfss	status,2,c
  4385  00077A  D04C               	goto	l3026
  4386                           
  4387                           ;app.c: 680: {
  4388                           ;app.c: 681: buf[write][0x02] = ADC_GetConversionValue();
  4389  00077C  EC3E  F008         	call	_ADC_GetConversionValue	;wreg free
  4390  000780  5001               	movf	AdcPro@write,w,c
  4391  000782  0D08               	mullw	8
  4392  000784  0E04               	movlw	4
  4393  000786  26F3               	addwf	prodl,f,c
  4394  000788  0E00               	movlw	0
  4395  00078A  22F4               	addwfc	prodh,f,c
  4396  00078C  0E60               	movlw	low AdcPro@buf
  4397  00078E  24F3               	addwf	prodl,w,c
  4398  000790  6ED9               	movwf	fsr2l,c
  4399  000792  0E00               	movlw	high AdcPro@buf
  4400  000794  20F4               	addwfc	prodh,w,c
  4401  000796  6EDA               	movwf	fsr2h,c
  4402  000798  0100               	movlb	0	; () banked
  4403  00079A  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4404  00079E  0100               	movlb	0	; () banked
  4405  0007A0  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;app.c: 686: sum = 0;
  4409  0007A4  0E00               	movlw	0
  4410  0007A6  0100               	movlb	0	; () banked
  4411  0007A8  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4412  0007AA  0E00               	movlw	0
  4413  0007AC  6FBC               	movwf	AdcPro@sum& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;app.c: 687: for (i = 0; i < 5; i++)
  4417  0007AE  0E00               	movlw	0
  4418  0007B0  0100               	movlb	0	; () banked
  4419  0007B2  6FBE               	movwf	AdcPro@i& (0+255),b
  4420  0007B4                     l3010:
  4421                           
  4422                           ; BSR set to: 0
  4423  0007B4  0E04               	movlw	4
  4424  0007B6  0100               	movlb	0	; () banked
  4425  0007B8  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4426  0007BA  D001               	goto	l3014
  4427                           
  4428                           ; BSR set to: 0
  4429  0007BC  D016               	goto	l3020
  4430  0007BE                     l3014:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;app.c: 688: {
  4434                           ;app.c: 689: sum += buf[i][0x02];
  4435  0007BE  0100               	movlb	0	; () banked
  4436  0007C0  51BE               	movf	AdcPro@i& (0+255),w,b
  4437  0007C2  0D08               	mullw	8
  4438  0007C4  0E04               	movlw	4
  4439  0007C6  26F3               	addwf	prodl,f,c
  4440  0007C8  0E00               	movlw	0
  4441  0007CA  22F4               	addwfc	prodh,f,c
  4442  0007CC  0E60               	movlw	low AdcPro@buf
  4443  0007CE  24F3               	addwf	prodl,w,c
  4444  0007D0  6ED9               	movwf	fsr2l,c
  4445  0007D2  0E00               	movlw	high AdcPro@buf
  4446  0007D4  20F4               	addwfc	prodh,w,c
  4447  0007D6  6EDA               	movwf	fsr2h,c
  4448  0007D8  50DE               	movf	postinc2,w,c
  4449  0007DA  0100               	movlb	0	; () banked
  4450  0007DC  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4451  0007DE  50DD               	movf	postdec2,w,c
  4452  0007E0  0100               	movlb	0	; () banked
  4453  0007E2  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4454                           
  4455                           ; BSR set to: 0
  4456  0007E4  0100               	movlb	0	; () banked
  4457  0007E6  2BBE               	incf	AdcPro@i& (0+255),f,b
  4458  0007E8  D7E5               	goto	l3010
  4459  0007EA                     l3020:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;app.c: 690: }
  4463                           ;app.c: 691: SysRunData.ADC_Buf[0x02] = sum / 5;
  4464  0007EA  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4465  0007EE  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4466  0007F2  0E00               	movlw	0
  4467  0007F4  0100               	movlb	0	; () banked
  4468  0007F6  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4469  0007F8  0E05               	movlw	5
  4470  0007FA  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4471  0007FC  ECBE  F006         	call	___lwdiv	;wreg free
  4472  000800  C0B5  F015         	movff	?___lwdiv,_SysRunData+17
  4473  000804  C0B6  F016         	movff	?___lwdiv+1,_SysRunData+18
  4474                           
  4475                           ;app.c: 693: index = 0x03;
  4476  000808  0E03               	movlw	3
  4477  00080A  6E42               	movwf	AdcPro@index,c
  4478                           
  4479                           ;app.c: 694: ADC_StartConversion(0x03);
  4480  00080C  0E03               	movlw	3
  4481  00080E  ECE3  F008         	call	_ADC_StartConversion
  4482                           
  4483                           ;app.c: 695: }
  4484  000812  0012               	return	
  4485  000814                     l3026:
  4486                           
  4487                           ;app.c: 696: else if(index == 0x03)
  4488  000814  0E03               	movlw	3
  4489  000816  1842               	xorwf	AdcPro@index,w,c
  4490  000818  A4D8               	btfss	status,2,c
  4491  00081A  0012               	return	
  4492                           
  4493                           ;app.c: 697: {
  4494                           ;app.c: 698: buf[write][0x03] = ADC_GetConversionValue();
  4495  00081C  EC3E  F008         	call	_ADC_GetConversionValue	;wreg free
  4496  000820  5001               	movf	AdcPro@write,w,c
  4497  000822  0D08               	mullw	8
  4498  000824  0E06               	movlw	6
  4499  000826  26F3               	addwf	prodl,f,c
  4500  000828  0E00               	movlw	0
  4501  00082A  22F4               	addwfc	prodh,f,c
  4502  00082C  0E60               	movlw	low AdcPro@buf
  4503  00082E  24F3               	addwf	prodl,w,c
  4504  000830  6ED9               	movwf	fsr2l,c
  4505  000832  0E00               	movlw	high AdcPro@buf
  4506  000834  20F4               	addwfc	prodh,w,c
  4507  000836  6EDA               	movwf	fsr2h,c
  4508  000838  0100               	movlb	0	; () banked
  4509  00083A  C0B5  FFDE         	movff	?_ADC_GetConversionValue,postinc2
  4510  00083E  0100               	movlb	0	; () banked
  4511  000840  C0B6  FFDD         	movff	?_ADC_GetConversionValue+1,postdec2
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;app.c: 702: sum = 0;
  4515  000844  0E00               	movlw	0
  4516  000846  0100               	movlb	0	; () banked
  4517  000848  6FBD               	movwf	(AdcPro@sum+1)& (0+255),b
  4518  00084A  0E00               	movlw	0
  4519  00084C  6FBC               	movwf	AdcPro@sum& (0+255),b
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;app.c: 703: for (i = 0; i < 5; i++)
  4523  00084E  0E00               	movlw	0
  4524  000850  0100               	movlb	0	; () banked
  4525  000852  6FBE               	movwf	AdcPro@i& (0+255),b
  4526  000854                     l3034:
  4527                           
  4528                           ; BSR set to: 0
  4529  000854  0E04               	movlw	4
  4530  000856  0100               	movlb	0	; () banked
  4531  000858  65BE               	cpfsgt	AdcPro@i& (0+255),b
  4532  00085A  D001               	goto	l3038
  4533                           
  4534                           ; BSR set to: 0
  4535  00085C  D016               	goto	l3044
  4536  00085E                     l3038:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;app.c: 704: {
  4540                           ;app.c: 705: sum += buf[i][0x03];
  4541  00085E  0100               	movlb	0	; () banked
  4542  000860  51BE               	movf	AdcPro@i& (0+255),w,b
  4543  000862  0D08               	mullw	8
  4544  000864  0E06               	movlw	6
  4545  000866  26F3               	addwf	prodl,f,c
  4546  000868  0E00               	movlw	0
  4547  00086A  22F4               	addwfc	prodh,f,c
  4548  00086C  0E60               	movlw	low AdcPro@buf
  4549  00086E  24F3               	addwf	prodl,w,c
  4550  000870  6ED9               	movwf	fsr2l,c
  4551  000872  0E00               	movlw	high AdcPro@buf
  4552  000874  20F4               	addwfc	prodh,w,c
  4553  000876  6EDA               	movwf	fsr2h,c
  4554  000878  50DE               	movf	postinc2,w,c
  4555  00087A  0100               	movlb	0	; () banked
  4556  00087C  27BC               	addwf	AdcPro@sum& (0+255),f,b
  4557  00087E  50DD               	movf	postdec2,w,c
  4558  000880  0100               	movlb	0	; () banked
  4559  000882  23BD               	addwfc	(AdcPro@sum+1)& (0+255),f,b
  4560                           
  4561                           ; BSR set to: 0
  4562  000884  0100               	movlb	0	; () banked
  4563  000886  2BBE               	incf	AdcPro@i& (0+255),f,b
  4564  000888  D7E5               	goto	l3034
  4565  00088A                     l3044:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;app.c: 706: }
  4569                           ;app.c: 707: SysRunData.ADC_Buf[0x03] = sum / 5;
  4570  00088A  C0BC  F0B5         	movff	AdcPro@sum,___lwdiv@dividend
  4571  00088E  C0BD  F0B6         	movff	AdcPro@sum+1,___lwdiv@dividend+1
  4572  000892  0E00               	movlw	0
  4573  000894  0100               	movlb	0	; () banked
  4574  000896  6FB8               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4575  000898  0E05               	movlw	5
  4576  00089A  6FB7               	movwf	___lwdiv@divisor& (0+255),b
  4577  00089C  ECBE  F006         	call	___lwdiv	;wreg free
  4578  0008A0  C0B5  F017         	movff	?___lwdiv,_SysRunData+19
  4579  0008A4  C0B6  F018         	movff	?___lwdiv+1,_SysRunData+20
  4580                           
  4581                           ;app.c: 708: if (++write >= 5)
  4582  0008A8  2A01               	incf	AdcPro@write,f,c
  4583  0008AA  0E04               	movlw	4
  4584  0008AC  6401               	cpfsgt	AdcPro@write,c
  4585  0008AE  D002               	goto	l272
  4586                           
  4587                           ;app.c: 709: {
  4588                           ;app.c: 710: write = 0;
  4589  0008B0  0E00               	movlw	0
  4590  0008B2  6E01               	movwf	AdcPro@write,c
  4591  0008B4                     l272:
  4592                           
  4593                           ;app.c: 711: }
  4594                           ;app.c: 712: index = 0x01;
  4595  0008B4  0E01               	movlw	1
  4596  0008B6  6E42               	movwf	AdcPro@index,c
  4597                           
  4598                           ;app.c: 713: ADC_StartConversion(0x01);
  4599  0008B8  0E01               	movlw	1
  4600  0008BA  ECE3  F008         	call	_ADC_StartConversion
  4601  0008BE  0012               	return	
  4602  0008C0  0012               	return		;funcret
  4603  0008C2                     __end_of_AdcPro:
  4604                           	opt stack 0
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           prodh	equ	0xFF4
  4610                           prodl	equ	0xFF3
  4611                           intcon	equ	0xFF2
  4612                           intcon2	equ	0xFF1
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           indf2	equ	0xFDF
  4616                           postinc2	equ	0xFDE
  4617                           postdec2	equ	0xFDD
  4618                           fsr2h	equ	0xFDA
  4619                           fsr2l	equ	0xFD9
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function ___lwdiv *****************
  4623 ;; Defined at:
  4624 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  dividend        2   14[BANK0 ] unsigned int 
  4627 ;;  divisor         2   16[BANK0 ] unsigned int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  quotient        2   19[BANK0 ] unsigned int 
  4630 ;;  counter         1   18[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2   14[BANK0 ] unsigned int 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4641 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;Total ram usage:        7 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_AdcPro
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text22
  4655  000D7C                     __ptext22:
  4656                           	opt stack 0
  4657  000D7C                     ___lwdiv:
  4658                           	opt stack 24
  4659                           
  4660                           ;incstack = 0
  4661  000D7C  0E00               	movlw	0
  4662  000D7E  0100               	movlb	0	; () banked
  4663  000D80  6FBB               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4664  000D82  0E00               	movlw	0
  4665  000D84  6FBA               	movwf	___lwdiv@quotient& (0+255),b
  4666                           
  4667                           ; BSR set to: 0
  4668  000D86  0100               	movlb	0	; () banked
  4669  000D88  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  4670  000D8A  0100               	movlb	0	; () banked
  4671  000D8C  11B8               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4672  000D8E  B4D8               	btfsc	status,2,c
  4673  000D90  D031               	goto	l1135
  4674                           
  4675                           ; BSR set to: 0
  4676  000D92  0E01               	movlw	1
  4677  000D94  0100               	movlb	0	; () banked
  4678  000D96  6FB9               	movwf	___lwdiv@counter& (0+255),b
  4679  000D98  D007               	goto	l2944
  4680  000D9A                     l2942:
  4681                           
  4682                           ; BSR set to: 0
  4683  000D9A  0100               	movlb	0	; () banked
  4684  000D9C  90D8               	bcf	status,0,c
  4685  000D9E  37B7               	rlcf	___lwdiv@divisor& (0+255),f,b
  4686  000DA0  37B8               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4687  000DA2  0100               	movlb	0	; () banked
  4688  000DA4  2BB9               	incf	___lwdiv@counter& (0+255),f,b
  4689  000DA6  D000               	goto	l2944
  4690  000DA8                     l2944:
  4691                           
  4692                           ; BSR set to: 0
  4693  000DA8  0100               	movlb	0	; () banked
  4694  000DAA  BFB8               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  4695  000DAC  D002               	goto	l2946
  4696  000DAE  D7F5               	goto	l2942
  4697                           
  4698                           ; BSR set to: 0
  4699  000DB0  D000               	goto	l2946
  4700  000DB2                     l2946:
  4701                           
  4702                           ; BSR set to: 0
  4703  000DB2  0100               	movlb	0	; () banked
  4704  000DB4  90D8               	bcf	status,0,c
  4705  000DB6  37BA               	rlcf	___lwdiv@quotient& (0+255),f,b
  4706  000DB8  37BB               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4707                           
  4708                           ; BSR set to: 0
  4709  000DBA  0100               	movlb	0	; () banked
  4710  000DBC  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  4711  000DBE  0100               	movlb	0	; () banked
  4712  000DC0  5DB5               	subwf	___lwdiv@dividend& (0+255),w,b
  4713  000DC2  0100               	movlb	0	; () banked
  4714  000DC4  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4715  000DC6  0100               	movlb	0	; () banked
  4716  000DC8  59B6               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4717  000DCA  A0D8               	btfss	status,0,c
  4718  000DCC  D00B               	goto	l2954
  4719                           
  4720                           ; BSR set to: 0
  4721  000DCE  0100               	movlb	0	; () banked
  4722  000DD0  51B7               	movf	___lwdiv@divisor& (0+255),w,b
  4723  000DD2  0100               	movlb	0	; () banked
  4724  000DD4  5FB5               	subwf	___lwdiv@dividend& (0+255),f,b
  4725  000DD6  0100               	movlb	0	; () banked
  4726  000DD8  51B8               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4727  000DDA  0100               	movlb	0	; () banked
  4728  000DDC  5BB6               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4729                           
  4730                           ; BSR set to: 0
  4731  000DDE  0100               	movlb	0	; () banked
  4732  000DE0  81BA               	bsf	___lwdiv@quotient& (0+255),0,b
  4733  000DE2  D000               	goto	l2954
  4734  000DE4                     l2954:
  4735                           
  4736                           ; BSR set to: 0
  4737  000DE4  0100               	movlb	0	; () banked
  4738  000DE6  90D8               	bcf	status,0,c
  4739  000DE8  33B8               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4740  000DEA  33B7               	rrcf	___lwdiv@divisor& (0+255),f,b
  4741                           
  4742                           ; BSR set to: 0
  4743  000DEC  0100               	movlb	0	; () banked
  4744  000DEE  2FB9               	decfsz	___lwdiv@counter& (0+255),f,b
  4745  000DF0  D7E0               	goto	l2946
  4746  000DF2  D000               	goto	l1135
  4747  000DF4                     l1135:
  4748                           
  4749                           ; BSR set to: 0
  4750  000DF4  C0BA  F0B5         	movff	___lwdiv@quotient,?___lwdiv
  4751  000DF8  C0BB  F0B6         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4752                           
  4753                           ; BSR set to: 0
  4754  000DFC  0012               	return		;funcret
  4755  000DFE                     __end_of___lwdiv:
  4756                           	opt stack 0
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           intcon2	equ	0xFF1
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           indf2	equ	0xFDF
  4768                           postinc2	equ	0xFDE
  4769                           postdec2	equ	0xFDD
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function _ADC_StartConversion *****************
  4775 ;; Defined at:
  4776 ;;		line 74 in file "source/adc.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  channel         1    wreg     unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  channel         1   15[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;		None               void
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;Total ram usage:        2 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    4
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_ADC_Init
  4801 ;;		_AdcPro
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text23
  4806  0011C6                     __ptext23:
  4807                           	opt stack 0
  4808  0011C6                     _ADC_StartConversion:
  4809                           	opt stack 24
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;incstack = 0
  4813                           ;ADC_StartConversion@channel stored from wreg
  4814  0011C6  0100               	movlb	0	; () banked
  4815  0011C8  6FB6               	movwf	ADC_StartConversion@channel& (0+255),b
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;adc.c: 77: ADCON0bits.CHS = channel;
  4819  0011CA  C0B6  F0B5         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  4820  0011CE  0100               	movlb	0	; () banked
  4821  0011D0  47B5               	rlncf	??_ADC_StartConversion& (0+255),f,b
  4822  0011D2  47B5               	rlncf	??_ADC_StartConversion& (0+255),f,b
  4823  0011D4  50C2               	movf	4034,w,c	;volatile
  4824  0011D6  0100               	movlb	0	; () banked
  4825  0011D8  19B5               	xorwf	??_ADC_StartConversion& (0+255),w,b
  4826  0011DA  0B83               	andlw	-125
  4827  0011DC  19B5               	xorwf	??_ADC_StartConversion& (0+255),w,b
  4828  0011DE  6EC2               	movwf	4034,c	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;adc.c: 79: ADCON0bits.ADON = 1;
  4832  0011E0  80C2               	bsf	4034,0,c	;volatile
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;adc.c: 84: ADCON0bits.GO_NOT_DONE = 1;
  4836  0011E2  82C2               	bsf	4034,1,c	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839  0011E4  0012               	return		;funcret
  4840  0011E6                     __end_of_ADC_StartConversion:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           intcon2	equ	0xFF1
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           indf2	equ	0xFDF
  4853                           postinc2	equ	0xFDE
  4854                           postdec2	equ	0xFDD
  4855                           fsr2h	equ	0xFDA
  4856                           fsr2l	equ	0xFD9
  4857                           status	equ	0xFD8
  4858                           
  4859 ;; *************** function _ADC_GetConversionValue *****************
  4860 ;; Defined at:
  4861 ;;		line 57 in file "source/adc.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  ADC_Result      2   19[BANK0 ] unsigned int 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  2   14[BANK0 ] unsigned int 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;Total ram usage:        7 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    4
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_AdcPro
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text24
  4890  00107C                     __ptext24:
  4891                           	opt stack 0
  4892  00107C                     _ADC_GetConversionValue:
  4893                           	opt stack 24
  4894                           
  4895                           ;adc.c: 59: uint16_t ADC_Result = 0;
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;incstack = 0
  4899  00107C  0E00               	movlw	0
  4900  00107E  0100               	movlb	0	; () banked
  4901  001080  6FBB               	movwf	(ADC_GetConversionValue@ADC_Result+1)& (0+255),b
  4902  001082  0E00               	movlw	0
  4903  001084  6FBA               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;adc.c: 62: ADC_Result = (uint16_t)ADRESH << 8|(ADRESL&0xE0);
  4907  001086  CFC3 F0B7          	movff	4035,??_ADC_GetConversionValue	;volatile
  4908  00108A  0EE0               	movlw	224
  4909  00108C  0100               	movlb	0	; () banked
  4910  00108E  17B7               	andwf	??_ADC_GetConversionValue& (0+255),f,b
  4911  001090  50C4               	movf	4036,w,c	;volatile
  4912  001092  0100               	movlb	0	; () banked
  4913  001094  6FB8               	movwf	(??_ADC_GetConversionValue+1)& (0+255),b
  4914  001096  0100               	movlb	0	; () banked
  4915  001098  51B7               	movf	??_ADC_GetConversionValue& (0+255),w,b
  4916  00109A  0100               	movlb	0	; () banked
  4917  00109C  6FBA               	movwf	ADC_GetConversionValue@ADC_Result& (0+255),b
  4918  00109E  C0B8  F0BB         	movff	??_ADC_GetConversionValue+1,ADC_GetConversionValue@ADC_Result+1
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;adc.c: 64: return ADC_Result;
  4922  0010A2  C0BA  F0B5         	movff	ADC_GetConversionValue@ADC_Result,?_ADC_GetConversionValue
  4923  0010A6  C0BB  F0B6         	movff	ADC_GetConversionValue@ADC_Result+1,?_ADC_GetConversionValue+1
  4924  0010AA  0012               	return	
  4925                           
  4926                           ; BSR set to: 0
  4927                           
  4928                           ; BSR set to: 0
  4929  0010AC  0012               	return		;funcret
  4930  0010AE                     __end_of_ADC_GetConversionValue:
  4931                           	opt stack 0
  4932                           tblptru	equ	0xFF8
  4933                           tblptrh	equ	0xFF7
  4934                           tblptrl	equ	0xFF6
  4935                           tablat	equ	0xFF5
  4936                           prodh	equ	0xFF4
  4937                           prodl	equ	0xFF3
  4938                           intcon	equ	0xFF2
  4939                           intcon2	equ	0xFF1
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           indf2	equ	0xFDF
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function _Lows_ISR *****************
  4950 ;; Defined at:
  4951 ;;		line 171 in file "source/timer.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  i               1   21[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;Total ram usage:       18 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    3
  4972 ;; This function calls:
  4973 ;;		_bsp_SoftTimerDec
  4974 ;; This function is called by:
  4975 ;;		Interrupt level 1
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	intcodelo
  4980  000018                     __pintcodelo:
  4981                           	opt stack 0
  4982  000018                     _Lows_ISR:
  4983                           	opt stack 21
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;incstack = 0
  4987  000018  CFD8 F02A          	movff	status,??_Lows_ISR
  4988  00001C  CFE8 F02B          	movff	wreg,??_Lows_ISR+1
  4989  000020  CFE0 F02C          	movff	bsr,??_Lows_ISR+2
  4990  000024  CFFA F02D          	movff	pclath,??_Lows_ISR+3
  4991  000028  CFFB F02E          	movff	pclatu,??_Lows_ISR+4
  4992  00002C  CFE9 F02F          	movff	fsr0l,??_Lows_ISR+5
  4993  000030  CFEA F030          	movff	fsr0h,??_Lows_ISR+6
  4994  000034  CFE1 F031          	movff	fsr1l,??_Lows_ISR+7
  4995  000038  CFE2 F032          	movff	fsr1h,??_Lows_ISR+8
  4996  00003C  CFD9 F033          	movff	fsr2l,??_Lows_ISR+9
  4997  000040  CFDA F034          	movff	fsr2h,??_Lows_ISR+10
  4998  000044  CFF3 F035          	movff	prodl,??_Lows_ISR+11
  4999  000048  CFF4 F036          	movff	prodh,??_Lows_ISR+12
  5000  00004C  CFF6 F037          	movff	tblptrl,??_Lows_ISR+13
  5001  000050  CFF7 F038          	movff	tblptrh,??_Lows_ISR+14
  5002  000054  CFF8 F039          	movff	tblptru,??_Lows_ISR+15
  5003  000058  CFF5 F03A          	movff	tablat,??_Lows_ISR+16
  5004                           
  5005                           ;timer.c: 173: uint8_t i;
  5006                           ;timer.c: 175: if(INTCONbits.T0IF == 1)
  5007  00005C  A4F2               	btfss	intcon,2,c	;volatile
  5008  00005E  D018               	goto	i1l537
  5009                           
  5010                           ;timer.c: 176: {
  5011                           ;timer.c: 177: INTCONbits.T0IF = 0;
  5012  000060  94F2               	bcf	intcon,2,c	;volatile
  5013                           
  5014                           ;timer.c: 178: TMR0H = T0RH;
  5015  000062  C002  FFD7         	movff	_T0RH,4055	;volatile
  5016                           
  5017                           ;timer.c: 179: TMR0L = T0RL;
  5018  000066  C003  FFD6         	movff	_T0RL,4054	;volatile
  5019                           
  5020                           ;timer.c: 181: for (i = 0; i < 2; i++)
  5021  00006A  0E00               	movlw	0
  5022  00006C  6E3B               	movwf	Lows_ISR@i,c
  5023  00006E                     i1l2784:
  5024  00006E  0E01               	movlw	1
  5025  000070  643B               	cpfsgt	Lows_ISR@i,c
  5026  000072  D001               	goto	i1l2788
  5027  000074  D00D               	goto	i1l537
  5028  000076                     i1l2788:
  5029                           
  5030                           ;timer.c: 182: {
  5031                           ;timer.c: 183: bsp_SoftTimerDec(&s_tTmr[i]);
  5032  000076  503B               	movf	Lows_ISR@i,w,c
  5033  000078  0D06               	mullw	6
  5034  00007A  0E1A               	movlw	low _s_tTmr
  5035  00007C  24F3               	addwf	prodl,w,c
  5036  00007E  6E26               	movwf	bsp_SoftTimerDec@_tmr,c
  5037  000080  0E00               	movlw	high _s_tTmr
  5038  000082  20F4               	addwfc	prodh,w,c
  5039  000084  6E27               	movwf	bsp_SoftTimerDec@_tmr+1,c
  5040  000086  EC3C  F007         	call	_bsp_SoftTimerDec	;wreg free
  5041  00008A  2A3B               	incf	Lows_ISR@i,f,c
  5042  00008C  D7F0               	goto	i1l2784
  5043  00008E  D000               	goto	i1l537
  5044  000090                     i1l537:
  5045  000090  C03A  FFF5         	movff	??_Lows_ISR+16,tablat
  5046  000094  C039  FFF8         	movff	??_Lows_ISR+15,tblptru
  5047  000098  C038  FFF7         	movff	??_Lows_ISR+14,tblptrh
  5048  00009C  C037  FFF6         	movff	??_Lows_ISR+13,tblptrl
  5049  0000A0  C036  FFF4         	movff	??_Lows_ISR+12,prodh
  5050  0000A4  C035  FFF3         	movff	??_Lows_ISR+11,prodl
  5051  0000A8  C034  FFDA         	movff	??_Lows_ISR+10,fsr2h
  5052  0000AC  C033  FFD9         	movff	??_Lows_ISR+9,fsr2l
  5053  0000B0  C032  FFE2         	movff	??_Lows_ISR+8,fsr1h
  5054  0000B4  C031  FFE1         	movff	??_Lows_ISR+7,fsr1l
  5055  0000B8  C030  FFEA         	movff	??_Lows_ISR+6,fsr0h
  5056  0000BC  C02F  FFE9         	movff	??_Lows_ISR+5,fsr0l
  5057  0000C0  C02E  FFFB         	movff	??_Lows_ISR+4,pclatu
  5058  0000C4  C02D  FFFA         	movff	??_Lows_ISR+3,pclath
  5059  0000C8  C02C  FFE0         	movff	??_Lows_ISR+2,bsr
  5060  0000CC  C02B  FFE8         	movff	??_Lows_ISR+1,wreg
  5061  0000D0  C02A  FFD8         	movff	??_Lows_ISR,status
  5062  0000D4  0010               	retfie	
  5063  0000D6                     __end_of_Lows_ISR:
  5064                           	opt stack 0
  5065                           pclatu	equ	0xFFB
  5066                           pclath	equ	0xFFA
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           intcon2	equ	0xFF1
  5075                           postinc0	equ	0xFEE
  5076                           fsr0h	equ	0xFEA
  5077                           fsr0l	equ	0xFE9
  5078                           wreg	equ	0xFE8
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           bsr	equ	0xFE0
  5082                           indf2	equ	0xFDF
  5083                           postinc2	equ	0xFDE
  5084                           postdec2	equ	0xFDD
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _bsp_SoftTimerDec *****************
  5090 ;; Defined at:
  5091 ;;		line 42 in file "source/timer.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  _tmr            2    0[COMRAM] PTR volatile struct .
  5094 ;;		 -> s_tTmr(12), 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5110 ;;Total ram usage:        4 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_Lows_ISR
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text26
  5121  000E78                     __ptext26:
  5122                           	opt stack 0
  5123  000E78                     _bsp_SoftTimerDec:
  5124                           	opt stack 21
  5125                           
  5126                           ;timer.c: 44: if (_tmr->Count > 0)
  5127                           
  5128                           ;incstack = 0
  5129  000E78  EE20 F002          	lfsr	2,2
  5130  000E7C  5026               	movf	bsp_SoftTimerDec@_tmr,w,c
  5131  000E7E  26D9               	addwf	fsr2l,f,c
  5132  000E80  5027               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5133  000E82  22DA               	addwfc	fsr2h,f,c
  5134  000E84  50DE               	movf	postinc2,w,c
  5135  000E86  10DE               	iorwf	postinc2,w,c
  5136  000E88  B4D8               	btfsc	status,2,c
  5137  000E8A  0012               	return	
  5138                           
  5139                           ;timer.c: 45: {
  5140                           ;timer.c: 47: if (--_tmr->Count == 0)
  5141  000E8C  EE20 F002          	lfsr	2,2
  5142  000E90  5026               	movf	bsp_SoftTimerDec@_tmr,w,c
  5143  000E92  26D9               	addwf	fsr2l,f,c
  5144  000E94  5027               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5145  000E96  22DA               	addwfc	fsr2h,f,c
  5146  000E98  06DE               	decf	postinc2,f,c
  5147  000E9A  0E00               	movlw	0
  5148  000E9C  5ADD               	subwfb	postdec2,f,c
  5149  000E9E  50DE               	movf	postinc2,w,c
  5150  000EA0  10DE               	iorwf	postinc2,w,c
  5151  000EA2  A4D8               	btfss	status,2,c
  5152  000EA4  0012               	return	
  5153                           
  5154                           ;timer.c: 48: {
  5155                           ;timer.c: 49: _tmr->Flag = 1;
  5156  000EA6  EE20 F001          	lfsr	2,1
  5157  000EAA  5026               	movf	bsp_SoftTimerDec@_tmr,w,c
  5158  000EAC  26D9               	addwf	fsr2l,f,c
  5159  000EAE  5027               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5160  000EB0  22DA               	addwfc	fsr2h,f,c
  5161  000EB2  0E01               	movlw	1
  5162  000EB4  6EDF               	movwf	indf2,c
  5163                           
  5164                           ;timer.c: 52: if(_tmr->Mode == TMR_AUTO_MODE)
  5165  000EB6  C026  FFD9         	movff	bsp_SoftTimerDec@_tmr,fsr2l
  5166  000EBA  C027  FFDA         	movff	bsp_SoftTimerDec@_tmr+1,fsr2h
  5167  000EBE  04DE               	decf	postinc2,w,c
  5168  000EC0  A4D8               	btfss	status,2,c
  5169  000EC2  0012               	return	
  5170                           
  5171                           ;timer.c: 53: {
  5172                           ;timer.c: 54: _tmr->Count = _tmr->PreLoad;
  5173  000EC4  EE20 F004          	lfsr	2,4
  5174  000EC8  5026               	movf	bsp_SoftTimerDec@_tmr,w,c
  5175  000ECA  26D9               	addwf	fsr2l,f,c
  5176  000ECC  5027               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5177  000ECE  22DA               	addwfc	fsr2h,f,c
  5178  000ED0  EE10 F002          	lfsr	1,2
  5179  000ED4  5026               	movf	bsp_SoftTimerDec@_tmr,w,c
  5180  000ED6  26E1               	addwf	fsr1l,f,c
  5181  000ED8  5027               	movf	bsp_SoftTimerDec@_tmr+1,w,c
  5182  000EDA  22E2               	addwfc	fsr1h,f,c
  5183  000EDC  CFDE FFE6          	movff	postinc2,postinc1
  5184  000EE0  CFDD FFE5          	movff	postdec2,postdec1
  5185  000EE4  0012               	return	
  5186  000EE6  0012               	return		;funcret
  5187  000EE8                     __end_of_bsp_SoftTimerDec:
  5188                           	opt stack 0
  5189                           pclatu	equ	0xFFB
  5190                           pclath	equ	0xFFA
  5191                           tblptru	equ	0xFF8
  5192                           tblptrh	equ	0xFF7
  5193                           tblptrl	equ	0xFF6
  5194                           tablat	equ	0xFF5
  5195                           prodh	equ	0xFF4
  5196                           prodl	equ	0xFF3
  5197                           intcon	equ	0xFF2
  5198                           intcon2	equ	0xFF1
  5199                           postinc0	equ	0xFEE
  5200                           fsr0h	equ	0xFEA
  5201                           fsr0l	equ	0xFE9
  5202                           wreg	equ	0xFE8
  5203                           postinc1	equ	0xFE6
  5204                           postdec1	equ	0xFE5
  5205                           fsr1h	equ	0xFE2
  5206                           fsr1l	equ	0xFE1
  5207                           bsr	equ	0xFE0
  5208                           indf2	equ	0xFDF
  5209                           postinc2	equ	0xFDE
  5210                           postdec2	equ	0xFDD
  5211                           fsr2h	equ	0xFDA
  5212                           fsr2l	equ	0xFD9
  5213                           status	equ	0xFD8
  5214                           
  5215 ;; *************** function _High_ISR *****************
  5216 ;; Defined at:
  5217 ;;		line 286 in file "source/ecan.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;		None               void
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;Total ram usage:       14 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    1
  5238 ;; This function calls:
  5239 ;;		_ECAN_Receive
  5240 ;; This function is called by:
  5241 ;;		Interrupt level 2
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	intcode
  5246  000008                     __pintcode:
  5247                           	opt stack 0
  5248  000008                     _High_ISR:
  5249                           	opt stack 21
  5250                           
  5251                           ;incstack = 0
  5252  000008  CFFA F0A7          	movff	pclath,??_High_ISR
  5253  00000C  CFFB F0A8          	movff	pclatu,??_High_ISR+1
  5254  000010  CFE9 F0A9          	movff	fsr0l,??_High_ISR+2
  5255  000014  EFBF  F005         	goto	int_func
  5256                           pclatu	equ	0xFFB
  5257                           pclath	equ	0xFFA
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           intcon	equ	0xFF2
  5265                           intcon2	equ	0xFF1
  5266                           postinc0	equ	0xFEE
  5267                           fsr0h	equ	0xFEA
  5268                           fsr0l	equ	0xFE9
  5269                           wreg	equ	0xFE8
  5270                           postinc1	equ	0xFE6
  5271                           postdec1	equ	0xFE5
  5272                           fsr1h	equ	0xFE2
  5273                           fsr1l	equ	0xFE1
  5274                           bsr	equ	0xFE0
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           fsr2h	equ	0xFDA
  5279                           fsr2l	equ	0xFD9
  5280                           status	equ	0xFD8
  5281                           
  5282                           	psect	intcode_body
  5283  000B7E                     __pintcode_body:
  5284                           	opt stack 21
  5285  000B7E                     int_func:
  5286                           	opt stack 21
  5287  000B7E  CFEA F0AA          	movff	fsr0h,??_High_ISR+3
  5288  000B82  CFE1 F0AB          	movff	fsr1l,??_High_ISR+4
  5289  000B86  CFE2 F0AC          	movff	fsr1h,??_High_ISR+5
  5290  000B8A  CFD9 F0AD          	movff	fsr2l,??_High_ISR+6
  5291  000B8E  CFDA F0AE          	movff	fsr2h,??_High_ISR+7
  5292  000B92  CFF3 F0AF          	movff	prodl,??_High_ISR+8
  5293  000B96  CFF4 F0B0          	movff	prodh,??_High_ISR+9
  5294  000B9A  CFF6 F0B1          	movff	tblptrl,??_High_ISR+10
  5295  000B9E  CFF7 F0B2          	movff	tblptrh,??_High_ISR+11
  5296  000BA2  CFF8 F0B3          	movff	tblptru,??_High_ISR+12
  5297  000BA6  CFF5 F0B4          	movff	tablat,??_High_ISR+13
  5298                           
  5299                           ;ecan.c: 291: if(PIR5bits.WAKIF==1)
  5300  000BAA  BC77               	btfsc	3959,6,c	;volatile
  5301                           
  5302                           ;ecan.c: 292: {
  5303                           ;ecan.c: 293: PIR5bits.WAKIF = 0;
  5304  000BAC  9C77               	bcf	3959,6,c	;volatile
  5305                           
  5306                           ;ecan.c: 294: }
  5307                           ;ecan.c: 328: if(PIR5bits.RXB0IF==1)
  5308  000BAE  A077               	btfss	3959,0,c	;volatile
  5309  000BB0  D02C               	goto	i2l477
  5310                           
  5311                           ;ecan.c: 329: {
  5312                           ;ecan.c: 330: PIR5bits.RXB0IF=0;
  5313  000BB2  9077               	bcf	3959,0,c	;volatile
  5314                           
  5315                           ;ecan.c: 339: ECAN_Receive(&g_tCanRxMsg);
  5316  000BB4  0E88               	movlw	low _g_tCanRxMsg
  5317  000BB6  6E3C               	movwf	ECAN_Receive@RxMessage,c
  5318  000BB8  0E00               	movlw	high _g_tCanRxMsg
  5319  000BBA  6E3D               	movwf	ECAN_Receive@RxMessage+1,c
  5320  000BBC  EC61  F004         	call	_ECAN_Receive	;wreg free
  5321                           
  5322                           ;ecan.c: 344: if ((g_tCanRxMsg.StdId == 0X110) && (g_tCanRxMsg.IDE == 0X00) && (g_tCanRx
      +                          Msg.DLC == 0x08))
  5323  000BC0  0E10               	movlw	16
  5324  000BC2  0100               	movlb	0	; () banked
  5325  000BC4  1988               	xorwf	_g_tCanRxMsg& (0+255),w,b
  5326  000BC6  E121               	bnz	i2l477
  5327  000BC8  0100               	movlb	0	; () banked
  5328  000BCA  0589               	decf	(_g_tCanRxMsg+1)& (0+255),w,b
  5329  000BCC  A4D8               	btfss	status,2,c
  5330  000BCE  D01D               	goto	i2l477
  5331                           
  5332                           ; BSR set to: 0
  5333  000BD0  0100               	movlb	0	; () banked
  5334  000BD2  518C               	movf	(_g_tCanRxMsg+4)& (0+255),w,b
  5335  000BD4  A4D8               	btfss	status,2,c
  5336  000BD6  D019               	goto	i2l477
  5337                           
  5338                           ; BSR set to: 0
  5339  000BD8  0E08               	movlw	8
  5340  000BDA  0100               	movlb	0	; () banked
  5341  000BDC  198E               	xorwf	(_g_tCanRxMsg+6)& (0+255),w,b
  5342  000BDE  A4D8               	btfss	status,2,c
  5343  000BE0  D014               	goto	i2l477
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;ecan.c: 345: {
  5347                           ;ecan.c: 347: if(((g_tCanRxMsg.Data[5]&(0x02u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x08u)) 
      +                          == 0))
  5348  000BE2  0100               	movlb	0	; () banked
  5349  000BE4  A394               	btfss	(_g_tCanRxMsg+12)& (0+255),1,b
  5350  000BE6  D003               	goto	i2l3470
  5351                           
  5352                           ; BSR set to: 0
  5353  000BE8  0100               	movlb	0	; () banked
  5354  000BEA  B794               	btfsc	(_g_tCanRxMsg+12)& (0+255),3,b
  5355  000BEC  D002               	goto	i2l3472
  5356  000BEE                     i2l3470:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;ecan.c: 348: {
  5360                           ;ecan.c: 349: SysRunData.PedalRunFlag |= (1<<0);
  5361  000BEE  8019               	bsf	_SysRunData+21,0,c
  5362                           
  5363                           ;ecan.c: 350: }
  5364  000BF0  D002               	goto	i2l3474
  5365  000BF2                     i2l3472:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;ecan.c: 351: else
  5369                           ;ecan.c: 352: {
  5370                           ;ecan.c: 353: SysRunData.PedalRunFlag &= ~(1<<0);
  5371  000BF2  9019               	bcf	_SysRunData+21,0,c
  5372  000BF4  D000               	goto	i2l3474
  5373  000BF6                     i2l3474:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;ecan.c: 354: }
  5377                           ;ecan.c: 356: if(((g_tCanRxMsg.Data[5]&(0x01u)) == 0) || ((g_tCanRxMsg.Data[5]&(0x04u)) 
      +                          == 0))
  5378  000BF6  0100               	movlb	0	; () banked
  5379  000BF8  A194               	btfss	(_g_tCanRxMsg+12)& (0+255),0,b
  5380  000BFA  D003               	goto	i2l3478
  5381                           
  5382                           ; BSR set to: 0
  5383  000BFC  0100               	movlb	0	; () banked
  5384  000BFE  B594               	btfsc	(_g_tCanRxMsg+12)& (0+255),2,b
  5385  000C00  D002               	goto	i2l3480
  5386  000C02                     i2l3478:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;ecan.c: 357: {
  5390                           ;ecan.c: 358: SysRunData.PedalRunFlag |= (1<<1);
  5391  000C02  8219               	bsf	_SysRunData+21,1,c
  5392                           
  5393                           ;ecan.c: 359: }
  5394  000C04  D002               	goto	i2l477
  5395  000C06                     i2l3480:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;ecan.c: 360: else
  5399                           ;ecan.c: 361: {
  5400                           ;ecan.c: 362: SysRunData.PedalRunFlag &= ~(1<<1);
  5401  000C06  9219               	bcf	_SysRunData+21,1,c
  5402                           
  5403                           ; BSR set to: 0
  5404                           
  5405                           ; BSR set to: 0
  5406  000C08  D000               	goto	i2l477
  5407  000C0A                     i2l477:
  5408  000C0A  C0B4  FFF5         	movff	??_High_ISR+13,tablat
  5409  000C0E  C0B3  FFF8         	movff	??_High_ISR+12,tblptru
  5410  000C12  C0B2  FFF7         	movff	??_High_ISR+11,tblptrh
  5411  000C16  C0B1  FFF6         	movff	??_High_ISR+10,tblptrl
  5412  000C1A  C0B0  FFF4         	movff	??_High_ISR+9,prodh
  5413  000C1E  C0AF  FFF3         	movff	??_High_ISR+8,prodl
  5414  000C22  C0AE  FFDA         	movff	??_High_ISR+7,fsr2h
  5415  000C26  C0AD  FFD9         	movff	??_High_ISR+6,fsr2l
  5416  000C2A  C0AC  FFE2         	movff	??_High_ISR+5,fsr1h
  5417  000C2E  C0AB  FFE1         	movff	??_High_ISR+4,fsr1l
  5418  000C32  C0AA  FFEA         	movff	??_High_ISR+3,fsr0h
  5419  000C36  C0A9  FFE9         	movff	??_High_ISR+2,fsr0l
  5420  000C3A  C0A8  FFFB         	movff	??_High_ISR+1,pclatu
  5421  000C3E  C0A7  FFFA         	movff	??_High_ISR,pclath
  5422  000C42  0011               	retfie		f
  5423  000C44                     __end_of_High_ISR:
  5424                           	opt stack 0
  5425                           pclatu	equ	0xFFB
  5426                           pclath	equ	0xFFA
  5427                           tblptru	equ	0xFF8
  5428                           tblptrh	equ	0xFF7
  5429                           tblptrl	equ	0xFF6
  5430                           tablat	equ	0xFF5
  5431                           prodh	equ	0xFF4
  5432                           prodl	equ	0xFF3
  5433                           intcon	equ	0xFF2
  5434                           intcon2	equ	0xFF1
  5435                           postinc0	equ	0xFEE
  5436                           fsr0h	equ	0xFEA
  5437                           fsr0l	equ	0xFE9
  5438                           wreg	equ	0xFE8
  5439                           postinc1	equ	0xFE6
  5440                           postdec1	equ	0xFE5
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           bsr	equ	0xFE0
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _ECAN_Receive *****************
  5452 ;; Defined at:
  5453 ;;		line 164 in file "source/ecan.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  RxMessage       2   22[COMRAM] PTR struct .
  5456 ;;		 -> g_tCanRxMsg(16), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;		None               void
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:        6 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_High_ISR
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text28
  5482  0008C2                     __ptext28:
  5483                           	opt stack 0
  5484  0008C2                     _ECAN_Receive:
  5485                           	opt stack 21
  5486                           
  5487                           ;ecan.c: 166: if (RXB0CONbits.RXFUL)
  5488                           
  5489                           ;incstack = 0
  5490  0008C2  AE60               	btfss	3936,7,c	;volatile
  5491  0008C4  0012               	return	
  5492                           
  5493                           ;ecan.c: 169: {
  5494                           ;ecan.c: 171: RxMessage->IDE = RXB0SIDLbits.EXID;
  5495  0008C6  EE20 F004          	lfsr	2,4
  5496  0008CA  503C               	movf	ECAN_Receive@RxMessage,w,c
  5497  0008CC  26D9               	addwf	fsr2l,f,c
  5498  0008CE  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5499  0008D0  22DA               	addwfc	fsr2h,f,c
  5500  0008D2  A662               	btfss	3938,3,c	;volatile
  5501  0008D4  D002               	goto	i2u176_40
  5502  0008D6  0E01               	movlw	1
  5503  0008D8  D001               	goto	i2u176_46
  5504  0008DA                     i2u176_40:
  5505  0008DA  0E00               	movlw	0
  5506  0008DC                     i2u176_46:
  5507  0008DC  6EDF               	movwf	indf2,c
  5508                           
  5509                           ;ecan.c: 172: if (RxMessage->IDE == 0X00)
  5510  0008DE  EE20 F004          	lfsr	2,4
  5511  0008E2  503C               	movf	ECAN_Receive@RxMessage,w,c
  5512  0008E4  26D9               	addwf	fsr2l,f,c
  5513  0008E6  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5514  0008E8  22DA               	addwfc	fsr2h,f,c
  5515  0008EA  50DF               	movf	indf2,w,c
  5516  0008EC  A4D8               	btfss	status,2,c
  5517  0008EE  D021               	goto	i2l2690
  5518                           
  5519                           ;ecan.c: 173: {
  5520                           ;ecan.c: 174: RxMessage->StdId = (uint16_t)RXB0SIDH<<3 | (RXB0SIDL>>5);
  5521  0008F0  CF62 F03E          	movff	3938,??_ECAN_Receive	;volatile
  5522  0008F4  0E05               	movlw	5
  5523  0008F6  6E3F               	movwf	(??_ECAN_Receive+1)& (0+255),c
  5524  0008F8                     i2u178_45:
  5525  0008F8  90D8               	bcf	status,0,c
  5526  0008FA  323E               	rrcf	??_ECAN_Receive,f,c
  5527  0008FC  2E3F               	decfsz	(??_ECAN_Receive+1)& (0+255),f,c
  5528  0008FE  D7FC               	goto	i2u178_45
  5529  000900  503E               	movf	??_ECAN_Receive,w,c
  5530  000902  CF61 F040          	movff	3937,??_ECAN_Receive+2	;volatile
  5531  000906  6A41               	clrf	(??_ECAN_Receive+3)& (0+255),c
  5532  000908  90D8               	bcf	status,0,c
  5533  00090A  3640               	rlcf	??_ECAN_Receive+2,f,c
  5534  00090C  3641               	rlcf	??_ECAN_Receive+3,f,c
  5535  00090E  90D8               	bcf	status,0,c
  5536  000910  3640               	rlcf	??_ECAN_Receive+2,f,c
  5537  000912  3641               	rlcf	??_ECAN_Receive+3,f,c
  5538  000914  90D8               	bcf	status,0,c
  5539  000916  3640               	rlcf	??_ECAN_Receive+2,f,c
  5540  000918  3641               	rlcf	??_ECAN_Receive+3,f,c
  5541  00091A  1240               	iorwf	??_ECAN_Receive+2,f,c
  5542  00091C  0E00               	movlw	0
  5543  00091E  1241               	iorwf	??_ECAN_Receive+3,f,c
  5544  000920  C03C  FFD9         	movff	ECAN_Receive@RxMessage,fsr2l
  5545  000924  C03D  FFDA         	movff	ECAN_Receive@RxMessage+1,fsr2h
  5546  000928  C040  FFDE         	movff	??_ECAN_Receive+2,postinc2
  5547  00092C  C041  FFDD         	movff	??_ECAN_Receive+3,postdec2
  5548                           
  5549                           ;ecan.c: 175: }
  5550  000930  D000               	goto	i2l2690
  5551  000932                     i2l2690:
  5552                           
  5553                           ;ecan.c: 179: }
  5554                           ;ecan.c: 181: RxMessage->RTR = RXB0DLCbits.RXRTR;
  5555  000932  EE20 F005          	lfsr	2,5
  5556  000936  503C               	movf	ECAN_Receive@RxMessage,w,c
  5557  000938  26D9               	addwf	fsr2l,f,c
  5558  00093A  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5559  00093C  22DA               	addwfc	fsr2h,f,c
  5560  00093E  AC65               	btfss	3941,6,c	;volatile
  5561  000940  D002               	goto	i2u179_40
  5562  000942  0E01               	movlw	1
  5563  000944  D001               	goto	i2u179_46
  5564  000946                     i2u179_40:
  5565  000946  0E00               	movlw	0
  5566  000948                     i2u179_46:
  5567  000948  6EDF               	movwf	indf2,c
  5568                           
  5569                           ;ecan.c: 183: RxMessage->DLC = RXB0DLC&0x0F;
  5570  00094A  EE20 F006          	lfsr	2,6
  5571  00094E  503C               	movf	ECAN_Receive@RxMessage,w,c
  5572  000950  26D9               	addwf	fsr2l,f,c
  5573  000952  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5574  000954  22DA               	addwfc	fsr2h,f,c
  5575  000956  5065               	movf	3941,w,c	;volatile
  5576  000958  0B0F               	andlw	15
  5577  00095A  6EDF               	movwf	indf2,c
  5578                           
  5579                           ;ecan.c: 187: RxMessage->Data[0] = RXB0D0;
  5580  00095C  EE20 F007          	lfsr	2,7
  5581  000960  503C               	movf	ECAN_Receive@RxMessage,w,c
  5582  000962  26D9               	addwf	fsr2l,f,c
  5583  000964  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5584  000966  22DA               	addwfc	fsr2h,f,c
  5585  000968  CF66 FFDF          	movff	3942,indf2	;volatile
  5586                           
  5587                           ;ecan.c: 188: RxMessage->Data[1] = RXB0D1;
  5588  00096C  EE20 F008          	lfsr	2,8
  5589  000970  503C               	movf	ECAN_Receive@RxMessage,w,c
  5590  000972  26D9               	addwf	fsr2l,f,c
  5591  000974  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5592  000976  22DA               	addwfc	fsr2h,f,c
  5593  000978  CF67 FFDF          	movff	3943,indf2	;volatile
  5594                           
  5595                           ;ecan.c: 189: RxMessage->Data[2] = RXB0D2;
  5596  00097C  EE20 F009          	lfsr	2,9
  5597  000980  503C               	movf	ECAN_Receive@RxMessage,w,c
  5598  000982  26D9               	addwf	fsr2l,f,c
  5599  000984  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5600  000986  22DA               	addwfc	fsr2h,f,c
  5601  000988  CF68 FFDF          	movff	3944,indf2	;volatile
  5602                           
  5603                           ;ecan.c: 190: RxMessage->Data[3] = RXB0D3;
  5604  00098C  EE20 F00A          	lfsr	2,10
  5605  000990  503C               	movf	ECAN_Receive@RxMessage,w,c
  5606  000992  26D9               	addwf	fsr2l,f,c
  5607  000994  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5608  000996  22DA               	addwfc	fsr2h,f,c
  5609  000998  CF69 FFDF          	movff	3945,indf2	;volatile
  5610                           
  5611                           ;ecan.c: 191: RxMessage->Data[4] = RXB0D4;
  5612  00099C  EE20 F00B          	lfsr	2,11
  5613  0009A0  503C               	movf	ECAN_Receive@RxMessage,w,c
  5614  0009A2  26D9               	addwf	fsr2l,f,c
  5615  0009A4  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5616  0009A6  22DA               	addwfc	fsr2h,f,c
  5617  0009A8  CF6A FFDF          	movff	3946,indf2	;volatile
  5618                           
  5619                           ;ecan.c: 192: RxMessage->Data[5] = RXB0D5;
  5620  0009AC  EE20 F00C          	lfsr	2,12
  5621  0009B0  503C               	movf	ECAN_Receive@RxMessage,w,c
  5622  0009B2  26D9               	addwf	fsr2l,f,c
  5623  0009B4  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5624  0009B6  22DA               	addwfc	fsr2h,f,c
  5625  0009B8  CF6B FFDF          	movff	3947,indf2	;volatile
  5626                           
  5627                           ;ecan.c: 193: RxMessage->Data[6] = RXB0D6;
  5628  0009BC  EE20 F00D          	lfsr	2,13
  5629  0009C0  503C               	movf	ECAN_Receive@RxMessage,w,c
  5630  0009C2  26D9               	addwf	fsr2l,f,c
  5631  0009C4  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5632  0009C6  22DA               	addwfc	fsr2h,f,c
  5633  0009C8  CF6C FFDF          	movff	3948,indf2	;volatile
  5634                           
  5635                           ;ecan.c: 194: RxMessage->Data[7] = RXB0D7;
  5636  0009CC  EE20 F00E          	lfsr	2,14
  5637  0009D0  503C               	movf	ECAN_Receive@RxMessage,w,c
  5638  0009D2  26D9               	addwf	fsr2l,f,c
  5639  0009D4  503D               	movf	ECAN_Receive@RxMessage+1,w,c
  5640  0009D6  22DA               	addwfc	fsr2h,f,c
  5641  0009D8  CF6D FFDF          	movff	3949,indf2	;volatile
  5642                           
  5643                           ;ecan.c: 195: RXB0CONbits.RXFUL = 0;
  5644  0009DC  9E60               	bcf	3936,7,c	;volatile
  5645  0009DE  0012               	return	
  5646  0009E0  0012               	return		;funcret
  5647  0009E2                     __end_of_ECAN_Receive:
  5648                           	opt stack 0
  5649  0000                     pclatu	equ	0xFFB
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           intcon2	equ	0xFF1
  5659                           postinc0	equ	0xFEE
  5660                           fsr0h	equ	0xFEA
  5661                           fsr0l	equ	0xFE9
  5662                           wreg	equ	0xFE8
  5663                           postinc1	equ	0xFE6
  5664                           postdec1	equ	0xFE5
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           bsr	equ	0xFE0
  5668                           indf2	equ	0xFDF
  5669                           postinc2	equ	0xFDE
  5670                           postdec2	equ	0xFDD
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           pclatu	equ	0xFFB
  5675                           pclath	equ	0xFFA
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           intcon	equ	0xFF2
  5683                           intcon2	equ	0xFF1
  5684                           postinc0	equ	0xFEE
  5685                           fsr0h	equ	0xFEA
  5686                           fsr0l	equ	0xFE9
  5687                           wreg	equ	0xFE8
  5688                           postinc1	equ	0xFE6
  5689                           postdec1	equ	0xFE5
  5690                           fsr1h	equ	0xFE2
  5691                           fsr1l	equ	0xFE1
  5692                           bsr	equ	0xFE0
  5693                           indf2	equ	0xFDF
  5694                           postinc2	equ	0xFDE
  5695                           postdec2	equ	0xFDD
  5696                           fsr2h	equ	0xFDA
  5697                           fsr2l	equ	0xFD9
  5698                           status	equ	0xFD8
  5699                           
  5700                           	psect	rparam
  5701  0000                     pclatu	equ	0xFFB
  5702                           pclath	equ	0xFFA
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           intcon2	equ	0xFF1
  5711                           postinc0	equ	0xFEE
  5712                           fsr0h	equ	0xFEA
  5713                           fsr0l	equ	0xFE9
  5714                           wreg	equ	0xFE8
  5715                           postinc1	equ	0xFE6
  5716                           postdec1	equ	0xFE5
  5717                           fsr1h	equ	0xFE2
  5718                           fsr1l	equ	0xFE1
  5719                           bsr	equ	0xFE0
  5720                           indf2	equ	0xFDF
  5721                           postinc2	equ	0xFDE
  5722                           postdec2	equ	0xFDD
  5723                           fsr2h	equ	0xFDA
  5724                           fsr2l	equ	0xFD9
  5725                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      67
    BANK0           160     49     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    bsp_SoftTimerDec@_tmr	PTR volatile struct . size(2) Largest target is 12
		 -> s_tTmr(COMRAM[12]), 

    ECAN_Receive@RxMessage	PTR struct . size(2) Largest target is 16
		 -> g_tCanRxMsg(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _High_ISR in COMRAM

    _High_ISR->_ECAN_Receive

Critical Paths under _Lows_ISR in COMRAM

    _Lows_ISR->_bsp_SoftTimerDec

Critical Paths under _main in BANK0

    _SysEnterSleep->_ADC_Cmd
    _App_System_Init->_ConfigTimer0
    _ConfigTimer0->___lldiv
    ___lldiv->___lmul
    _ADC_Init->_ADC_StartConversion
    _AdcPro->_ADC_GetConversionValue
    _AdcPro->___lwdiv

Critical Paths under _High_ISR in BANK0

    None.

Critical Paths under _Lows_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_ISR in BANK1

    None.

Critical Paths under _Lows_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_ISR in BANK2

    None.

Critical Paths under _Lows_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _High_ISR in BANK3

    None.

Critical Paths under _Lows_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _High_ISR in BANK4

    None.

Critical Paths under _Lows_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _High_ISR in BANK5

    None.

Critical Paths under _Lows_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _High_ISR in BANK6

    None.

Critical Paths under _Lows_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _High_ISR in BANK7

    None.

Critical Paths under _Lows_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _High_ISR in BANK8

    None.

Critical Paths under _Lows_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _High_ISR in BANK9

    None.

Critical Paths under _Lows_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _High_ISR in BANK10

    None.

Critical Paths under _Lows_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _High_ISR in BANK11

    None.

Critical Paths under _Lows_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _High_ISR in BANK12

    None.

Critical Paths under _Lows_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _High_ISR in BANK13

    None.

Critical Paths under _Lows_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _High_ISR in BANK14

    None.

Critical Paths under _Lows_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5743
                _AppTask_PollHandler
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _AppTask_PollHandler                                  0     0      0    3560
                             _AdcPro
                      _Pedal_Process
                     _bsp_CheckTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_CheckTimer                                       2     2      0      66
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Pedal_Process                                        0     0      0    2315
                         _Pedal_Back
                          _Pedal_Out
                         _Pedal_Stop
                 _SysNormalWaitSleep
 ---------------------------------------------------------------------------------
 (3) _SysNormalWaitSleep                                   0     0      0    2183
                    _App_System_Init
                      _SysEnterSleep
 ---------------------------------------------------------------------------------
 (1) _SysEnterSleep                                        0     0      0     423
                            _ADC_Cmd
                        _CAN_SetMode
 ---------------------------------------------------------------------------------
 (1) _App_System_Init                                      0     0      0    1760
                            _ADC_Cmd
                           _ADC_Init
                        _CAN_SetMode
                       _ConfigTimer0
                          _ECAN_Init
                          _PORT_Init
                           _RLY_Init
                        _SetSysClock
                 _bsp_StartAutoTimer
 ---------------------------------------------------------------------------------
 (2) _bsp_StartAutoTimer                                   3     1      2     371
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SetSysClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RLY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigTimer0                                        10     8      2     935
                                             39 BANK0     10     8      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                             26 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CAN_SetMode                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0      31
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Cmd                                              2     1      1     401
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _Pedal_Stop                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Out                                            1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Pedal_Back                                           1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _AdcPro                                               3     3      0    1179
                                             21 BANK0      3     3      0
             _ADC_GetConversionValue
                _ADC_StartConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  2     2      0      31
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversionValue                               7     5      2      37
                                             14 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lows_ISR                                            18    18      0     264
                                              4 COMRAM    18    18      0
                   _bsp_SoftTimerDec
 ---------------------------------------------------------------------------------
 (8) _bsp_SoftTimerDec                                     4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _High_ISR                                            14    14      0     350
                                              0 BANK0     14    14      0
                       _ECAN_Receive
 ---------------------------------------------------------------------------------
 (10) _ECAN_Receive                                        6     4      2     350
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppTask_PollHandler
     _AdcPro
       _ADC_GetConversionValue
       _ADC_StartConversion
       ___lwdiv
     _Pedal_Process
       _Pedal_Back
       _Pedal_Out
       _Pedal_Stop
       _SysNormalWaitSleep
         _App_System_Init
           _ADC_Cmd
           _ADC_Init
             _ADC_StartConversion
           _CAN_SetMode
           _ConfigTimer0
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _ECAN_Init
           _PORT_Init
           _RLY_Init
           _SetSysClock
           _bsp_StartAutoTimer
         _SysEnterSleep
           _ADC_Cmd
           _CAN_SetMode
     _bsp_CheckTimer
   _App_System_Init
     _ADC_Cmd
     _ADC_Init
       _ADC_StartConversion
     _CAN_SetMode
     _ConfigTimer0
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _ECAN_Init
     _PORT_Init
     _RLY_Init
     _SetSysClock
     _bsp_StartAutoTimer
   _SysEnterSleep
     _ADC_Cmd
     _CAN_SetMode

 _Lows_ISR (ROOT)
   _bsp_SoftTimerDec

 _High_ISR (ROOT)
   _ECAN_Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      78       5       75.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      43       1       70.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB       6        0.0%
DATA                 0      0      BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 27 22:25:57 2017

                                l52 10C8                                  l29 1182  
                                l59 10D8            __size_of_App_System_Init 0068  
               _AppTask_PollHandler 10DE                                  bsr 000FE0  
                       __CFG_BORV$3 000000                  __size_of_ECAN_Init 00A8  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                               l157 03C2                                 l272 08B4  
                               l441 1210                                 l425 0C8C  
                               l417 0C48                                 l514 0CFA  
                               l419 0C4C                                 l612 1128  
                               l516 0CF8                                 l606 1118  
                               l560 11AC                                 l570 11C0  
                               l562 11B0                                 l564 11B4  
                               l566 11B8                                 l558 11A8  
                               l592 1168                                 l584 1150  
                               l568 11BC                                 l578 1140  
                               l598 1178                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                     __end_of_ADC_Cmd 10DE  
                               prod 000FF3                                 wreg 000FE8  
                     _SysEnterSleep 0F50                                l1135 0DF4  
                              l1072 0B6C                                l3010 07B4  
                              l3002 0774                                l3020 07EA  
                              l3014 07BE                                l1262 0C50  
                              l2080 0AF8                                l1272 0C72  
                              l1264 0C56                                l3104 019A  
                              l3034 0854                                l3026 0814  
                              l2090 0B58                                l2082 0B02  
                              l3210 0346                                l3044 088A  
                              l3220 0370                                l3212 0352  
                              l3204 0322                                l3038 085E  
                              l2078 0AE6                                l1278 0CD6  
                              l3222 037A                                l3126 01E8  
                              l3118 01D0                                l3070 0116  
                              l3134 01F6                                l3230 038E  
                              l3400 064E                                l3144 0238  
                              l3136 0220                                l3056 00E2  
                              l3250 03FE                                l3234 03CA  
                              l3226 0384                                l3090 016A  
                              l3412 0678                                l3308 04D8  
                              l3316 04E6                                l3180 02C4  
                              l3068 0112                                l3406 0664  
                              l3342 055C                                l3326 0528  
                              l3318 0510                                l3270 0452  
                              l3158 026A                                l3424 06CE  
                              l3408 066E                                l3416 0682  
                              l3192 02F2                                l2802 0E12  
                              l3418 06B6                                l3186 02DE  
                              l3098 0186                                l3450 11F4  
                              l3380 05EC                                l3364 05B6  
                              l3284 0482                                l2806 0E3A  
                              l3374 05D8                                l3278 046E  
                              l2912 1144                                l3392 061C  
                              l2818 10CC                                l3298 04B8  
                              l2916 116C                                l2908 111C  
                              l2932 1036                                l2942 0D9A  
                              l3398 0642                                l2944 0DA8  
                              l2954 0DE4                                l2946 0DB2  
                              l2964 0FBC                                l2990 071E  
                              l2894 0F92                                l2974 0FFE  
                              l2986 0714                                l2996 074A  
SysNormalWaitSleep@tempPedalRunFlag 0043                                _T0RH 0002  
                              _T0RL 0003                                u2410 0294  
                              u2330 0140                                u2510 0428  
                              u2430 02AC                                u2350 0158  
                              u2440 0302                                u2360 01AA  
                              u2610 059E                                u2530 0440  
                              u2620 05FC                                u2540 0492  
                              u2590 0586                                u2827 0FA4  
              ?_AppTask_PollHandler 0026                                _PIR5 000F77  
                   ConfigTimer0@tmp 00D4                  _bsp_StartAutoTimer 0CEC  
                              _main 11E6                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                  __end_of_ADC_Init 11A4                                pclat 000FFA  
                              prodh 000FF4                                prodl 000FF3  
                              start 00D6                       __CFG_IESO$OFF 000000  
                     __CFG_FOSC$HS1 000000                 ?_bsp_StartAutoTimer 00B5  
                     __CFG_MCLRE$ON 000000                        ___param_bank 000010  
                     _Pedal_Process 00DA                               ?_main 0026  
                   __end_of___lldiv 0B7E                               _T0CON 000FD5  
                             _LATC0 007C58                               _LATC1 007C59  
                             _LATB5 007C55                               _LATC4 007C5C  
                             _LATB6 007C56                               _LATB7 007C57  
                             _LATC7 007C5F                     __end_of___lwdiv 0DFE  
                             i1l537 0090                               i2l477 0C0A  
                             _TMR0H 000FD7                               _TMR0L 000FD6  
                             _TRISA 000F92                ??_bsp_StartAutoTimer 0042  
                     __CFG_WRT0$OFF 000000                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                 ___lmul@multiplicand 00B9  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                      ?_SysEnterSleep 0026  
              __size_of_CAN_SetMode 0018                      __CFG_EBTRB$OFF 000000  
                __size_of_PORT_Init 0002               ??_AppTask_PollHandler 0042  
                  __end_of_RLY_Init 11C6                      __CFG_BOREN$OFF 000000  
                             tablat 000FF5                   __end_of_ECAN_Init 0CEC  
                             status 000FD8               __size_of_ECAN_Receive 0120  
                  __end_of_High_ISR 0C44                          _Pedal_Back 1156  
                   __initialization 1042                          _Pedal_Stop 1106  
                    ?_Pedal_Process 0026                __end_of_ConfigTimer0 0AB8  
                      __end_of_main 11FE                           ??_ADC_Cmd 0042  
                            ??_main 0042                       __activetblptr 000002  
        ADC_StartConversion@channel 00B6                    __end_of_Lows_ISR 00D6  
                   CAN_SetMode@mode 00B5                      __CFG_RETEN$OFF 000000  
                 ??_App_System_Init 0042                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _CANCON 000F6F                              _ADRESH 000FC4  
                            _ADRESL 000FC3                              _ANCON0 000F5D  
                     ??_SetSysClock 0042                        _ECAN_Receive 08C2  
                   __CFG_BBSIZ$BB2K 000000                              i1l2784 006E  
                            i1l2788 0076                      __CFG_WDTEN$OFF 000000  
                            i2l3470 0BEE                              i2l3480 0C06  
                            i2l3472 0BF2                              i2l2690 0932  
                            i2l3474 0BF6                              i2l3478 0C02  
                            _RXB0D0 000F66                              _RXB0D1 000F67  
                            _RXB0D2 000F68                              _RXB0D3 000F69  
                            _RXB0D4 000F6A                              _RXB0D5 000F6B  
                            _RXB0D6 000F6C                              _RXB0D7 000F6D  
                    __CFG_WDTPS$256 000000                              _TXB0D0 000F26  
                            _TXB0D1 000F27                              _TXB0D2 000F28  
                            _TXB0D3 000F29                              _TXB0D4 000F2A  
                            _TXB0D5 000F2B                              _TXB0D6 000F2C  
                            _TXB0D7 000F2D                  __size_of_Pedal_Out 0028  
                            _TRISC0 007CA0                              _TRISB2 007C9A  
                            _TRISC1 007CA1                              _TRISB3 007C9B  
                            _TRISB5 007C9D                              _TRISC4 007CA4  
                            _TRISB6 007C9E                              _TRISB7 007C9F  
                            _TRISC7 007CA7                              _AdcPro 06D6  
                  _bsp_SoftTimerDec 0E78                      __CFG_XINST$OFF 000000  
       __size_of_SysNormalWaitSleep 003E                              ___lmul 0DFE  
                      Pedal_Out@dir 00B5                           ??___lldiv 0042  
                         ??___lwdiv 0042                   __end_of_PORT_Init 121E  
                            _s_tTmr 001A                              clear_0 1048  
                            clear_1 1054                        __pdataCOMRAM 0042  
                   ??_SysEnterSleep 0042                           ?_ADC_Init 0026  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                   bsp_CheckTimer@_id 00B6  
                   __CFG_BORPWR$LOW 000000                          __accesstop 0060  
           __end_of__initialization 1072                       ___rparam_used 000001  
               __end_of_SetSysClock 121A                     ??_Pedal_Process 0042  
                       ?_Pedal_Back 0026                          _SysRunData 0004  
                       ?_Pedal_Stop 0026        __size_of_ADC_StartConversion 0020  
                    __pcstackCOMRAM 0026                           ?_RLY_Init 0026  
                 __end_of_Pedal_Out 1156    ADC_GetConversionValue@ADC_Result 00BA  
                        ??_ADC_Init 0042                           ?_High_ISR 0026  
                        __pbssBANK0 0060                     __CFG_PLLCFG$OFF 000000  
                           ?_AdcPro 0026               __size_of_ConfigTimer0 00D6  
                         ?_Lows_ISR 0026                             ?___lmul 00B5  
                        ADC_Cmd@sta 00B5                             AdcPro@i 00BE  
                           _ECANCON 000F72                             _ADC_Cmd 10AE  
                    ___lmul@product 00BD                          ??_RLY_Init 0042  
                           _BRGCON1 000E43                             _BRGCON2 000E44  
                           _BRGCON3 000E45                    __CFG_CANMX$PORTB 000000  
                     Pedal_Back@dir 00B5                             _RXB0DLC 000F65  
                           _RXB0CON 000F60                 __size_of_Pedal_Back 0028  
                           _TXB0DLC 000F25                             _TXB0CON 000F20  
                        ??_High_ISR 00A7                             _RXFCON0 000E46  
                           _RXFCON1 000E47                 __size_of_Pedal_Stop 0028  
                      _ConfigTimer0 09E2                         _SetSysClock 1216  
                         AdcPro@buf 0060                           AdcPro@sum 00BC  
                   __size_of_AdcPro 01EC                     __CFG_PWRTEN$OFF 000000  
                    ADC_Cmd@channel 00B6                             __Hparam 0000  
                        ??_Lows_ISR 002A                           _ECAN_Init 0C44  
                           __Lparam 0000                     _App_System_Init 0EE8  
                   __size_of___lmul 007A                             ___lldiv 0AB8  
                           ___lwdiv 0D7C            ??_ADC_GetConversionValue 00B7  
                   __CFG_STVREN$OFF 000000                             __pcinit 1042  
                           __ramtop 0F00                             __ptext0 11E6  
                           __ptext1 10DE                             __ptext2 0FAC  
                           __ptext3 00DA                             __ptext4 1004  
                           __ptext5 0F50                             __ptext6 0EE8  
                           __ptext7 0CEC                             __ptext8 1216  
                           __ptext9 11A4                           _T0CONbits 000FD5  
           __size_of_bsp_CheckTimer 0058                       Pedal_Stop@dir 00B5  
                     ??_CAN_SetMode 0042            __end_of_bsp_SoftTimerDec 0EE8  
       __end_of_AppTask_PollHandler 1106         __size_of_bsp_StartAutoTimer 0090  
                 __CFG_MSSPMSK$MSK7 000000                      __pintcode_body 0B7E  
                __CFG_INTOSCSEL$LOW 000000                end_of_initialization 1072  
                     __Lmediumconst 0000                             int_func 0B7E  
                   ___lldiv@divisor 00C5                          ?_ECAN_Init 0026  
                   ___lldiv@counter 00CD                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                         _PORT_Init 121C                 _ADC_StartConversion 11C6  
                 __size_of_ADC_Init 0026                 __end_of_CAN_SetMode 1216  
                       AdcPro@index 0042                      ConfigTimer0@ms 00CE  
                       AdcPro@write 0001             __end_of_App_System_Init 0F50  
        __end_of_SysNormalWaitSleep 1042                      __end_of_AdcPro 08C2  
                      ??_Pedal_Back 0042                        ??_Pedal_Stop 0042  
              ?_ADC_StartConversion 0026                      __end_of___lmul 0E78  
   __size_of_ADC_GetConversionValue 0032                       __pidataCOMRAM 121A  
                        ?_PORT_Init 0026                   __size_of_RLY_Init 0022  
               start_initialization 1042                           _Pedal_Out 112E  
             __end_of_SysEnterSleep 0FAC                  __end_of_Pedal_Back 117E  
                __end_of_Pedal_Stop 112E                           Lows_ISR@i 003B  
                       _CANSTATbits 000F6E                   __size_of_High_ISR 0C3C  
                          ??_AdcPro 0042                         ??_ECAN_Init 0042  
             ??_ADC_StartConversion 00B5               __end_of_Pedal_Process 06D6  
                          ??___lmul 0042                   __size_of_Lows_ISR 00BE  
                       _g_tCanRxMsg 0088                         _g_tCanTxMsg 0098  
                          ?_ADC_Cmd 00B5                      _bsp_CheckTimer 0FAC  
                       _CAN_SetMode 11FE                         __pbssCOMRAM 0001  
                     __pcstackBANK0 00A7                          ?_Pedal_Out 0026  
                      ?_SetSysClock 0026              _ADC_GetConversionValue 107C  
                  ?_App_System_Init 0026                    ___lwdiv@dividend 00B5  
                         __pintcode 0008                            ?___lldiv 00C1  
                          ?___lwdiv 00B5              __end_of_bsp_CheckTimer 1004  
                       __pintcodelo 0018                         ??_PORT_Init 0042  
                          _ADC_Init 117E                   ?_bsp_SoftTimerDec 0026  
                  ___lwdiv@quotient 00BA                  ??_bsp_SoftTimerDec 0028  
                     ?_ECAN_Receive 003C                            _IPR5bits 000F78  
                          _PIE5bits 000F76                            i2u176_40 08DA  
                          i2u176_46 08DC                            i2u178_45 08F8  
                          i2u179_40 0946                            i2u179_46 0948  
                          _PIR5bits 000F77                            _RCONbits 000FD0  
                          _RXB0SIDH 000F61                            _RXB0SIDL 000F62  
                          _RXF0EIDH 000EE2                            _RXF0EIDL 000EE3  
                          _RXF0SIDH 000EE0                            _RXF0SIDL 000EE1  
                          _RXM0EIDH 000EFA                            _RXM0EIDL 000EFB  
                          _TXB0SIDH 000F21                            _TXB0SIDL 000F22  
                          _RXM0SIDH 000EF8                            _RXM0SIDL 000EF9  
                   ?_bsp_CheckTimer 0026                bsp_SoftTimerDec@_tmr 0026  
                  __size_of_ADC_Cmd 0030                            _RLY_Init 11A4  
                        _ADCON0bits 000FC2                    __CFG_SOSCSEL$DIG 000000  
        __end_of_bsp_StartAutoTimer 0D7C                         ??_Pedal_Out 0042  
                          _High_ISR 0008                      ??_ECAN_Receive 003E  
                 ___lmul@multiplier 00B5                         _INTCON2bits 000FF1  
      __size_of_AppTask_PollHandler 0028                            __Hrparam 0000  
                      _RXB0SIDLbits 000F62                            _Lows_ISR 0018  
                          __Lrparam 0000                    __size_of___lldiv 00C6  
                  __size_of___lwdiv 0082                  _SysNormalWaitSleep 1004  
             ECAN_Receive@RxMessage 003C                 ?_SysNormalWaitSleep 0026  
                   ___lwdiv@divisor 00B7                     ___lwdiv@counter 00B9  
                          __ptext10 121C                            __ptext11 0C44  
                          __ptext20 1156                            __ptext12 09E2  
                          __ptext21 06D6                            __ptext13 0DFE  
                          __ptext22 0D7C                            __ptext14 0AB8  
                          __ptext23 11C6                            __ptext15 11FE  
                          __ptext24 107C                            __ptext16 117E  
                          __ptext17 10AE                            __ptext26 0E78  
                          __ptext18 1106                            __ptext19 112E  
                          __ptext28 08C2                __size_of_SetSysClock 0004  
                     __size_of_main 0018                        _TXB0SIDLbits 000F22  
              ??_SysNormalWaitSleep 0042                         _RXB0DLCbits 000F65  
                       _RXB0CONbits 000F60                        ?_CAN_SetMode 0026  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
             bsp_StartAutoTimer@_id 00B7             ?_ADC_GetConversionValue 00B5  
                     ?_ConfigTimer0 00CE                            intlevel1 0000  
                          intlevel2 0000         __end_of_ADC_StartConversion 11E6  
                  ___lldiv@dividend 00C1                         _TXB0DLCbits 000F25  
                       _TXB0CONbits 000F20                          _OSCCONbits 000FD3  
            __size_of_SysEnterSleep 005C                __end_of_ECAN_Receive 09E2  
                  ___lldiv@quotient 00C9      __end_of_ADC_GetConversionValue 10AE  
                    ??_ConfigTimer0 00D0           bsp_StartAutoTimer@_period 00B5  
            __size_of_Pedal_Process 05FC           __size_of_bsp_SoftTimerDec 0070  
                  ??_bsp_CheckTimer 00B5  
